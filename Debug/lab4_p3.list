
lab4_p3.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000bc  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000021fc  080000bc  080000bc  000100bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000028  080022b8  080022b8  000122b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .init_array   00000004  080022e0  080022e0  000122e0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .fini_array   00000004  080022e4  080022e4  000122e4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .data         00000010  20000000  080022e8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .bss          00000020  20000010  080022f8  00020010  2**2
                  ALLOC
  7 ._user_heap_stack 00000600  20000030  080022f8  00020030  2**0
                  ALLOC
  8 .ARM.attributes 00000028  00000000  00000000  00020010  2**0
                  CONTENTS, READONLY
  9 .debug_info   00001916  00000000  00000000  00020038  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev 00000542  00000000  00000000  0002194e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_aranges 00000140  00000000  00000000  00021e90  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_ranges 00000108  00000000  00000000  00021fd0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_line   0000120a  00000000  00000000  000220d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_str    00000ae4  00000000  00000000  000232e2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .comment      00000053  00000000  00000000  00023dc6  2**0
                  CONTENTS, READONLY
 16 .debug_frame  00000384  00000000  00000000  00023e1c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000bc <__do_global_dtors_aux>:
 80000bc:	b510      	push	{r4, lr}
 80000be:	4c06      	ldr	r4, [pc, #24]	; (80000d8 <__do_global_dtors_aux+0x1c>)
 80000c0:	7823      	ldrb	r3, [r4, #0]
 80000c2:	2b00      	cmp	r3, #0
 80000c4:	d107      	bne.n	80000d6 <__do_global_dtors_aux+0x1a>
 80000c6:	4b05      	ldr	r3, [pc, #20]	; (80000dc <__do_global_dtors_aux+0x20>)
 80000c8:	2b00      	cmp	r3, #0
 80000ca:	d002      	beq.n	80000d2 <__do_global_dtors_aux+0x16>
 80000cc:	4804      	ldr	r0, [pc, #16]	; (80000e0 <__do_global_dtors_aux+0x24>)
 80000ce:	e000      	b.n	80000d2 <__do_global_dtors_aux+0x16>
 80000d0:	bf00      	nop
 80000d2:	2301      	movs	r3, #1
 80000d4:	7023      	strb	r3, [r4, #0]
 80000d6:	bd10      	pop	{r4, pc}
 80000d8:	20000010 	.word	0x20000010
 80000dc:	00000000 	.word	0x00000000
 80000e0:	080022a0 	.word	0x080022a0

080000e4 <frame_dummy>:
 80000e4:	4b04      	ldr	r3, [pc, #16]	; (80000f8 <frame_dummy+0x14>)
 80000e6:	b510      	push	{r4, lr}
 80000e8:	2b00      	cmp	r3, #0
 80000ea:	d003      	beq.n	80000f4 <frame_dummy+0x10>
 80000ec:	4903      	ldr	r1, [pc, #12]	; (80000fc <frame_dummy+0x18>)
 80000ee:	4804      	ldr	r0, [pc, #16]	; (8000100 <frame_dummy+0x1c>)
 80000f0:	e000      	b.n	80000f4 <frame_dummy+0x10>
 80000f2:	bf00      	nop
 80000f4:	bd10      	pop	{r4, pc}
 80000f6:	46c0      	nop			; (mov r8, r8)
 80000f8:	00000000 	.word	0x00000000
 80000fc:	20000014 	.word	0x20000014
 8000100:	080022a0 	.word	0x080022a0

08000104 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8000104:	b580      	push	{r7, lr}
 8000106:	b082      	sub	sp, #8
 8000108:	af00      	add	r7, sp, #0
 800010a:	0002      	movs	r2, r0
 800010c:	1dfb      	adds	r3, r7, #7
 800010e:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 8000110:	1dfb      	adds	r3, r7, #7
 8000112:	781b      	ldrb	r3, [r3, #0]
 8000114:	2b7f      	cmp	r3, #127	; 0x7f
 8000116:	d809      	bhi.n	800012c <__NVIC_EnableIRQ+0x28>
  {
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000118:	1dfb      	adds	r3, r7, #7
 800011a:	781b      	ldrb	r3, [r3, #0]
 800011c:	001a      	movs	r2, r3
 800011e:	231f      	movs	r3, #31
 8000120:	401a      	ands	r2, r3
 8000122:	4b04      	ldr	r3, [pc, #16]	; (8000134 <__NVIC_EnableIRQ+0x30>)
 8000124:	2101      	movs	r1, #1
 8000126:	4091      	lsls	r1, r2
 8000128:	000a      	movs	r2, r1
 800012a:	601a      	str	r2, [r3, #0]
  }
}
 800012c:	46c0      	nop			; (mov r8, r8)
 800012e:	46bd      	mov	sp, r7
 8000130:	b002      	add	sp, #8
 8000132:	bd80      	pop	{r7, pc}
 8000134:	e000e100 	.word	0xe000e100

08000138 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8000138:	b590      	push	{r4, r7, lr}
 800013a:	b083      	sub	sp, #12
 800013c:	af00      	add	r7, sp, #0
 800013e:	0002      	movs	r2, r0
 8000140:	6039      	str	r1, [r7, #0]
 8000142:	1dfb      	adds	r3, r7, #7
 8000144:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 8000146:	1dfb      	adds	r3, r7, #7
 8000148:	781b      	ldrb	r3, [r3, #0]
 800014a:	2b7f      	cmp	r3, #127	; 0x7f
 800014c:	d828      	bhi.n	80001a0 <__NVIC_SetPriority+0x68>
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 800014e:	4a2f      	ldr	r2, [pc, #188]	; (800020c <__NVIC_SetPriority+0xd4>)
 8000150:	1dfb      	adds	r3, r7, #7
 8000152:	781b      	ldrb	r3, [r3, #0]
 8000154:	b25b      	sxtb	r3, r3
 8000156:	089b      	lsrs	r3, r3, #2
 8000158:	33c0      	adds	r3, #192	; 0xc0
 800015a:	009b      	lsls	r3, r3, #2
 800015c:	589b      	ldr	r3, [r3, r2]
 800015e:	1dfa      	adds	r2, r7, #7
 8000160:	7812      	ldrb	r2, [r2, #0]
 8000162:	0011      	movs	r1, r2
 8000164:	2203      	movs	r2, #3
 8000166:	400a      	ands	r2, r1
 8000168:	00d2      	lsls	r2, r2, #3
 800016a:	21ff      	movs	r1, #255	; 0xff
 800016c:	4091      	lsls	r1, r2
 800016e:	000a      	movs	r2, r1
 8000170:	43d2      	mvns	r2, r2
 8000172:	401a      	ands	r2, r3
 8000174:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8000176:	683b      	ldr	r3, [r7, #0]
 8000178:	019b      	lsls	r3, r3, #6
 800017a:	22ff      	movs	r2, #255	; 0xff
 800017c:	401a      	ands	r2, r3
 800017e:	1dfb      	adds	r3, r7, #7
 8000180:	781b      	ldrb	r3, [r3, #0]
 8000182:	0018      	movs	r0, r3
 8000184:	2303      	movs	r3, #3
 8000186:	4003      	ands	r3, r0
 8000188:	00db      	lsls	r3, r3, #3
 800018a:	409a      	lsls	r2, r3
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 800018c:	481f      	ldr	r0, [pc, #124]	; (800020c <__NVIC_SetPriority+0xd4>)
 800018e:	1dfb      	adds	r3, r7, #7
 8000190:	781b      	ldrb	r3, [r3, #0]
 8000192:	b25b      	sxtb	r3, r3
 8000194:	089b      	lsrs	r3, r3, #2
 8000196:	430a      	orrs	r2, r1
 8000198:	33c0      	adds	r3, #192	; 0xc0
 800019a:	009b      	lsls	r3, r3, #2
 800019c:	501a      	str	r2, [r3, r0]
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
}
 800019e:	e031      	b.n	8000204 <__NVIC_SetPriority+0xcc>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80001a0:	4a1b      	ldr	r2, [pc, #108]	; (8000210 <__NVIC_SetPriority+0xd8>)
 80001a2:	1dfb      	adds	r3, r7, #7
 80001a4:	781b      	ldrb	r3, [r3, #0]
 80001a6:	0019      	movs	r1, r3
 80001a8:	230f      	movs	r3, #15
 80001aa:	400b      	ands	r3, r1
 80001ac:	3b08      	subs	r3, #8
 80001ae:	089b      	lsrs	r3, r3, #2
 80001b0:	3306      	adds	r3, #6
 80001b2:	009b      	lsls	r3, r3, #2
 80001b4:	18d3      	adds	r3, r2, r3
 80001b6:	3304      	adds	r3, #4
 80001b8:	681b      	ldr	r3, [r3, #0]
 80001ba:	1dfa      	adds	r2, r7, #7
 80001bc:	7812      	ldrb	r2, [r2, #0]
 80001be:	0011      	movs	r1, r2
 80001c0:	2203      	movs	r2, #3
 80001c2:	400a      	ands	r2, r1
 80001c4:	00d2      	lsls	r2, r2, #3
 80001c6:	21ff      	movs	r1, #255	; 0xff
 80001c8:	4091      	lsls	r1, r2
 80001ca:	000a      	movs	r2, r1
 80001cc:	43d2      	mvns	r2, r2
 80001ce:	401a      	ands	r2, r3
 80001d0:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 80001d2:	683b      	ldr	r3, [r7, #0]
 80001d4:	019b      	lsls	r3, r3, #6
 80001d6:	22ff      	movs	r2, #255	; 0xff
 80001d8:	401a      	ands	r2, r3
 80001da:	1dfb      	adds	r3, r7, #7
 80001dc:	781b      	ldrb	r3, [r3, #0]
 80001de:	0018      	movs	r0, r3
 80001e0:	2303      	movs	r3, #3
 80001e2:	4003      	ands	r3, r0
 80001e4:	00db      	lsls	r3, r3, #3
 80001e6:	409a      	lsls	r2, r3
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80001e8:	4809      	ldr	r0, [pc, #36]	; (8000210 <__NVIC_SetPriority+0xd8>)
 80001ea:	1dfb      	adds	r3, r7, #7
 80001ec:	781b      	ldrb	r3, [r3, #0]
 80001ee:	001c      	movs	r4, r3
 80001f0:	230f      	movs	r3, #15
 80001f2:	4023      	ands	r3, r4
 80001f4:	3b08      	subs	r3, #8
 80001f6:	089b      	lsrs	r3, r3, #2
 80001f8:	430a      	orrs	r2, r1
 80001fa:	3306      	adds	r3, #6
 80001fc:	009b      	lsls	r3, r3, #2
 80001fe:	18c3      	adds	r3, r0, r3
 8000200:	3304      	adds	r3, #4
 8000202:	601a      	str	r2, [r3, #0]
}
 8000204:	46c0      	nop			; (mov r8, r8)
 8000206:	46bd      	mov	sp, r7
 8000208:	b003      	add	sp, #12
 800020a:	bd90      	pop	{r4, r7, pc}
 800020c:	e000e100 	.word	0xe000e100
 8000210:	e000ed00 	.word	0xe000ed00

08000214 <delay>:
#define LEDDELAY    1600000
#include "bsp.h"

volatile int sayac=0;

void delay(volatile uint32_t s) {
 8000214:	b580      	push	{r7, lr}
 8000216:	b082      	sub	sp, #8
 8000218:	af00      	add	r7, sp, #0
 800021a:	6078      	str	r0, [r7, #4]
    for(; s>0; s--);
 800021c:	e002      	b.n	8000224 <delay+0x10>
 800021e:	687b      	ldr	r3, [r7, #4]
 8000220:	3b01      	subs	r3, #1
 8000222:	607b      	str	r3, [r7, #4]
 8000224:	687b      	ldr	r3, [r7, #4]
 8000226:	2b00      	cmp	r3, #0
 8000228:	d1f9      	bne.n	800021e <delay+0xa>
}
 800022a:	46c0      	nop			; (mov r8, r8)
 800022c:	46c0      	nop			; (mov r8, r8)
 800022e:	46bd      	mov	sp, r7
 8000230:	b002      	add	sp, #8
 8000232:	bd80      	pop	{r7, pc}

08000234 <set_input>:



void set_input(int port, int pin){
 8000234:	b580      	push	{r7, lr}
 8000236:	b082      	sub	sp, #8
 8000238:	af00      	add	r7, sp, #0
 800023a:	6078      	str	r0, [r7, #4]
 800023c:	6039      	str	r1, [r7, #0]
	if(port==1){
 800023e:	687b      	ldr	r3, [r7, #4]
 8000240:	2b01      	cmp	r3, #1
 8000242:	d10c      	bne.n	800025e <set_input+0x2a>
		   GPIOA->MODER &= ~(3U << 2*pin); 	//ICERIYI SIFIRLAR YANI INPUT OLARAK AYARLAR --AND
 8000244:	23a0      	movs	r3, #160	; 0xa0
 8000246:	05db      	lsls	r3, r3, #23
 8000248:	681a      	ldr	r2, [r3, #0]
 800024a:	683b      	ldr	r3, [r7, #0]
 800024c:	005b      	lsls	r3, r3, #1
 800024e:	2103      	movs	r1, #3
 8000250:	4099      	lsls	r1, r3
 8000252:	000b      	movs	r3, r1
 8000254:	43d9      	mvns	r1, r3
 8000256:	23a0      	movs	r3, #160	; 0xa0
 8000258:	05db      	lsls	r3, r3, #23
 800025a:	400a      	ands	r2, r1
 800025c:	601a      	str	r2, [r3, #0]
	}
	if(port==2){
 800025e:	687b      	ldr	r3, [r7, #4]
 8000260:	2b02      	cmp	r3, #2
 8000262:	d10a      	bne.n	800027a <set_input+0x46>
		   GPIOB->MODER &= ~(3U << 2*pin); 	//ICERIYI SIFIRLAR YANI INPUT OLARAK AYARLAR --AND
 8000264:	4b07      	ldr	r3, [pc, #28]	; (8000284 <set_input+0x50>)
 8000266:	681a      	ldr	r2, [r3, #0]
 8000268:	683b      	ldr	r3, [r7, #0]
 800026a:	005b      	lsls	r3, r3, #1
 800026c:	2103      	movs	r1, #3
 800026e:	4099      	lsls	r1, r3
 8000270:	000b      	movs	r3, r1
 8000272:	43d9      	mvns	r1, r3
 8000274:	4b03      	ldr	r3, [pc, #12]	; (8000284 <set_input+0x50>)
 8000276:	400a      	ands	r2, r1
 8000278:	601a      	str	r2, [r3, #0]
	}

}
 800027a:	46c0      	nop			; (mov r8, r8)
 800027c:	46bd      	mov	sp, r7
 800027e:	b002      	add	sp, #8
 8000280:	bd80      	pop	{r7, pc}
 8000282:	46c0      	nop			; (mov r8, r8)
 8000284:	50000400 	.word	0x50000400

08000288 <set_output>:
    GPIOB -> ODR &= ~(1U<< pin);	//nand
    break;
  }
}

void set_output(int port,int pin){
 8000288:	b580      	push	{r7, lr}
 800028a:	b082      	sub	sp, #8
 800028c:	af00      	add	r7, sp, #0
 800028e:	6078      	str	r0, [r7, #4]
 8000290:	6039      	str	r1, [r7, #0]
	if(port==1){
 8000292:	687b      	ldr	r3, [r7, #4]
 8000294:	2b01      	cmp	r3, #1
 8000296:	d117      	bne.n	80002c8 <set_output+0x40>
		   GPIOA->MODER &= ~(3U << 2*pin); 	//ICERIYI SIFIRLAR YANI INPUT OLARAK AYARLAR --AND
 8000298:	23a0      	movs	r3, #160	; 0xa0
 800029a:	05db      	lsls	r3, r3, #23
 800029c:	681a      	ldr	r2, [r3, #0]
 800029e:	683b      	ldr	r3, [r7, #0]
 80002a0:	005b      	lsls	r3, r3, #1
 80002a2:	2103      	movs	r1, #3
 80002a4:	4099      	lsls	r1, r3
 80002a6:	000b      	movs	r3, r1
 80002a8:	43d9      	mvns	r1, r3
 80002aa:	23a0      	movs	r3, #160	; 0xa0
 80002ac:	05db      	lsls	r3, r3, #23
 80002ae:	400a      	ands	r2, r1
 80002b0:	601a      	str	r2, [r3, #0]
		    GPIOA->MODER |= (1U << 2*pin);	//01 YAPTI YANI OUTPUT MODU ACTI --OR
 80002b2:	23a0      	movs	r3, #160	; 0xa0
 80002b4:	05db      	lsls	r3, r3, #23
 80002b6:	6819      	ldr	r1, [r3, #0]
 80002b8:	683b      	ldr	r3, [r7, #0]
 80002ba:	005b      	lsls	r3, r3, #1
 80002bc:	2201      	movs	r2, #1
 80002be:	409a      	lsls	r2, r3
 80002c0:	23a0      	movs	r3, #160	; 0xa0
 80002c2:	05db      	lsls	r3, r3, #23
 80002c4:	430a      	orrs	r2, r1
 80002c6:	601a      	str	r2, [r3, #0]
	}
	if(port==2){
 80002c8:	687b      	ldr	r3, [r7, #4]
 80002ca:	2b02      	cmp	r3, #2
 80002cc:	d113      	bne.n	80002f6 <set_output+0x6e>
		   GPIOB->MODER &= ~(3U << 2*pin); 	//ICERIYI SIFIRLAR YANI INPUT OLARAK AYARLAR --AND
 80002ce:	4b0c      	ldr	r3, [pc, #48]	; (8000300 <set_output+0x78>)
 80002d0:	681a      	ldr	r2, [r3, #0]
 80002d2:	683b      	ldr	r3, [r7, #0]
 80002d4:	005b      	lsls	r3, r3, #1
 80002d6:	2103      	movs	r1, #3
 80002d8:	4099      	lsls	r1, r3
 80002da:	000b      	movs	r3, r1
 80002dc:	43d9      	mvns	r1, r3
 80002de:	4b08      	ldr	r3, [pc, #32]	; (8000300 <set_output+0x78>)
 80002e0:	400a      	ands	r2, r1
 80002e2:	601a      	str	r2, [r3, #0]
		    GPIOB->MODER |= (1U << 2*pin);	//01 YAPTI YANI OUTPUT MODU ACTI --OR
 80002e4:	4b06      	ldr	r3, [pc, #24]	; (8000300 <set_output+0x78>)
 80002e6:	6819      	ldr	r1, [r3, #0]
 80002e8:	683b      	ldr	r3, [r7, #0]
 80002ea:	005b      	lsls	r3, r3, #1
 80002ec:	2201      	movs	r2, #1
 80002ee:	409a      	lsls	r2, r3
 80002f0:	4b03      	ldr	r3, [pc, #12]	; (8000300 <set_output+0x78>)
 80002f2:	430a      	orrs	r2, r1
 80002f4:	601a      	str	r2, [r3, #0]
	}
}
 80002f6:	46c0      	nop			; (mov r8, r8)
 80002f8:	46bd      	mov	sp, r7
 80002fa:	b002      	add	sp, #8
 80002fc:	bd80      	pop	{r7, pc}
 80002fe:	46c0      	nop			; (mov r8, r8)
 8000300:	50000400 	.word	0x50000400

08000304 <init_ext_interrupt>:
    GPIOB -> ODR ^= (1U<< pin);
    break;
  }
}

void init_ext_interrupt(){ // initializes external interrupts for keypad
 8000304:	b580      	push	{r7, lr}
 8000306:	af00      	add	r7, sp, #0
  //PA0
  EXTI->EXTICR[0] |= (0U << 0);
 8000308:	4a0d      	ldr	r2, [pc, #52]	; (8000340 <init_ext_interrupt+0x3c>)
 800030a:	4b0d      	ldr	r3, [pc, #52]	; (8000340 <init_ext_interrupt+0x3c>)
 800030c:	6e12      	ldr	r2, [r2, #96]	; 0x60
 800030e:	661a      	str	r2, [r3, #96]	; 0x60
  EXTI->RTSR1 |= (1U << 0);
 8000310:	4b0b      	ldr	r3, [pc, #44]	; (8000340 <init_ext_interrupt+0x3c>)
 8000312:	681a      	ldr	r2, [r3, #0]
 8000314:	4b0a      	ldr	r3, [pc, #40]	; (8000340 <init_ext_interrupt+0x3c>)
 8000316:	2101      	movs	r1, #1
 8000318:	430a      	orrs	r2, r1
 800031a:	601a      	str	r2, [r3, #0]
  EXTI->IMR1 |= (1U << 0);
 800031c:	4a08      	ldr	r2, [pc, #32]	; (8000340 <init_ext_interrupt+0x3c>)
 800031e:	2380      	movs	r3, #128	; 0x80
 8000320:	58d3      	ldr	r3, [r2, r3]
 8000322:	4907      	ldr	r1, [pc, #28]	; (8000340 <init_ext_interrupt+0x3c>)
 8000324:	2201      	movs	r2, #1
 8000326:	4313      	orrs	r3, r2
 8000328:	2280      	movs	r2, #128	; 0x80
 800032a:	508b      	str	r3, [r1, r2]
  NVIC_SetPriority(EXTI0_1_IRQn, 0);
 800032c:	2100      	movs	r1, #0
 800032e:	2005      	movs	r0, #5
 8000330:	f7ff ff02 	bl	8000138 <__NVIC_SetPriority>
  NVIC_EnableIRQ(EXTI0_1_IRQn);
 8000334:	2005      	movs	r0, #5
 8000336:	f7ff fee5 	bl	8000104 <__NVIC_EnableIRQ>
}
 800033a:	46c0      	nop			; (mov r8, r8)
 800033c:	46bd      	mov	sp, r7
 800033e:	bd80      	pop	{r7, pc}
 8000340:	40021800 	.word	0x40021800

08000344 <EXTI0_1_IRQHandler>:

void EXTI0_1_IRQHandler(){
 8000344:	b580      	push	{r7, lr}
 8000346:	af00      	add	r7, sp, #0
	sayac=sayac+1;
 8000348:	4b09      	ldr	r3, [pc, #36]	; (8000370 <EXTI0_1_IRQHandler+0x2c>)
 800034a:	681b      	ldr	r3, [r3, #0]
 800034c:	1c5a      	adds	r2, r3, #1
 800034e:	4b08      	ldr	r3, [pc, #32]	; (8000370 <EXTI0_1_IRQHandler+0x2c>)
 8000350:	601a      	str	r2, [r3, #0]
	EXTI -> RPR1 |= (1U<< 0);
 8000352:	4b08      	ldr	r3, [pc, #32]	; (8000374 <EXTI0_1_IRQHandler+0x30>)
 8000354:	68da      	ldr	r2, [r3, #12]
 8000356:	4b07      	ldr	r3, [pc, #28]	; (8000374 <EXTI0_1_IRQHandler+0x30>)
 8000358:	2101      	movs	r1, #1
 800035a:	430a      	orrs	r2, r1
 800035c:	60da      	str	r2, [r3, #12]
	EXTI -> RPR1 |= (1U<< 1);
 800035e:	4b05      	ldr	r3, [pc, #20]	; (8000374 <EXTI0_1_IRQHandler+0x30>)
 8000360:	68da      	ldr	r2, [r3, #12]
 8000362:	4b04      	ldr	r3, [pc, #16]	; (8000374 <EXTI0_1_IRQHandler+0x30>)
 8000364:	2102      	movs	r1, #2
 8000366:	430a      	orrs	r2, r1
 8000368:	60da      	str	r2, [r3, #12]

	}
 800036a:	46c0      	nop			; (mov r8, r8)
 800036c:	46bd      	mov	sp, r7
 800036e:	bd80      	pop	{r7, pc}
 8000370:	2000002c 	.word	0x2000002c
 8000374:	40021800 	.word	0x40021800

08000378 <D1_digit_with_delay>:
    delay(500);
    clearSSD();
}

void D1_digit_with_delay(uint32_t x,volatile uint32_t f) // I'll send the number D1 to the SSD
{
 8000378:	b580      	push	{r7, lr}
 800037a:	b082      	sub	sp, #8
 800037c:	af00      	add	r7, sp, #0
 800037e:	6078      	str	r0, [r7, #4]
 8000380:	6039      	str	r1, [r7, #0]
    GPIOB->ODR |= (1U << 4);
 8000382:	4b12      	ldr	r3, [pc, #72]	; (80003cc <D1_digit_with_delay+0x54>)
 8000384:	695a      	ldr	r2, [r3, #20]
 8000386:	4b11      	ldr	r3, [pc, #68]	; (80003cc <D1_digit_with_delay+0x54>)
 8000388:	2110      	movs	r1, #16
 800038a:	430a      	orrs	r2, r1
 800038c:	615a      	str	r2, [r3, #20]
    GPIOB->ODR &= ~(1U << 5);
 800038e:	4b0f      	ldr	r3, [pc, #60]	; (80003cc <D1_digit_with_delay+0x54>)
 8000390:	695a      	ldr	r2, [r3, #20]
 8000392:	4b0e      	ldr	r3, [pc, #56]	; (80003cc <D1_digit_with_delay+0x54>)
 8000394:	2120      	movs	r1, #32
 8000396:	438a      	bics	r2, r1
 8000398:	615a      	str	r2, [r3, #20]
    GPIOB->ODR &= ~(1U << 9);
 800039a:	4b0c      	ldr	r3, [pc, #48]	; (80003cc <D1_digit_with_delay+0x54>)
 800039c:	695a      	ldr	r2, [r3, #20]
 800039e:	4b0b      	ldr	r3, [pc, #44]	; (80003cc <D1_digit_with_delay+0x54>)
 80003a0:	490b      	ldr	r1, [pc, #44]	; (80003d0 <D1_digit_with_delay+0x58>)
 80003a2:	400a      	ands	r2, r1
 80003a4:	615a      	str	r2, [r3, #20]
    GPIOB->ODR &= ~(1U << 6);
 80003a6:	4b09      	ldr	r3, [pc, #36]	; (80003cc <D1_digit_with_delay+0x54>)
 80003a8:	695a      	ldr	r2, [r3, #20]
 80003aa:	4b08      	ldr	r3, [pc, #32]	; (80003cc <D1_digit_with_delay+0x54>)
 80003ac:	2140      	movs	r1, #64	; 0x40
 80003ae:	438a      	bics	r2, r1
 80003b0:	615a      	str	r2, [r3, #20]
    setSSD(x);
 80003b2:	687b      	ldr	r3, [r7, #4]
 80003b4:	0018      	movs	r0, r3
 80003b6:	f000 f8dd 	bl	8000574 <setSSD>
    delay(f);
 80003ba:	683b      	ldr	r3, [r7, #0]
 80003bc:	0018      	movs	r0, r3
 80003be:	f7ff ff29 	bl	8000214 <delay>

}
 80003c2:	46c0      	nop			; (mov r8, r8)
 80003c4:	46bd      	mov	sp, r7
 80003c6:	b002      	add	sp, #8
 80003c8:	bd80      	pop	{r7, pc}
 80003ca:	46c0      	nop			; (mov r8, r8)
 80003cc:	50000400 	.word	0x50000400
 80003d0:	fffffdff 	.word	0xfffffdff

080003d4 <D2_digit_with_delay>:
    delay(500);
    clearSSD();
}

void D2_digit_with_delay(uint32_t x,volatile uint32_t f)// I'll send the number D2 to the SSD
{
 80003d4:	b580      	push	{r7, lr}
 80003d6:	b082      	sub	sp, #8
 80003d8:	af00      	add	r7, sp, #0
 80003da:	6078      	str	r0, [r7, #4]
 80003dc:	6039      	str	r1, [r7, #0]
    GPIOB->ODR &= ~(1U << 4);
 80003de:	4b12      	ldr	r3, [pc, #72]	; (8000428 <D2_digit_with_delay+0x54>)
 80003e0:	695a      	ldr	r2, [r3, #20]
 80003e2:	4b11      	ldr	r3, [pc, #68]	; (8000428 <D2_digit_with_delay+0x54>)
 80003e4:	2110      	movs	r1, #16
 80003e6:	438a      	bics	r2, r1
 80003e8:	615a      	str	r2, [r3, #20]
    GPIOB->ODR |= (1U << 5);
 80003ea:	4b0f      	ldr	r3, [pc, #60]	; (8000428 <D2_digit_with_delay+0x54>)
 80003ec:	695a      	ldr	r2, [r3, #20]
 80003ee:	4b0e      	ldr	r3, [pc, #56]	; (8000428 <D2_digit_with_delay+0x54>)
 80003f0:	2120      	movs	r1, #32
 80003f2:	430a      	orrs	r2, r1
 80003f4:	615a      	str	r2, [r3, #20]
    GPIOB->ODR &= ~(1U << 9);
 80003f6:	4b0c      	ldr	r3, [pc, #48]	; (8000428 <D2_digit_with_delay+0x54>)
 80003f8:	695a      	ldr	r2, [r3, #20]
 80003fa:	4b0b      	ldr	r3, [pc, #44]	; (8000428 <D2_digit_with_delay+0x54>)
 80003fc:	490b      	ldr	r1, [pc, #44]	; (800042c <D2_digit_with_delay+0x58>)
 80003fe:	400a      	ands	r2, r1
 8000400:	615a      	str	r2, [r3, #20]
    GPIOB->ODR &= ~(1U << 6);
 8000402:	4b09      	ldr	r3, [pc, #36]	; (8000428 <D2_digit_with_delay+0x54>)
 8000404:	695a      	ldr	r2, [r3, #20]
 8000406:	4b08      	ldr	r3, [pc, #32]	; (8000428 <D2_digit_with_delay+0x54>)
 8000408:	2140      	movs	r1, #64	; 0x40
 800040a:	438a      	bics	r2, r1
 800040c:	615a      	str	r2, [r3, #20]


    setSSD(x);
 800040e:	687b      	ldr	r3, [r7, #4]
 8000410:	0018      	movs	r0, r3
 8000412:	f000 f8af 	bl	8000574 <setSSD>
    delay(f);
 8000416:	683b      	ldr	r3, [r7, #0]
 8000418:	0018      	movs	r0, r3
 800041a:	f7ff fefb 	bl	8000214 <delay>

}
 800041e:	46c0      	nop			; (mov r8, r8)
 8000420:	46bd      	mov	sp, r7
 8000422:	b002      	add	sp, #8
 8000424:	bd80      	pop	{r7, pc}
 8000426:	46c0      	nop			; (mov r8, r8)
 8000428:	50000400 	.word	0x50000400
 800042c:	fffffdff 	.word	0xfffffdff

08000430 <D3_digit_with_delay>:
    delay(500);
    clearSSD();
}

void D3_digit_with_delay(uint32_t x,volatile uint32_t f)// I'll send the number D3 to the SSD
{
 8000430:	b580      	push	{r7, lr}
 8000432:	b082      	sub	sp, #8
 8000434:	af00      	add	r7, sp, #0
 8000436:	6078      	str	r0, [r7, #4]
 8000438:	6039      	str	r1, [r7, #0]
    GPIOB->ODR &= ~(1U << 4);
 800043a:	4b12      	ldr	r3, [pc, #72]	; (8000484 <D3_digit_with_delay+0x54>)
 800043c:	695a      	ldr	r2, [r3, #20]
 800043e:	4b11      	ldr	r3, [pc, #68]	; (8000484 <D3_digit_with_delay+0x54>)
 8000440:	2110      	movs	r1, #16
 8000442:	438a      	bics	r2, r1
 8000444:	615a      	str	r2, [r3, #20]
    GPIOB->ODR &= ~(1U << 5);
 8000446:	4b0f      	ldr	r3, [pc, #60]	; (8000484 <D3_digit_with_delay+0x54>)
 8000448:	695a      	ldr	r2, [r3, #20]
 800044a:	4b0e      	ldr	r3, [pc, #56]	; (8000484 <D3_digit_with_delay+0x54>)
 800044c:	2120      	movs	r1, #32
 800044e:	438a      	bics	r2, r1
 8000450:	615a      	str	r2, [r3, #20]
    GPIOB->ODR |= (1U << 9);
 8000452:	4b0c      	ldr	r3, [pc, #48]	; (8000484 <D3_digit_with_delay+0x54>)
 8000454:	695a      	ldr	r2, [r3, #20]
 8000456:	4b0b      	ldr	r3, [pc, #44]	; (8000484 <D3_digit_with_delay+0x54>)
 8000458:	2180      	movs	r1, #128	; 0x80
 800045a:	0089      	lsls	r1, r1, #2
 800045c:	430a      	orrs	r2, r1
 800045e:	615a      	str	r2, [r3, #20]
    GPIOB->ODR &= ~(1U << 6);
 8000460:	4b08      	ldr	r3, [pc, #32]	; (8000484 <D3_digit_with_delay+0x54>)
 8000462:	695a      	ldr	r2, [r3, #20]
 8000464:	4b07      	ldr	r3, [pc, #28]	; (8000484 <D3_digit_with_delay+0x54>)
 8000466:	2140      	movs	r1, #64	; 0x40
 8000468:	438a      	bics	r2, r1
 800046a:	615a      	str	r2, [r3, #20]
    setSSD(x);
 800046c:	687b      	ldr	r3, [r7, #4]
 800046e:	0018      	movs	r0, r3
 8000470:	f000 f880 	bl	8000574 <setSSD>
    delay(f);
 8000474:	683b      	ldr	r3, [r7, #0]
 8000476:	0018      	movs	r0, r3
 8000478:	f7ff fecc 	bl	8000214 <delay>

}
 800047c:	46c0      	nop			; (mov r8, r8)
 800047e:	46bd      	mov	sp, r7
 8000480:	b002      	add	sp, #8
 8000482:	bd80      	pop	{r7, pc}
 8000484:	50000400 	.word	0x50000400

08000488 <D4_digit_with_delay>:
    delay(500);

}

void D4_digit_with_delay(uint32_t x,volatile uint32_t f)// I'll send the number D4 to the SSD
{
 8000488:	b580      	push	{r7, lr}
 800048a:	b082      	sub	sp, #8
 800048c:	af00      	add	r7, sp, #0
 800048e:	6078      	str	r0, [r7, #4]
 8000490:	6039      	str	r1, [r7, #0]
    GPIOB->ODR &= ~(1U << 4);
 8000492:	4b12      	ldr	r3, [pc, #72]	; (80004dc <D4_digit_with_delay+0x54>)
 8000494:	695a      	ldr	r2, [r3, #20]
 8000496:	4b11      	ldr	r3, [pc, #68]	; (80004dc <D4_digit_with_delay+0x54>)
 8000498:	2110      	movs	r1, #16
 800049a:	438a      	bics	r2, r1
 800049c:	615a      	str	r2, [r3, #20]
    GPIOB->ODR &= ~(1U << 5);
 800049e:	4b0f      	ldr	r3, [pc, #60]	; (80004dc <D4_digit_with_delay+0x54>)
 80004a0:	695a      	ldr	r2, [r3, #20]
 80004a2:	4b0e      	ldr	r3, [pc, #56]	; (80004dc <D4_digit_with_delay+0x54>)
 80004a4:	2120      	movs	r1, #32
 80004a6:	438a      	bics	r2, r1
 80004a8:	615a      	str	r2, [r3, #20]
    GPIOB->ODR &= ~(1U << 9);
 80004aa:	4b0c      	ldr	r3, [pc, #48]	; (80004dc <D4_digit_with_delay+0x54>)
 80004ac:	695a      	ldr	r2, [r3, #20]
 80004ae:	4b0b      	ldr	r3, [pc, #44]	; (80004dc <D4_digit_with_delay+0x54>)
 80004b0:	490b      	ldr	r1, [pc, #44]	; (80004e0 <D4_digit_with_delay+0x58>)
 80004b2:	400a      	ands	r2, r1
 80004b4:	615a      	str	r2, [r3, #20]
    GPIOB->ODR |= (1U << 6);
 80004b6:	4b09      	ldr	r3, [pc, #36]	; (80004dc <D4_digit_with_delay+0x54>)
 80004b8:	695a      	ldr	r2, [r3, #20]
 80004ba:	4b08      	ldr	r3, [pc, #32]	; (80004dc <D4_digit_with_delay+0x54>)
 80004bc:	2140      	movs	r1, #64	; 0x40
 80004be:	430a      	orrs	r2, r1
 80004c0:	615a      	str	r2, [r3, #20]
    setSSD(x);
 80004c2:	687b      	ldr	r3, [r7, #4]
 80004c4:	0018      	movs	r0, r3
 80004c6:	f000 f855 	bl	8000574 <setSSD>
    delay(f);
 80004ca:	683b      	ldr	r3, [r7, #0]
 80004cc:	0018      	movs	r0, r3
 80004ce:	f7ff fea1 	bl	8000214 <delay>

}
 80004d2:	46c0      	nop			; (mov r8, r8)
 80004d4:	46bd      	mov	sp, r7
 80004d6:	b002      	add	sp, #8
 80004d8:	bd80      	pop	{r7, pc}
 80004da:	46c0      	nop			; (mov r8, r8)
 80004dc:	50000400 	.word	0x50000400
 80004e0:	fffffdff 	.word	0xfffffdff

080004e4 <clearSSD>:


void clearSSD(void) //the common anode was cleaned by giving SSD 1.
{
 80004e4:	b580      	push	{r7, lr}
 80004e6:	af00      	add	r7, sp, #0
    GPIOA->ODR |= (1U << 8);  //PA0 A
 80004e8:	23a0      	movs	r3, #160	; 0xa0
 80004ea:	05db      	lsls	r3, r3, #23
 80004ec:	695a      	ldr	r2, [r3, #20]
 80004ee:	23a0      	movs	r3, #160	; 0xa0
 80004f0:	05db      	lsls	r3, r3, #23
 80004f2:	2180      	movs	r1, #128	; 0x80
 80004f4:	0049      	lsls	r1, r1, #1
 80004f6:	430a      	orrs	r2, r1
 80004f8:	615a      	str	r2, [r3, #20]
    GPIOA->ODR |= (1U << 11);  //PA1 B
 80004fa:	23a0      	movs	r3, #160	; 0xa0
 80004fc:	05db      	lsls	r3, r3, #23
 80004fe:	695a      	ldr	r2, [r3, #20]
 8000500:	23a0      	movs	r3, #160	; 0xa0
 8000502:	05db      	lsls	r3, r3, #23
 8000504:	2180      	movs	r1, #128	; 0x80
 8000506:	0109      	lsls	r1, r1, #4
 8000508:	430a      	orrs	r2, r1
 800050a:	615a      	str	r2, [r3, #20]
    GPIOA->ODR |= (1U << 12);  //PA4 C
 800050c:	23a0      	movs	r3, #160	; 0xa0
 800050e:	05db      	lsls	r3, r3, #23
 8000510:	695a      	ldr	r2, [r3, #20]
 8000512:	23a0      	movs	r3, #160	; 0xa0
 8000514:	05db      	lsls	r3, r3, #23
 8000516:	2180      	movs	r1, #128	; 0x80
 8000518:	0149      	lsls	r1, r1, #5
 800051a:	430a      	orrs	r2, r1
 800051c:	615a      	str	r2, [r3, #20]
    GPIOA->ODR |= (1U << 5);  //PA5 D
 800051e:	23a0      	movs	r3, #160	; 0xa0
 8000520:	05db      	lsls	r3, r3, #23
 8000522:	695a      	ldr	r2, [r3, #20]
 8000524:	23a0      	movs	r3, #160	; 0xa0
 8000526:	05db      	lsls	r3, r3, #23
 8000528:	2120      	movs	r1, #32
 800052a:	430a      	orrs	r2, r1
 800052c:	615a      	str	r2, [r3, #20]
    GPIOA->ODR |= (1U << 4); //PA12 E
 800052e:	23a0      	movs	r3, #160	; 0xa0
 8000530:	05db      	lsls	r3, r3, #23
 8000532:	695a      	ldr	r2, [r3, #20]
 8000534:	23a0      	movs	r3, #160	; 0xa0
 8000536:	05db      	lsls	r3, r3, #23
 8000538:	2110      	movs	r1, #16
 800053a:	430a      	orrs	r2, r1
 800053c:	615a      	str	r2, [r3, #20]
    GPIOA->ODR |= (1U << 1); //PA11 F
 800053e:	23a0      	movs	r3, #160	; 0xa0
 8000540:	05db      	lsls	r3, r3, #23
 8000542:	695a      	ldr	r2, [r3, #20]
 8000544:	23a0      	movs	r3, #160	; 0xa0
 8000546:	05db      	lsls	r3, r3, #23
 8000548:	2102      	movs	r1, #2
 800054a:	430a      	orrs	r2, r1
 800054c:	615a      	str	r2, [r3, #20]
    GPIOA->ODR |= (1U << 6);  //PA6 G
 800054e:	23a0      	movs	r3, #160	; 0xa0
 8000550:	05db      	lsls	r3, r3, #23
 8000552:	695a      	ldr	r2, [r3, #20]
 8000554:	23a0      	movs	r3, #160	; 0xa0
 8000556:	05db      	lsls	r3, r3, #23
 8000558:	2140      	movs	r1, #64	; 0x40
 800055a:	430a      	orrs	r2, r1
 800055c:	615a      	str	r2, [r3, #20]
    GPIOA->ODR |= (1U << 7);  //PA6 G
 800055e:	23a0      	movs	r3, #160	; 0xa0
 8000560:	05db      	lsls	r3, r3, #23
 8000562:	695a      	ldr	r2, [r3, #20]
 8000564:	23a0      	movs	r3, #160	; 0xa0
 8000566:	05db      	lsls	r3, r3, #23
 8000568:	2180      	movs	r1, #128	; 0x80
 800056a:	430a      	orrs	r2, r1
 800056c:	615a      	str	r2, [r3, #20]
}
 800056e:	46c0      	nop			; (mov r8, r8)
 8000570:	46bd      	mov	sp, r7
 8000572:	bd80      	pop	{r7, pc}

08000574 <setSSD>:


void setSSD(int print) // we have to give 0 to light the LEDs
{
 8000574:	b580      	push	{r7, lr}
 8000576:	b082      	sub	sp, #8
 8000578:	af00      	add	r7, sp, #0
 800057a:	6078      	str	r0, [r7, #4]
    clearSSD(); //clean it up if there's any residue.
 800057c:	f7ff ffb2 	bl	80004e4 <clearSSD>
 8000580:	687b      	ldr	r3, [r7, #4]
 8000582:	2b09      	cmp	r3, #9
 8000584:	d85f      	bhi.n	8000646 <setSSD+0xd2>
 8000586:	687b      	ldr	r3, [r7, #4]
 8000588:	009a      	lsls	r2, r3, #2
 800058a:	4b31      	ldr	r3, [pc, #196]	; (8000650 <setSSD+0xdc>)
 800058c:	18d3      	adds	r3, r2, r3
 800058e:	681b      	ldr	r3, [r3, #0]
 8000590:	469f      	mov	pc, r3
    switch (print)
    {
    case 0://0

            GPIOA -> ODR &= ~(0x11D2);
 8000592:	23a0      	movs	r3, #160	; 0xa0
 8000594:	05db      	lsls	r3, r3, #23
 8000596:	695a      	ldr	r2, [r3, #20]
 8000598:	23a0      	movs	r3, #160	; 0xa0
 800059a:	05db      	lsls	r3, r3, #23
 800059c:	492d      	ldr	r1, [pc, #180]	; (8000654 <setSSD+0xe0>)
 800059e:	400a      	ands	r2, r1
 80005a0:	615a      	str	r2, [r3, #20]

        break;
 80005a2:	e050      	b.n	8000646 <setSSD+0xd2>

    case 1://1
              GPIOA -> ODR &= ~(0x1080);
 80005a4:	23a0      	movs	r3, #160	; 0xa0
 80005a6:	05db      	lsls	r3, r3, #23
 80005a8:	695a      	ldr	r2, [r3, #20]
 80005aa:	23a0      	movs	r3, #160	; 0xa0
 80005ac:	05db      	lsls	r3, r3, #23
 80005ae:	492a      	ldr	r1, [pc, #168]	; (8000658 <setSSD+0xe4>)
 80005b0:	400a      	ands	r2, r1
 80005b2:	615a      	str	r2, [r3, #20]
        break;
 80005b4:	e047      	b.n	8000646 <setSSD+0xd2>

    case 2://2
            GPIOA -> ODR &= ~(0x992);
 80005b6:	23a0      	movs	r3, #160	; 0xa0
 80005b8:	05db      	lsls	r3, r3, #23
 80005ba:	695a      	ldr	r2, [r3, #20]
 80005bc:	23a0      	movs	r3, #160	; 0xa0
 80005be:	05db      	lsls	r3, r3, #23
 80005c0:	4926      	ldr	r1, [pc, #152]	; (800065c <setSSD+0xe8>)
 80005c2:	400a      	ands	r2, r1
 80005c4:	615a      	str	r2, [r3, #20]
        break;
 80005c6:	e03e      	b.n	8000646 <setSSD+0xd2>

    case 3://3
             GPIOA -> ODR &= ~(0x1990);
 80005c8:	23a0      	movs	r3, #160	; 0xa0
 80005ca:	05db      	lsls	r3, r3, #23
 80005cc:	695a      	ldr	r2, [r3, #20]
 80005ce:	23a0      	movs	r3, #160	; 0xa0
 80005d0:	05db      	lsls	r3, r3, #23
 80005d2:	4923      	ldr	r1, [pc, #140]	; (8000660 <setSSD+0xec>)
 80005d4:	400a      	ands	r2, r1
 80005d6:	615a      	str	r2, [r3, #20]
        break;
 80005d8:	e035      	b.n	8000646 <setSSD+0xd2>

    case 4://4
              GPIOA -> ODR &= ~(0x18C0);
 80005da:	23a0      	movs	r3, #160	; 0xa0
 80005dc:	05db      	lsls	r3, r3, #23
 80005de:	695a      	ldr	r2, [r3, #20]
 80005e0:	23a0      	movs	r3, #160	; 0xa0
 80005e2:	05db      	lsls	r3, r3, #23
 80005e4:	491f      	ldr	r1, [pc, #124]	; (8000664 <setSSD+0xf0>)
 80005e6:	400a      	ands	r2, r1
 80005e8:	615a      	str	r2, [r3, #20]
        break;
 80005ea:	e02c      	b.n	8000646 <setSSD+0xd2>

    case 5://5
          GPIOA -> ODR &= ~(0x1950);
 80005ec:	23a0      	movs	r3, #160	; 0xa0
 80005ee:	05db      	lsls	r3, r3, #23
 80005f0:	695a      	ldr	r2, [r3, #20]
 80005f2:	23a0      	movs	r3, #160	; 0xa0
 80005f4:	05db      	lsls	r3, r3, #23
 80005f6:	491c      	ldr	r1, [pc, #112]	; (8000668 <setSSD+0xf4>)
 80005f8:	400a      	ands	r2, r1
 80005fa:	615a      	str	r2, [r3, #20]
        break;
 80005fc:	e023      	b.n	8000646 <setSSD+0xd2>

    case 6://6
              GPIOA -> ODR &= ~(0x1952);
 80005fe:	23a0      	movs	r3, #160	; 0xa0
 8000600:	05db      	lsls	r3, r3, #23
 8000602:	695a      	ldr	r2, [r3, #20]
 8000604:	23a0      	movs	r3, #160	; 0xa0
 8000606:	05db      	lsls	r3, r3, #23
 8000608:	4918      	ldr	r1, [pc, #96]	; (800066c <setSSD+0xf8>)
 800060a:	400a      	ands	r2, r1
 800060c:	615a      	str	r2, [r3, #20]
        break;
 800060e:	e01a      	b.n	8000646 <setSSD+0xd2>

    case 7://7
              GPIOA -> ODR &= ~(0x1180);
 8000610:	23a0      	movs	r3, #160	; 0xa0
 8000612:	05db      	lsls	r3, r3, #23
 8000614:	695a      	ldr	r2, [r3, #20]
 8000616:	23a0      	movs	r3, #160	; 0xa0
 8000618:	05db      	lsls	r3, r3, #23
 800061a:	4915      	ldr	r1, [pc, #84]	; (8000670 <setSSD+0xfc>)
 800061c:	400a      	ands	r2, r1
 800061e:	615a      	str	r2, [r3, #20]
        break;
 8000620:	e011      	b.n	8000646 <setSSD+0xd2>

    case 8://8
              GPIOA -> ODR &= ~(0x19D2);
 8000622:	23a0      	movs	r3, #160	; 0xa0
 8000624:	05db      	lsls	r3, r3, #23
 8000626:	695a      	ldr	r2, [r3, #20]
 8000628:	23a0      	movs	r3, #160	; 0xa0
 800062a:	05db      	lsls	r3, r3, #23
 800062c:	4911      	ldr	r1, [pc, #68]	; (8000674 <setSSD+0x100>)
 800062e:	400a      	ands	r2, r1
 8000630:	615a      	str	r2, [r3, #20]
        break;
 8000632:	e008      	b.n	8000646 <setSSD+0xd2>

    case 9://9
              GPIOA -> ODR &= ~(0x19D0);
 8000634:	23a0      	movs	r3, #160	; 0xa0
 8000636:	05db      	lsls	r3, r3, #23
 8000638:	695a      	ldr	r2, [r3, #20]
 800063a:	23a0      	movs	r3, #160	; 0xa0
 800063c:	05db      	lsls	r3, r3, #23
 800063e:	490e      	ldr	r1, [pc, #56]	; (8000678 <setSSD+0x104>)
 8000640:	400a      	ands	r2, r1
 8000642:	615a      	str	r2, [r3, #20]
        break;
 8000644:	46c0      	nop			; (mov r8, r8)
    }
}
 8000646:	46c0      	nop			; (mov r8, r8)
 8000648:	46bd      	mov	sp, r7
 800064a:	b002      	add	sp, #8
 800064c:	bd80      	pop	{r7, pc}
 800064e:	46c0      	nop			; (mov r8, r8)
 8000650:	080022b8 	.word	0x080022b8
 8000654:	ffffee2d 	.word	0xffffee2d
 8000658:	ffffef7f 	.word	0xffffef7f
 800065c:	fffff66d 	.word	0xfffff66d
 8000660:	ffffe66f 	.word	0xffffe66f
 8000664:	ffffe73f 	.word	0xffffe73f
 8000668:	ffffe6af 	.word	0xffffe6af
 800066c:	ffffe6ad 	.word	0xffffe6ad
 8000670:	ffffee7f 	.word	0xffffee7f
 8000674:	ffffe62d 	.word	0xffffe62d
 8000678:	ffffe62f 	.word	0xffffe62f

0800067c <digital_clock>:
int a=2;
int b=3;
int c=5;
int d=9;
void digital_clock(volatile uint32_t f)
{//if I didn't use such a loop and delay function,
 800067c:	b590      	push	{r4, r7, lr}
 800067e:	b085      	sub	sp, #20
 8000680:	af02      	add	r7, sp, #8
 8000682:	6078      	str	r0, [r7, #4]
 //all the digits would have the same value as the SSD connection



   				d4_counter(a,b,c,d,f);
 8000684:	4bfd      	ldr	r3, [pc, #1012]	; (8000a7c <digital_clock+0x400>)
 8000686:	6818      	ldr	r0, [r3, #0]
 8000688:	4bfd      	ldr	r3, [pc, #1012]	; (8000a80 <digital_clock+0x404>)
 800068a:	6819      	ldr	r1, [r3, #0]
 800068c:	4bfd      	ldr	r3, [pc, #1012]	; (8000a84 <digital_clock+0x408>)
 800068e:	681a      	ldr	r2, [r3, #0]
 8000690:	4bfd      	ldr	r3, [pc, #1012]	; (8000a88 <digital_clock+0x40c>)
 8000692:	681c      	ldr	r4, [r3, #0]
 8000694:	687b      	ldr	r3, [r7, #4]
 8000696:	9300      	str	r3, [sp, #0]
 8000698:	0023      	movs	r3, r4
 800069a:	f001 fd2d 	bl	80020f8 <d4_counter>
    	       //clear_SSD();
    	       c=4;
 800069e:	4bf9      	ldr	r3, [pc, #996]	; (8000a84 <digital_clock+0x408>)
 80006a0:	2204      	movs	r2, #4
 80006a2:	601a      	str	r2, [r3, #0]
    	       d=9;
 80006a4:	4bf8      	ldr	r3, [pc, #992]	; (8000a88 <digital_clock+0x40c>)
 80006a6:	2209      	movs	r2, #9
 80006a8:	601a      	str	r2, [r3, #0]
    	       d4_counter(a,b,c,d,f);
 80006aa:	4bf4      	ldr	r3, [pc, #976]	; (8000a7c <digital_clock+0x400>)
 80006ac:	6818      	ldr	r0, [r3, #0]
 80006ae:	4bf4      	ldr	r3, [pc, #976]	; (8000a80 <digital_clock+0x404>)
 80006b0:	6819      	ldr	r1, [r3, #0]
 80006b2:	4bf4      	ldr	r3, [pc, #976]	; (8000a84 <digital_clock+0x408>)
 80006b4:	681a      	ldr	r2, [r3, #0]
 80006b6:	4bf4      	ldr	r3, [pc, #976]	; (8000a88 <digital_clock+0x40c>)
 80006b8:	681c      	ldr	r4, [r3, #0]
 80006ba:	687b      	ldr	r3, [r7, #4]
 80006bc:	9300      	str	r3, [sp, #0]
 80006be:	0023      	movs	r3, r4
 80006c0:	f001 fd1a 	bl	80020f8 <d4_counter>

    	       c=3;
 80006c4:	4bef      	ldr	r3, [pc, #956]	; (8000a84 <digital_clock+0x408>)
 80006c6:	2203      	movs	r2, #3
 80006c8:	601a      	str	r2, [r3, #0]
    	       d=9;
 80006ca:	4bef      	ldr	r3, [pc, #956]	; (8000a88 <digital_clock+0x40c>)
 80006cc:	2209      	movs	r2, #9
 80006ce:	601a      	str	r2, [r3, #0]
    	       d4_counter(a,b,c,d,f);
 80006d0:	4bea      	ldr	r3, [pc, #936]	; (8000a7c <digital_clock+0x400>)
 80006d2:	6818      	ldr	r0, [r3, #0]
 80006d4:	4bea      	ldr	r3, [pc, #936]	; (8000a80 <digital_clock+0x404>)
 80006d6:	6819      	ldr	r1, [r3, #0]
 80006d8:	4bea      	ldr	r3, [pc, #936]	; (8000a84 <digital_clock+0x408>)
 80006da:	681a      	ldr	r2, [r3, #0]
 80006dc:	4bea      	ldr	r3, [pc, #936]	; (8000a88 <digital_clock+0x40c>)
 80006de:	681c      	ldr	r4, [r3, #0]
 80006e0:	687b      	ldr	r3, [r7, #4]
 80006e2:	9300      	str	r3, [sp, #0]
 80006e4:	0023      	movs	r3, r4
 80006e6:	f001 fd07 	bl	80020f8 <d4_counter>
    	       c=2;
 80006ea:	4be6      	ldr	r3, [pc, #920]	; (8000a84 <digital_clock+0x408>)
 80006ec:	2202      	movs	r2, #2
 80006ee:	601a      	str	r2, [r3, #0]
    	       d=9;
 80006f0:	4be5      	ldr	r3, [pc, #916]	; (8000a88 <digital_clock+0x40c>)
 80006f2:	2209      	movs	r2, #9
 80006f4:	601a      	str	r2, [r3, #0]
    	       d4_counter(a,b,c,d,f);
 80006f6:	4be1      	ldr	r3, [pc, #900]	; (8000a7c <digital_clock+0x400>)
 80006f8:	6818      	ldr	r0, [r3, #0]
 80006fa:	4be1      	ldr	r3, [pc, #900]	; (8000a80 <digital_clock+0x404>)
 80006fc:	6819      	ldr	r1, [r3, #0]
 80006fe:	4be1      	ldr	r3, [pc, #900]	; (8000a84 <digital_clock+0x408>)
 8000700:	681a      	ldr	r2, [r3, #0]
 8000702:	4be1      	ldr	r3, [pc, #900]	; (8000a88 <digital_clock+0x40c>)
 8000704:	681c      	ldr	r4, [r3, #0]
 8000706:	687b      	ldr	r3, [r7, #4]
 8000708:	9300      	str	r3, [sp, #0]
 800070a:	0023      	movs	r3, r4
 800070c:	f001 fcf4 	bl	80020f8 <d4_counter>
    	       c=1;
 8000710:	4bdc      	ldr	r3, [pc, #880]	; (8000a84 <digital_clock+0x408>)
 8000712:	2201      	movs	r2, #1
 8000714:	601a      	str	r2, [r3, #0]
    	       d=9;
 8000716:	4bdc      	ldr	r3, [pc, #880]	; (8000a88 <digital_clock+0x40c>)
 8000718:	2209      	movs	r2, #9
 800071a:	601a      	str	r2, [r3, #0]
    	       d4_counter(a,b,c,d,f);
 800071c:	4bd7      	ldr	r3, [pc, #860]	; (8000a7c <digital_clock+0x400>)
 800071e:	6818      	ldr	r0, [r3, #0]
 8000720:	4bd7      	ldr	r3, [pc, #860]	; (8000a80 <digital_clock+0x404>)
 8000722:	6819      	ldr	r1, [r3, #0]
 8000724:	4bd7      	ldr	r3, [pc, #860]	; (8000a84 <digital_clock+0x408>)
 8000726:	681a      	ldr	r2, [r3, #0]
 8000728:	4bd7      	ldr	r3, [pc, #860]	; (8000a88 <digital_clock+0x40c>)
 800072a:	681c      	ldr	r4, [r3, #0]
 800072c:	687b      	ldr	r3, [r7, #4]
 800072e:	9300      	str	r3, [sp, #0]
 8000730:	0023      	movs	r3, r4
 8000732:	f001 fce1 	bl	80020f8 <d4_counter>
    	       c=0;
 8000736:	4bd3      	ldr	r3, [pc, #844]	; (8000a84 <digital_clock+0x408>)
 8000738:	2200      	movs	r2, #0
 800073a:	601a      	str	r2, [r3, #0]
    	       d=9;
 800073c:	4bd2      	ldr	r3, [pc, #840]	; (8000a88 <digital_clock+0x40c>)
 800073e:	2209      	movs	r2, #9
 8000740:	601a      	str	r2, [r3, #0]
    	       d4_counter(a,b,c,d,f);
 8000742:	4bce      	ldr	r3, [pc, #824]	; (8000a7c <digital_clock+0x400>)
 8000744:	6818      	ldr	r0, [r3, #0]
 8000746:	4bce      	ldr	r3, [pc, #824]	; (8000a80 <digital_clock+0x404>)
 8000748:	6819      	ldr	r1, [r3, #0]
 800074a:	4bce      	ldr	r3, [pc, #824]	; (8000a84 <digital_clock+0x408>)
 800074c:	681a      	ldr	r2, [r3, #0]
 800074e:	4bce      	ldr	r3, [pc, #824]	; (8000a88 <digital_clock+0x40c>)
 8000750:	681c      	ldr	r4, [r3, #0]
 8000752:	687b      	ldr	r3, [r7, #4]
 8000754:	9300      	str	r3, [sp, #0]
 8000756:	0023      	movs	r3, r4
 8000758:	f001 fcce 	bl	80020f8 <d4_counter>
    	       b=2;
 800075c:	4bc8      	ldr	r3, [pc, #800]	; (8000a80 <digital_clock+0x404>)
 800075e:	2202      	movs	r2, #2
 8000760:	601a      	str	r2, [r3, #0]
    	       c=5;
 8000762:	4bc8      	ldr	r3, [pc, #800]	; (8000a84 <digital_clock+0x408>)
 8000764:	2205      	movs	r2, #5
 8000766:	601a      	str	r2, [r3, #0]
    	       d=9;
 8000768:	4bc7      	ldr	r3, [pc, #796]	; (8000a88 <digital_clock+0x40c>)
 800076a:	2209      	movs	r2, #9
 800076c:	601a      	str	r2, [r3, #0]
    	       d4_counter(a,b,c,d,f);
 800076e:	4bc3      	ldr	r3, [pc, #780]	; (8000a7c <digital_clock+0x400>)
 8000770:	6818      	ldr	r0, [r3, #0]
 8000772:	4bc3      	ldr	r3, [pc, #780]	; (8000a80 <digital_clock+0x404>)
 8000774:	6819      	ldr	r1, [r3, #0]
 8000776:	4bc3      	ldr	r3, [pc, #780]	; (8000a84 <digital_clock+0x408>)
 8000778:	681a      	ldr	r2, [r3, #0]
 800077a:	4bc3      	ldr	r3, [pc, #780]	; (8000a88 <digital_clock+0x40c>)
 800077c:	681c      	ldr	r4, [r3, #0]
 800077e:	687b      	ldr	r3, [r7, #4]
 8000780:	9300      	str	r3, [sp, #0]
 8000782:	0023      	movs	r3, r4
 8000784:	f001 fcb8 	bl	80020f8 <d4_counter>

    	       b=2;
 8000788:	4bbd      	ldr	r3, [pc, #756]	; (8000a80 <digital_clock+0x404>)
 800078a:	2202      	movs	r2, #2
 800078c:	601a      	str	r2, [r3, #0]
    	       c=4;
 800078e:	4bbd      	ldr	r3, [pc, #756]	; (8000a84 <digital_clock+0x408>)
 8000790:	2204      	movs	r2, #4
 8000792:	601a      	str	r2, [r3, #0]
    	       d=9;
 8000794:	4bbc      	ldr	r3, [pc, #752]	; (8000a88 <digital_clock+0x40c>)
 8000796:	2209      	movs	r2, #9
 8000798:	601a      	str	r2, [r3, #0]
    	       d4_counter(a,b,c,d,f);
 800079a:	4bb8      	ldr	r3, [pc, #736]	; (8000a7c <digital_clock+0x400>)
 800079c:	6818      	ldr	r0, [r3, #0]
 800079e:	4bb8      	ldr	r3, [pc, #736]	; (8000a80 <digital_clock+0x404>)
 80007a0:	6819      	ldr	r1, [r3, #0]
 80007a2:	4bb8      	ldr	r3, [pc, #736]	; (8000a84 <digital_clock+0x408>)
 80007a4:	681a      	ldr	r2, [r3, #0]
 80007a6:	4bb8      	ldr	r3, [pc, #736]	; (8000a88 <digital_clock+0x40c>)
 80007a8:	681c      	ldr	r4, [r3, #0]
 80007aa:	687b      	ldr	r3, [r7, #4]
 80007ac:	9300      	str	r3, [sp, #0]
 80007ae:	0023      	movs	r3, r4
 80007b0:	f001 fca2 	bl	80020f8 <d4_counter>

    	       b=2;
 80007b4:	4bb2      	ldr	r3, [pc, #712]	; (8000a80 <digital_clock+0x404>)
 80007b6:	2202      	movs	r2, #2
 80007b8:	601a      	str	r2, [r3, #0]
    	       c=3;
 80007ba:	4bb2      	ldr	r3, [pc, #712]	; (8000a84 <digital_clock+0x408>)
 80007bc:	2203      	movs	r2, #3
 80007be:	601a      	str	r2, [r3, #0]
    	       d=9;
 80007c0:	4bb1      	ldr	r3, [pc, #708]	; (8000a88 <digital_clock+0x40c>)
 80007c2:	2209      	movs	r2, #9
 80007c4:	601a      	str	r2, [r3, #0]
    	       d4_counter(a,b,c,d,f);
 80007c6:	4bad      	ldr	r3, [pc, #692]	; (8000a7c <digital_clock+0x400>)
 80007c8:	6818      	ldr	r0, [r3, #0]
 80007ca:	4bad      	ldr	r3, [pc, #692]	; (8000a80 <digital_clock+0x404>)
 80007cc:	6819      	ldr	r1, [r3, #0]
 80007ce:	4bad      	ldr	r3, [pc, #692]	; (8000a84 <digital_clock+0x408>)
 80007d0:	681a      	ldr	r2, [r3, #0]
 80007d2:	4bad      	ldr	r3, [pc, #692]	; (8000a88 <digital_clock+0x40c>)
 80007d4:	681c      	ldr	r4, [r3, #0]
 80007d6:	687b      	ldr	r3, [r7, #4]
 80007d8:	9300      	str	r3, [sp, #0]
 80007da:	0023      	movs	r3, r4
 80007dc:	f001 fc8c 	bl	80020f8 <d4_counter>

    	       b=2;
 80007e0:	4ba7      	ldr	r3, [pc, #668]	; (8000a80 <digital_clock+0x404>)
 80007e2:	2202      	movs	r2, #2
 80007e4:	601a      	str	r2, [r3, #0]
    	       c=2;
 80007e6:	4ba7      	ldr	r3, [pc, #668]	; (8000a84 <digital_clock+0x408>)
 80007e8:	2202      	movs	r2, #2
 80007ea:	601a      	str	r2, [r3, #0]
    	       d=9;
 80007ec:	4ba6      	ldr	r3, [pc, #664]	; (8000a88 <digital_clock+0x40c>)
 80007ee:	2209      	movs	r2, #9
 80007f0:	601a      	str	r2, [r3, #0]
    	       d4_counter(a,b,c,d,f);
 80007f2:	4ba2      	ldr	r3, [pc, #648]	; (8000a7c <digital_clock+0x400>)
 80007f4:	6818      	ldr	r0, [r3, #0]
 80007f6:	4ba2      	ldr	r3, [pc, #648]	; (8000a80 <digital_clock+0x404>)
 80007f8:	6819      	ldr	r1, [r3, #0]
 80007fa:	4ba2      	ldr	r3, [pc, #648]	; (8000a84 <digital_clock+0x408>)
 80007fc:	681a      	ldr	r2, [r3, #0]
 80007fe:	4ba2      	ldr	r3, [pc, #648]	; (8000a88 <digital_clock+0x40c>)
 8000800:	681c      	ldr	r4, [r3, #0]
 8000802:	687b      	ldr	r3, [r7, #4]
 8000804:	9300      	str	r3, [sp, #0]
 8000806:	0023      	movs	r3, r4
 8000808:	f001 fc76 	bl	80020f8 <d4_counter>

    	       b=2;
 800080c:	4b9c      	ldr	r3, [pc, #624]	; (8000a80 <digital_clock+0x404>)
 800080e:	2202      	movs	r2, #2
 8000810:	601a      	str	r2, [r3, #0]
    	       c=1;
 8000812:	4b9c      	ldr	r3, [pc, #624]	; (8000a84 <digital_clock+0x408>)
 8000814:	2201      	movs	r2, #1
 8000816:	601a      	str	r2, [r3, #0]
    	       d=9;
 8000818:	4b9b      	ldr	r3, [pc, #620]	; (8000a88 <digital_clock+0x40c>)
 800081a:	2209      	movs	r2, #9
 800081c:	601a      	str	r2, [r3, #0]
    	       d4_counter(a,b,c,d,f);
 800081e:	4b97      	ldr	r3, [pc, #604]	; (8000a7c <digital_clock+0x400>)
 8000820:	6818      	ldr	r0, [r3, #0]
 8000822:	4b97      	ldr	r3, [pc, #604]	; (8000a80 <digital_clock+0x404>)
 8000824:	6819      	ldr	r1, [r3, #0]
 8000826:	4b97      	ldr	r3, [pc, #604]	; (8000a84 <digital_clock+0x408>)
 8000828:	681a      	ldr	r2, [r3, #0]
 800082a:	4b97      	ldr	r3, [pc, #604]	; (8000a88 <digital_clock+0x40c>)
 800082c:	681c      	ldr	r4, [r3, #0]
 800082e:	687b      	ldr	r3, [r7, #4]
 8000830:	9300      	str	r3, [sp, #0]
 8000832:	0023      	movs	r3, r4
 8000834:	f001 fc60 	bl	80020f8 <d4_counter>

    	       b=2;
 8000838:	4b91      	ldr	r3, [pc, #580]	; (8000a80 <digital_clock+0x404>)
 800083a:	2202      	movs	r2, #2
 800083c:	601a      	str	r2, [r3, #0]
    	       c=0;
 800083e:	4b91      	ldr	r3, [pc, #580]	; (8000a84 <digital_clock+0x408>)
 8000840:	2200      	movs	r2, #0
 8000842:	601a      	str	r2, [r3, #0]
    	       d=9;
 8000844:	4b90      	ldr	r3, [pc, #576]	; (8000a88 <digital_clock+0x40c>)
 8000846:	2209      	movs	r2, #9
 8000848:	601a      	str	r2, [r3, #0]
    	       d4_counter(a,b,c,d,f);
 800084a:	4b8c      	ldr	r3, [pc, #560]	; (8000a7c <digital_clock+0x400>)
 800084c:	6818      	ldr	r0, [r3, #0]
 800084e:	4b8c      	ldr	r3, [pc, #560]	; (8000a80 <digital_clock+0x404>)
 8000850:	6819      	ldr	r1, [r3, #0]
 8000852:	4b8c      	ldr	r3, [pc, #560]	; (8000a84 <digital_clock+0x408>)
 8000854:	681a      	ldr	r2, [r3, #0]
 8000856:	4b8c      	ldr	r3, [pc, #560]	; (8000a88 <digital_clock+0x40c>)
 8000858:	681c      	ldr	r4, [r3, #0]
 800085a:	687b      	ldr	r3, [r7, #4]
 800085c:	9300      	str	r3, [sp, #0]
 800085e:	0023      	movs	r3, r4
 8000860:	f001 fc4a 	bl	80020f8 <d4_counter>

    	       	   	   b=1;
 8000864:	4b86      	ldr	r3, [pc, #536]	; (8000a80 <digital_clock+0x404>)
 8000866:	2201      	movs	r2, #1
 8000868:	601a      	str	r2, [r3, #0]
    	               c=5;
 800086a:	4b86      	ldr	r3, [pc, #536]	; (8000a84 <digital_clock+0x408>)
 800086c:	2205      	movs	r2, #5
 800086e:	601a      	str	r2, [r3, #0]
    	               d=9;
 8000870:	4b85      	ldr	r3, [pc, #532]	; (8000a88 <digital_clock+0x40c>)
 8000872:	2209      	movs	r2, #9
 8000874:	601a      	str	r2, [r3, #0]
    	               d4_counter(a,b,c,d,f);
 8000876:	4b81      	ldr	r3, [pc, #516]	; (8000a7c <digital_clock+0x400>)
 8000878:	6818      	ldr	r0, [r3, #0]
 800087a:	4b81      	ldr	r3, [pc, #516]	; (8000a80 <digital_clock+0x404>)
 800087c:	6819      	ldr	r1, [r3, #0]
 800087e:	4b81      	ldr	r3, [pc, #516]	; (8000a84 <digital_clock+0x408>)
 8000880:	681a      	ldr	r2, [r3, #0]
 8000882:	4b81      	ldr	r3, [pc, #516]	; (8000a88 <digital_clock+0x40c>)
 8000884:	681c      	ldr	r4, [r3, #0]
 8000886:	687b      	ldr	r3, [r7, #4]
 8000888:	9300      	str	r3, [sp, #0]
 800088a:	0023      	movs	r3, r4
 800088c:	f001 fc34 	bl	80020f8 <d4_counter>

    	               b=1;
 8000890:	4b7b      	ldr	r3, [pc, #492]	; (8000a80 <digital_clock+0x404>)
 8000892:	2201      	movs	r2, #1
 8000894:	601a      	str	r2, [r3, #0]
    	               c=4;
 8000896:	4b7b      	ldr	r3, [pc, #492]	; (8000a84 <digital_clock+0x408>)
 8000898:	2204      	movs	r2, #4
 800089a:	601a      	str	r2, [r3, #0]
    	               d=9;
 800089c:	4b7a      	ldr	r3, [pc, #488]	; (8000a88 <digital_clock+0x40c>)
 800089e:	2209      	movs	r2, #9
 80008a0:	601a      	str	r2, [r3, #0]
    	               d4_counter(a,b,c,d,f);
 80008a2:	4b76      	ldr	r3, [pc, #472]	; (8000a7c <digital_clock+0x400>)
 80008a4:	6818      	ldr	r0, [r3, #0]
 80008a6:	4b76      	ldr	r3, [pc, #472]	; (8000a80 <digital_clock+0x404>)
 80008a8:	6819      	ldr	r1, [r3, #0]
 80008aa:	4b76      	ldr	r3, [pc, #472]	; (8000a84 <digital_clock+0x408>)
 80008ac:	681a      	ldr	r2, [r3, #0]
 80008ae:	4b76      	ldr	r3, [pc, #472]	; (8000a88 <digital_clock+0x40c>)
 80008b0:	681c      	ldr	r4, [r3, #0]
 80008b2:	687b      	ldr	r3, [r7, #4]
 80008b4:	9300      	str	r3, [sp, #0]
 80008b6:	0023      	movs	r3, r4
 80008b8:	f001 fc1e 	bl	80020f8 <d4_counter>

    	               b=1;
 80008bc:	4b70      	ldr	r3, [pc, #448]	; (8000a80 <digital_clock+0x404>)
 80008be:	2201      	movs	r2, #1
 80008c0:	601a      	str	r2, [r3, #0]
    	               c=3;
 80008c2:	4b70      	ldr	r3, [pc, #448]	; (8000a84 <digital_clock+0x408>)
 80008c4:	2203      	movs	r2, #3
 80008c6:	601a      	str	r2, [r3, #0]
    	               d=9;
 80008c8:	4b6f      	ldr	r3, [pc, #444]	; (8000a88 <digital_clock+0x40c>)
 80008ca:	2209      	movs	r2, #9
 80008cc:	601a      	str	r2, [r3, #0]
    	               d4_counter(a,b,c,d,f);
 80008ce:	4b6b      	ldr	r3, [pc, #428]	; (8000a7c <digital_clock+0x400>)
 80008d0:	6818      	ldr	r0, [r3, #0]
 80008d2:	4b6b      	ldr	r3, [pc, #428]	; (8000a80 <digital_clock+0x404>)
 80008d4:	6819      	ldr	r1, [r3, #0]
 80008d6:	4b6b      	ldr	r3, [pc, #428]	; (8000a84 <digital_clock+0x408>)
 80008d8:	681a      	ldr	r2, [r3, #0]
 80008da:	4b6b      	ldr	r3, [pc, #428]	; (8000a88 <digital_clock+0x40c>)
 80008dc:	681c      	ldr	r4, [r3, #0]
 80008de:	687b      	ldr	r3, [r7, #4]
 80008e0:	9300      	str	r3, [sp, #0]
 80008e2:	0023      	movs	r3, r4
 80008e4:	f001 fc08 	bl	80020f8 <d4_counter>

    	               b=1;
 80008e8:	4b65      	ldr	r3, [pc, #404]	; (8000a80 <digital_clock+0x404>)
 80008ea:	2201      	movs	r2, #1
 80008ec:	601a      	str	r2, [r3, #0]
    	               c=2;
 80008ee:	4b65      	ldr	r3, [pc, #404]	; (8000a84 <digital_clock+0x408>)
 80008f0:	2202      	movs	r2, #2
 80008f2:	601a      	str	r2, [r3, #0]
    	               d=9;
 80008f4:	4b64      	ldr	r3, [pc, #400]	; (8000a88 <digital_clock+0x40c>)
 80008f6:	2209      	movs	r2, #9
 80008f8:	601a      	str	r2, [r3, #0]
    	               d4_counter(a,b,c,d,f);
 80008fa:	4b60      	ldr	r3, [pc, #384]	; (8000a7c <digital_clock+0x400>)
 80008fc:	6818      	ldr	r0, [r3, #0]
 80008fe:	4b60      	ldr	r3, [pc, #384]	; (8000a80 <digital_clock+0x404>)
 8000900:	6819      	ldr	r1, [r3, #0]
 8000902:	4b60      	ldr	r3, [pc, #384]	; (8000a84 <digital_clock+0x408>)
 8000904:	681a      	ldr	r2, [r3, #0]
 8000906:	4b60      	ldr	r3, [pc, #384]	; (8000a88 <digital_clock+0x40c>)
 8000908:	681c      	ldr	r4, [r3, #0]
 800090a:	687b      	ldr	r3, [r7, #4]
 800090c:	9300      	str	r3, [sp, #0]
 800090e:	0023      	movs	r3, r4
 8000910:	f001 fbf2 	bl	80020f8 <d4_counter>

    	               b=1;
 8000914:	4b5a      	ldr	r3, [pc, #360]	; (8000a80 <digital_clock+0x404>)
 8000916:	2201      	movs	r2, #1
 8000918:	601a      	str	r2, [r3, #0]
    	               c=1;
 800091a:	4b5a      	ldr	r3, [pc, #360]	; (8000a84 <digital_clock+0x408>)
 800091c:	2201      	movs	r2, #1
 800091e:	601a      	str	r2, [r3, #0]
    	               d=9;
 8000920:	4b59      	ldr	r3, [pc, #356]	; (8000a88 <digital_clock+0x40c>)
 8000922:	2209      	movs	r2, #9
 8000924:	601a      	str	r2, [r3, #0]
    	               d4_counter(a,b,c,d,f);
 8000926:	4b55      	ldr	r3, [pc, #340]	; (8000a7c <digital_clock+0x400>)
 8000928:	6818      	ldr	r0, [r3, #0]
 800092a:	4b55      	ldr	r3, [pc, #340]	; (8000a80 <digital_clock+0x404>)
 800092c:	6819      	ldr	r1, [r3, #0]
 800092e:	4b55      	ldr	r3, [pc, #340]	; (8000a84 <digital_clock+0x408>)
 8000930:	681a      	ldr	r2, [r3, #0]
 8000932:	4b55      	ldr	r3, [pc, #340]	; (8000a88 <digital_clock+0x40c>)
 8000934:	681c      	ldr	r4, [r3, #0]
 8000936:	687b      	ldr	r3, [r7, #4]
 8000938:	9300      	str	r3, [sp, #0]
 800093a:	0023      	movs	r3, r4
 800093c:	f001 fbdc 	bl	80020f8 <d4_counter>

    	               b=1;
 8000940:	4b4f      	ldr	r3, [pc, #316]	; (8000a80 <digital_clock+0x404>)
 8000942:	2201      	movs	r2, #1
 8000944:	601a      	str	r2, [r3, #0]
    	               c=0;
 8000946:	4b4f      	ldr	r3, [pc, #316]	; (8000a84 <digital_clock+0x408>)
 8000948:	2200      	movs	r2, #0
 800094a:	601a      	str	r2, [r3, #0]
    	               d=9;
 800094c:	4b4e      	ldr	r3, [pc, #312]	; (8000a88 <digital_clock+0x40c>)
 800094e:	2209      	movs	r2, #9
 8000950:	601a      	str	r2, [r3, #0]
    	               d4_counter(a,b,c,d,f);
 8000952:	4b4a      	ldr	r3, [pc, #296]	; (8000a7c <digital_clock+0x400>)
 8000954:	6818      	ldr	r0, [r3, #0]
 8000956:	4b4a      	ldr	r3, [pc, #296]	; (8000a80 <digital_clock+0x404>)
 8000958:	6819      	ldr	r1, [r3, #0]
 800095a:	4b4a      	ldr	r3, [pc, #296]	; (8000a84 <digital_clock+0x408>)
 800095c:	681a      	ldr	r2, [r3, #0]
 800095e:	4b4a      	ldr	r3, [pc, #296]	; (8000a88 <digital_clock+0x40c>)
 8000960:	681c      	ldr	r4, [r3, #0]
 8000962:	687b      	ldr	r3, [r7, #4]
 8000964:	9300      	str	r3, [sp, #0]
 8000966:	0023      	movs	r3, r4
 8000968:	f001 fbc6 	bl	80020f8 <d4_counter>

    	               	   	  b=0;
 800096c:	4b44      	ldr	r3, [pc, #272]	; (8000a80 <digital_clock+0x404>)
 800096e:	2200      	movs	r2, #0
 8000970:	601a      	str	r2, [r3, #0]
    	                      c=5;
 8000972:	4b44      	ldr	r3, [pc, #272]	; (8000a84 <digital_clock+0x408>)
 8000974:	2205      	movs	r2, #5
 8000976:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8000978:	4b43      	ldr	r3, [pc, #268]	; (8000a88 <digital_clock+0x40c>)
 800097a:	2209      	movs	r2, #9
 800097c:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 800097e:	4b3f      	ldr	r3, [pc, #252]	; (8000a7c <digital_clock+0x400>)
 8000980:	6818      	ldr	r0, [r3, #0]
 8000982:	4b3f      	ldr	r3, [pc, #252]	; (8000a80 <digital_clock+0x404>)
 8000984:	6819      	ldr	r1, [r3, #0]
 8000986:	4b3f      	ldr	r3, [pc, #252]	; (8000a84 <digital_clock+0x408>)
 8000988:	681a      	ldr	r2, [r3, #0]
 800098a:	4b3f      	ldr	r3, [pc, #252]	; (8000a88 <digital_clock+0x40c>)
 800098c:	681c      	ldr	r4, [r3, #0]
 800098e:	687b      	ldr	r3, [r7, #4]
 8000990:	9300      	str	r3, [sp, #0]
 8000992:	0023      	movs	r3, r4
 8000994:	f001 fbb0 	bl	80020f8 <d4_counter>

    	                      b=0;
 8000998:	4b39      	ldr	r3, [pc, #228]	; (8000a80 <digital_clock+0x404>)
 800099a:	2200      	movs	r2, #0
 800099c:	601a      	str	r2, [r3, #0]
    	                      c=4;
 800099e:	4b39      	ldr	r3, [pc, #228]	; (8000a84 <digital_clock+0x408>)
 80009a0:	2204      	movs	r2, #4
 80009a2:	601a      	str	r2, [r3, #0]
    	                      d=9;
 80009a4:	4b38      	ldr	r3, [pc, #224]	; (8000a88 <digital_clock+0x40c>)
 80009a6:	2209      	movs	r2, #9
 80009a8:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 80009aa:	4b34      	ldr	r3, [pc, #208]	; (8000a7c <digital_clock+0x400>)
 80009ac:	6818      	ldr	r0, [r3, #0]
 80009ae:	4b34      	ldr	r3, [pc, #208]	; (8000a80 <digital_clock+0x404>)
 80009b0:	6819      	ldr	r1, [r3, #0]
 80009b2:	4b34      	ldr	r3, [pc, #208]	; (8000a84 <digital_clock+0x408>)
 80009b4:	681a      	ldr	r2, [r3, #0]
 80009b6:	4b34      	ldr	r3, [pc, #208]	; (8000a88 <digital_clock+0x40c>)
 80009b8:	681c      	ldr	r4, [r3, #0]
 80009ba:	687b      	ldr	r3, [r7, #4]
 80009bc:	9300      	str	r3, [sp, #0]
 80009be:	0023      	movs	r3, r4
 80009c0:	f001 fb9a 	bl	80020f8 <d4_counter>

    	                      b=0;
 80009c4:	4b2e      	ldr	r3, [pc, #184]	; (8000a80 <digital_clock+0x404>)
 80009c6:	2200      	movs	r2, #0
 80009c8:	601a      	str	r2, [r3, #0]
    	                      c=3;
 80009ca:	4b2e      	ldr	r3, [pc, #184]	; (8000a84 <digital_clock+0x408>)
 80009cc:	2203      	movs	r2, #3
 80009ce:	601a      	str	r2, [r3, #0]
    	                      d=9;
 80009d0:	4b2d      	ldr	r3, [pc, #180]	; (8000a88 <digital_clock+0x40c>)
 80009d2:	2209      	movs	r2, #9
 80009d4:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 80009d6:	4b29      	ldr	r3, [pc, #164]	; (8000a7c <digital_clock+0x400>)
 80009d8:	6818      	ldr	r0, [r3, #0]
 80009da:	4b29      	ldr	r3, [pc, #164]	; (8000a80 <digital_clock+0x404>)
 80009dc:	6819      	ldr	r1, [r3, #0]
 80009de:	4b29      	ldr	r3, [pc, #164]	; (8000a84 <digital_clock+0x408>)
 80009e0:	681a      	ldr	r2, [r3, #0]
 80009e2:	4b29      	ldr	r3, [pc, #164]	; (8000a88 <digital_clock+0x40c>)
 80009e4:	681c      	ldr	r4, [r3, #0]
 80009e6:	687b      	ldr	r3, [r7, #4]
 80009e8:	9300      	str	r3, [sp, #0]
 80009ea:	0023      	movs	r3, r4
 80009ec:	f001 fb84 	bl	80020f8 <d4_counter>

    	                      b=0;
 80009f0:	4b23      	ldr	r3, [pc, #140]	; (8000a80 <digital_clock+0x404>)
 80009f2:	2200      	movs	r2, #0
 80009f4:	601a      	str	r2, [r3, #0]
    	                      c=2;
 80009f6:	4b23      	ldr	r3, [pc, #140]	; (8000a84 <digital_clock+0x408>)
 80009f8:	2202      	movs	r2, #2
 80009fa:	601a      	str	r2, [r3, #0]
    	                      d=9;
 80009fc:	4b22      	ldr	r3, [pc, #136]	; (8000a88 <digital_clock+0x40c>)
 80009fe:	2209      	movs	r2, #9
 8000a00:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8000a02:	4b1e      	ldr	r3, [pc, #120]	; (8000a7c <digital_clock+0x400>)
 8000a04:	6818      	ldr	r0, [r3, #0]
 8000a06:	4b1e      	ldr	r3, [pc, #120]	; (8000a80 <digital_clock+0x404>)
 8000a08:	6819      	ldr	r1, [r3, #0]
 8000a0a:	4b1e      	ldr	r3, [pc, #120]	; (8000a84 <digital_clock+0x408>)
 8000a0c:	681a      	ldr	r2, [r3, #0]
 8000a0e:	4b1e      	ldr	r3, [pc, #120]	; (8000a88 <digital_clock+0x40c>)
 8000a10:	681c      	ldr	r4, [r3, #0]
 8000a12:	687b      	ldr	r3, [r7, #4]
 8000a14:	9300      	str	r3, [sp, #0]
 8000a16:	0023      	movs	r3, r4
 8000a18:	f001 fb6e 	bl	80020f8 <d4_counter>

    	                      b=0;
 8000a1c:	4b18      	ldr	r3, [pc, #96]	; (8000a80 <digital_clock+0x404>)
 8000a1e:	2200      	movs	r2, #0
 8000a20:	601a      	str	r2, [r3, #0]
    	                      c=1;
 8000a22:	4b18      	ldr	r3, [pc, #96]	; (8000a84 <digital_clock+0x408>)
 8000a24:	2201      	movs	r2, #1
 8000a26:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8000a28:	4b17      	ldr	r3, [pc, #92]	; (8000a88 <digital_clock+0x40c>)
 8000a2a:	2209      	movs	r2, #9
 8000a2c:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8000a2e:	4b13      	ldr	r3, [pc, #76]	; (8000a7c <digital_clock+0x400>)
 8000a30:	6818      	ldr	r0, [r3, #0]
 8000a32:	4b13      	ldr	r3, [pc, #76]	; (8000a80 <digital_clock+0x404>)
 8000a34:	6819      	ldr	r1, [r3, #0]
 8000a36:	4b13      	ldr	r3, [pc, #76]	; (8000a84 <digital_clock+0x408>)
 8000a38:	681a      	ldr	r2, [r3, #0]
 8000a3a:	4b13      	ldr	r3, [pc, #76]	; (8000a88 <digital_clock+0x40c>)
 8000a3c:	681c      	ldr	r4, [r3, #0]
 8000a3e:	687b      	ldr	r3, [r7, #4]
 8000a40:	9300      	str	r3, [sp, #0]
 8000a42:	0023      	movs	r3, r4
 8000a44:	f001 fb58 	bl	80020f8 <d4_counter>

    	                      b=0;
 8000a48:	4b0d      	ldr	r3, [pc, #52]	; (8000a80 <digital_clock+0x404>)
 8000a4a:	2200      	movs	r2, #0
 8000a4c:	601a      	str	r2, [r3, #0]
    	                      c=0;
 8000a4e:	4b0d      	ldr	r3, [pc, #52]	; (8000a84 <digital_clock+0x408>)
 8000a50:	2200      	movs	r2, #0
 8000a52:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8000a54:	4b0c      	ldr	r3, [pc, #48]	; (8000a88 <digital_clock+0x40c>)
 8000a56:	2209      	movs	r2, #9
 8000a58:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8000a5a:	4b08      	ldr	r3, [pc, #32]	; (8000a7c <digital_clock+0x400>)
 8000a5c:	6818      	ldr	r0, [r3, #0]
 8000a5e:	4b08      	ldr	r3, [pc, #32]	; (8000a80 <digital_clock+0x404>)
 8000a60:	6819      	ldr	r1, [r3, #0]
 8000a62:	4b08      	ldr	r3, [pc, #32]	; (8000a84 <digital_clock+0x408>)
 8000a64:	681a      	ldr	r2, [r3, #0]
 8000a66:	4b08      	ldr	r3, [pc, #32]	; (8000a88 <digital_clock+0x40c>)
 8000a68:	681c      	ldr	r4, [r3, #0]
 8000a6a:	687b      	ldr	r3, [r7, #4]
 8000a6c:	9300      	str	r3, [sp, #0]
 8000a6e:	0023      	movs	r3, r4
 8000a70:	f001 fb42 	bl	80020f8 <d4_counter>

    	                      a=1;
 8000a74:	4b01      	ldr	r3, [pc, #4]	; (8000a7c <digital_clock+0x400>)
 8000a76:	2201      	movs	r2, #1
 8000a78:	601a      	str	r2, [r3, #0]
 8000a7a:	e007      	b.n	8000a8c <digital_clock+0x410>
 8000a7c:	20000000 	.word	0x20000000
 8000a80:	20000004 	.word	0x20000004
 8000a84:	20000008 	.word	0x20000008
 8000a88:	2000000c 	.word	0x2000000c
    	                      b=9;
 8000a8c:	4bfd      	ldr	r3, [pc, #1012]	; (8000e84 <digital_clock+0x808>)
 8000a8e:	2209      	movs	r2, #9
 8000a90:	601a      	str	r2, [r3, #0]
    	                      c=5;
 8000a92:	4bfd      	ldr	r3, [pc, #1012]	; (8000e88 <digital_clock+0x80c>)
 8000a94:	2205      	movs	r2, #5
 8000a96:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8000a98:	4bfc      	ldr	r3, [pc, #1008]	; (8000e8c <digital_clock+0x810>)
 8000a9a:	2209      	movs	r2, #9
 8000a9c:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8000a9e:	4bfc      	ldr	r3, [pc, #1008]	; (8000e90 <digital_clock+0x814>)
 8000aa0:	6818      	ldr	r0, [r3, #0]
 8000aa2:	4bf8      	ldr	r3, [pc, #992]	; (8000e84 <digital_clock+0x808>)
 8000aa4:	6819      	ldr	r1, [r3, #0]
 8000aa6:	4bf8      	ldr	r3, [pc, #992]	; (8000e88 <digital_clock+0x80c>)
 8000aa8:	681a      	ldr	r2, [r3, #0]
 8000aaa:	4bf8      	ldr	r3, [pc, #992]	; (8000e8c <digital_clock+0x810>)
 8000aac:	681c      	ldr	r4, [r3, #0]
 8000aae:	687b      	ldr	r3, [r7, #4]
 8000ab0:	9300      	str	r3, [sp, #0]
 8000ab2:	0023      	movs	r3, r4
 8000ab4:	f001 fb20 	bl	80020f8 <d4_counter>

    	                      b=9;
 8000ab8:	4bf2      	ldr	r3, [pc, #968]	; (8000e84 <digital_clock+0x808>)
 8000aba:	2209      	movs	r2, #9
 8000abc:	601a      	str	r2, [r3, #0]
    	                      c=4;
 8000abe:	4bf2      	ldr	r3, [pc, #968]	; (8000e88 <digital_clock+0x80c>)
 8000ac0:	2204      	movs	r2, #4
 8000ac2:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8000ac4:	4bf1      	ldr	r3, [pc, #964]	; (8000e8c <digital_clock+0x810>)
 8000ac6:	2209      	movs	r2, #9
 8000ac8:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8000aca:	4bf1      	ldr	r3, [pc, #964]	; (8000e90 <digital_clock+0x814>)
 8000acc:	6818      	ldr	r0, [r3, #0]
 8000ace:	4bed      	ldr	r3, [pc, #948]	; (8000e84 <digital_clock+0x808>)
 8000ad0:	6819      	ldr	r1, [r3, #0]
 8000ad2:	4bed      	ldr	r3, [pc, #948]	; (8000e88 <digital_clock+0x80c>)
 8000ad4:	681a      	ldr	r2, [r3, #0]
 8000ad6:	4bed      	ldr	r3, [pc, #948]	; (8000e8c <digital_clock+0x810>)
 8000ad8:	681c      	ldr	r4, [r3, #0]
 8000ada:	687b      	ldr	r3, [r7, #4]
 8000adc:	9300      	str	r3, [sp, #0]
 8000ade:	0023      	movs	r3, r4
 8000ae0:	f001 fb0a 	bl	80020f8 <d4_counter>

    	                      b=9;
 8000ae4:	4be7      	ldr	r3, [pc, #924]	; (8000e84 <digital_clock+0x808>)
 8000ae6:	2209      	movs	r2, #9
 8000ae8:	601a      	str	r2, [r3, #0]
    	                      c=3;
 8000aea:	4be7      	ldr	r3, [pc, #924]	; (8000e88 <digital_clock+0x80c>)
 8000aec:	2203      	movs	r2, #3
 8000aee:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8000af0:	4be6      	ldr	r3, [pc, #920]	; (8000e8c <digital_clock+0x810>)
 8000af2:	2209      	movs	r2, #9
 8000af4:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8000af6:	4be6      	ldr	r3, [pc, #920]	; (8000e90 <digital_clock+0x814>)
 8000af8:	6818      	ldr	r0, [r3, #0]
 8000afa:	4be2      	ldr	r3, [pc, #904]	; (8000e84 <digital_clock+0x808>)
 8000afc:	6819      	ldr	r1, [r3, #0]
 8000afe:	4be2      	ldr	r3, [pc, #904]	; (8000e88 <digital_clock+0x80c>)
 8000b00:	681a      	ldr	r2, [r3, #0]
 8000b02:	4be2      	ldr	r3, [pc, #904]	; (8000e8c <digital_clock+0x810>)
 8000b04:	681c      	ldr	r4, [r3, #0]
 8000b06:	687b      	ldr	r3, [r7, #4]
 8000b08:	9300      	str	r3, [sp, #0]
 8000b0a:	0023      	movs	r3, r4
 8000b0c:	f001 faf4 	bl	80020f8 <d4_counter>

    	                      b=9;
 8000b10:	4bdc      	ldr	r3, [pc, #880]	; (8000e84 <digital_clock+0x808>)
 8000b12:	2209      	movs	r2, #9
 8000b14:	601a      	str	r2, [r3, #0]
    	                      c=2;
 8000b16:	4bdc      	ldr	r3, [pc, #880]	; (8000e88 <digital_clock+0x80c>)
 8000b18:	2202      	movs	r2, #2
 8000b1a:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8000b1c:	4bdb      	ldr	r3, [pc, #876]	; (8000e8c <digital_clock+0x810>)
 8000b1e:	2209      	movs	r2, #9
 8000b20:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8000b22:	4bdb      	ldr	r3, [pc, #876]	; (8000e90 <digital_clock+0x814>)
 8000b24:	6818      	ldr	r0, [r3, #0]
 8000b26:	4bd7      	ldr	r3, [pc, #860]	; (8000e84 <digital_clock+0x808>)
 8000b28:	6819      	ldr	r1, [r3, #0]
 8000b2a:	4bd7      	ldr	r3, [pc, #860]	; (8000e88 <digital_clock+0x80c>)
 8000b2c:	681a      	ldr	r2, [r3, #0]
 8000b2e:	4bd7      	ldr	r3, [pc, #860]	; (8000e8c <digital_clock+0x810>)
 8000b30:	681c      	ldr	r4, [r3, #0]
 8000b32:	687b      	ldr	r3, [r7, #4]
 8000b34:	9300      	str	r3, [sp, #0]
 8000b36:	0023      	movs	r3, r4
 8000b38:	f001 fade 	bl	80020f8 <d4_counter>

    	                      b=9;
 8000b3c:	4bd1      	ldr	r3, [pc, #836]	; (8000e84 <digital_clock+0x808>)
 8000b3e:	2209      	movs	r2, #9
 8000b40:	601a      	str	r2, [r3, #0]
    	                      c=1;
 8000b42:	4bd1      	ldr	r3, [pc, #836]	; (8000e88 <digital_clock+0x80c>)
 8000b44:	2201      	movs	r2, #1
 8000b46:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8000b48:	4bd0      	ldr	r3, [pc, #832]	; (8000e8c <digital_clock+0x810>)
 8000b4a:	2209      	movs	r2, #9
 8000b4c:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8000b4e:	4bd0      	ldr	r3, [pc, #832]	; (8000e90 <digital_clock+0x814>)
 8000b50:	6818      	ldr	r0, [r3, #0]
 8000b52:	4bcc      	ldr	r3, [pc, #816]	; (8000e84 <digital_clock+0x808>)
 8000b54:	6819      	ldr	r1, [r3, #0]
 8000b56:	4bcc      	ldr	r3, [pc, #816]	; (8000e88 <digital_clock+0x80c>)
 8000b58:	681a      	ldr	r2, [r3, #0]
 8000b5a:	4bcc      	ldr	r3, [pc, #816]	; (8000e8c <digital_clock+0x810>)
 8000b5c:	681c      	ldr	r4, [r3, #0]
 8000b5e:	687b      	ldr	r3, [r7, #4]
 8000b60:	9300      	str	r3, [sp, #0]
 8000b62:	0023      	movs	r3, r4
 8000b64:	f001 fac8 	bl	80020f8 <d4_counter>

    	                      b=9;
 8000b68:	4bc6      	ldr	r3, [pc, #792]	; (8000e84 <digital_clock+0x808>)
 8000b6a:	2209      	movs	r2, #9
 8000b6c:	601a      	str	r2, [r3, #0]
    	                      c=0;
 8000b6e:	4bc6      	ldr	r3, [pc, #792]	; (8000e88 <digital_clock+0x80c>)
 8000b70:	2200      	movs	r2, #0
 8000b72:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8000b74:	4bc5      	ldr	r3, [pc, #788]	; (8000e8c <digital_clock+0x810>)
 8000b76:	2209      	movs	r2, #9
 8000b78:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8000b7a:	4bc5      	ldr	r3, [pc, #788]	; (8000e90 <digital_clock+0x814>)
 8000b7c:	6818      	ldr	r0, [r3, #0]
 8000b7e:	4bc1      	ldr	r3, [pc, #772]	; (8000e84 <digital_clock+0x808>)
 8000b80:	6819      	ldr	r1, [r3, #0]
 8000b82:	4bc1      	ldr	r3, [pc, #772]	; (8000e88 <digital_clock+0x80c>)
 8000b84:	681a      	ldr	r2, [r3, #0]
 8000b86:	4bc1      	ldr	r3, [pc, #772]	; (8000e8c <digital_clock+0x810>)
 8000b88:	681c      	ldr	r4, [r3, #0]
 8000b8a:	687b      	ldr	r3, [r7, #4]
 8000b8c:	9300      	str	r3, [sp, #0]
 8000b8e:	0023      	movs	r3, r4
 8000b90:	f001 fab2 	bl	80020f8 <d4_counter>





    	                      a=1;
 8000b94:	4bbe      	ldr	r3, [pc, #760]	; (8000e90 <digital_clock+0x814>)
 8000b96:	2201      	movs	r2, #1
 8000b98:	601a      	str	r2, [r3, #0]
    	                      b=8;
 8000b9a:	4bba      	ldr	r3, [pc, #744]	; (8000e84 <digital_clock+0x808>)
 8000b9c:	2208      	movs	r2, #8
 8000b9e:	601a      	str	r2, [r3, #0]
    	                      c=5;
 8000ba0:	4bb9      	ldr	r3, [pc, #740]	; (8000e88 <digital_clock+0x80c>)
 8000ba2:	2205      	movs	r2, #5
 8000ba4:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8000ba6:	4bb9      	ldr	r3, [pc, #740]	; (8000e8c <digital_clock+0x810>)
 8000ba8:	2209      	movs	r2, #9
 8000baa:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8000bac:	4bb8      	ldr	r3, [pc, #736]	; (8000e90 <digital_clock+0x814>)
 8000bae:	6818      	ldr	r0, [r3, #0]
 8000bb0:	4bb4      	ldr	r3, [pc, #720]	; (8000e84 <digital_clock+0x808>)
 8000bb2:	6819      	ldr	r1, [r3, #0]
 8000bb4:	4bb4      	ldr	r3, [pc, #720]	; (8000e88 <digital_clock+0x80c>)
 8000bb6:	681a      	ldr	r2, [r3, #0]
 8000bb8:	4bb4      	ldr	r3, [pc, #720]	; (8000e8c <digital_clock+0x810>)
 8000bba:	681c      	ldr	r4, [r3, #0]
 8000bbc:	687b      	ldr	r3, [r7, #4]
 8000bbe:	9300      	str	r3, [sp, #0]
 8000bc0:	0023      	movs	r3, r4
 8000bc2:	f001 fa99 	bl	80020f8 <d4_counter>

    	                      b=8;
 8000bc6:	4baf      	ldr	r3, [pc, #700]	; (8000e84 <digital_clock+0x808>)
 8000bc8:	2208      	movs	r2, #8
 8000bca:	601a      	str	r2, [r3, #0]
    	                      c=4;
 8000bcc:	4bae      	ldr	r3, [pc, #696]	; (8000e88 <digital_clock+0x80c>)
 8000bce:	2204      	movs	r2, #4
 8000bd0:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8000bd2:	4bae      	ldr	r3, [pc, #696]	; (8000e8c <digital_clock+0x810>)
 8000bd4:	2209      	movs	r2, #9
 8000bd6:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8000bd8:	4bad      	ldr	r3, [pc, #692]	; (8000e90 <digital_clock+0x814>)
 8000bda:	6818      	ldr	r0, [r3, #0]
 8000bdc:	4ba9      	ldr	r3, [pc, #676]	; (8000e84 <digital_clock+0x808>)
 8000bde:	6819      	ldr	r1, [r3, #0]
 8000be0:	4ba9      	ldr	r3, [pc, #676]	; (8000e88 <digital_clock+0x80c>)
 8000be2:	681a      	ldr	r2, [r3, #0]
 8000be4:	4ba9      	ldr	r3, [pc, #676]	; (8000e8c <digital_clock+0x810>)
 8000be6:	681c      	ldr	r4, [r3, #0]
 8000be8:	687b      	ldr	r3, [r7, #4]
 8000bea:	9300      	str	r3, [sp, #0]
 8000bec:	0023      	movs	r3, r4
 8000bee:	f001 fa83 	bl	80020f8 <d4_counter>

    	                      b=8;
 8000bf2:	4ba4      	ldr	r3, [pc, #656]	; (8000e84 <digital_clock+0x808>)
 8000bf4:	2208      	movs	r2, #8
 8000bf6:	601a      	str	r2, [r3, #0]
    	                      c=3;
 8000bf8:	4ba3      	ldr	r3, [pc, #652]	; (8000e88 <digital_clock+0x80c>)
 8000bfa:	2203      	movs	r2, #3
 8000bfc:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8000bfe:	4ba3      	ldr	r3, [pc, #652]	; (8000e8c <digital_clock+0x810>)
 8000c00:	2209      	movs	r2, #9
 8000c02:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8000c04:	4ba2      	ldr	r3, [pc, #648]	; (8000e90 <digital_clock+0x814>)
 8000c06:	6818      	ldr	r0, [r3, #0]
 8000c08:	4b9e      	ldr	r3, [pc, #632]	; (8000e84 <digital_clock+0x808>)
 8000c0a:	6819      	ldr	r1, [r3, #0]
 8000c0c:	4b9e      	ldr	r3, [pc, #632]	; (8000e88 <digital_clock+0x80c>)
 8000c0e:	681a      	ldr	r2, [r3, #0]
 8000c10:	4b9e      	ldr	r3, [pc, #632]	; (8000e8c <digital_clock+0x810>)
 8000c12:	681c      	ldr	r4, [r3, #0]
 8000c14:	687b      	ldr	r3, [r7, #4]
 8000c16:	9300      	str	r3, [sp, #0]
 8000c18:	0023      	movs	r3, r4
 8000c1a:	f001 fa6d 	bl	80020f8 <d4_counter>

    	                      b=8;
 8000c1e:	4b99      	ldr	r3, [pc, #612]	; (8000e84 <digital_clock+0x808>)
 8000c20:	2208      	movs	r2, #8
 8000c22:	601a      	str	r2, [r3, #0]
    	                      c=2;
 8000c24:	4b98      	ldr	r3, [pc, #608]	; (8000e88 <digital_clock+0x80c>)
 8000c26:	2202      	movs	r2, #2
 8000c28:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8000c2a:	4b98      	ldr	r3, [pc, #608]	; (8000e8c <digital_clock+0x810>)
 8000c2c:	2209      	movs	r2, #9
 8000c2e:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8000c30:	4b97      	ldr	r3, [pc, #604]	; (8000e90 <digital_clock+0x814>)
 8000c32:	6818      	ldr	r0, [r3, #0]
 8000c34:	4b93      	ldr	r3, [pc, #588]	; (8000e84 <digital_clock+0x808>)
 8000c36:	6819      	ldr	r1, [r3, #0]
 8000c38:	4b93      	ldr	r3, [pc, #588]	; (8000e88 <digital_clock+0x80c>)
 8000c3a:	681a      	ldr	r2, [r3, #0]
 8000c3c:	4b93      	ldr	r3, [pc, #588]	; (8000e8c <digital_clock+0x810>)
 8000c3e:	681c      	ldr	r4, [r3, #0]
 8000c40:	687b      	ldr	r3, [r7, #4]
 8000c42:	9300      	str	r3, [sp, #0]
 8000c44:	0023      	movs	r3, r4
 8000c46:	f001 fa57 	bl	80020f8 <d4_counter>

    	                      b=8;
 8000c4a:	4b8e      	ldr	r3, [pc, #568]	; (8000e84 <digital_clock+0x808>)
 8000c4c:	2208      	movs	r2, #8
 8000c4e:	601a      	str	r2, [r3, #0]
    	                      c=1;
 8000c50:	4b8d      	ldr	r3, [pc, #564]	; (8000e88 <digital_clock+0x80c>)
 8000c52:	2201      	movs	r2, #1
 8000c54:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8000c56:	4b8d      	ldr	r3, [pc, #564]	; (8000e8c <digital_clock+0x810>)
 8000c58:	2209      	movs	r2, #9
 8000c5a:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8000c5c:	4b8c      	ldr	r3, [pc, #560]	; (8000e90 <digital_clock+0x814>)
 8000c5e:	6818      	ldr	r0, [r3, #0]
 8000c60:	4b88      	ldr	r3, [pc, #544]	; (8000e84 <digital_clock+0x808>)
 8000c62:	6819      	ldr	r1, [r3, #0]
 8000c64:	4b88      	ldr	r3, [pc, #544]	; (8000e88 <digital_clock+0x80c>)
 8000c66:	681a      	ldr	r2, [r3, #0]
 8000c68:	4b88      	ldr	r3, [pc, #544]	; (8000e8c <digital_clock+0x810>)
 8000c6a:	681c      	ldr	r4, [r3, #0]
 8000c6c:	687b      	ldr	r3, [r7, #4]
 8000c6e:	9300      	str	r3, [sp, #0]
 8000c70:	0023      	movs	r3, r4
 8000c72:	f001 fa41 	bl	80020f8 <d4_counter>

    	                      b=8;
 8000c76:	4b83      	ldr	r3, [pc, #524]	; (8000e84 <digital_clock+0x808>)
 8000c78:	2208      	movs	r2, #8
 8000c7a:	601a      	str	r2, [r3, #0]
    	                      c=0;
 8000c7c:	4b82      	ldr	r3, [pc, #520]	; (8000e88 <digital_clock+0x80c>)
 8000c7e:	2200      	movs	r2, #0
 8000c80:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8000c82:	4b82      	ldr	r3, [pc, #520]	; (8000e8c <digital_clock+0x810>)
 8000c84:	2209      	movs	r2, #9
 8000c86:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8000c88:	4b81      	ldr	r3, [pc, #516]	; (8000e90 <digital_clock+0x814>)
 8000c8a:	6818      	ldr	r0, [r3, #0]
 8000c8c:	4b7d      	ldr	r3, [pc, #500]	; (8000e84 <digital_clock+0x808>)
 8000c8e:	6819      	ldr	r1, [r3, #0]
 8000c90:	4b7d      	ldr	r3, [pc, #500]	; (8000e88 <digital_clock+0x80c>)
 8000c92:	681a      	ldr	r2, [r3, #0]
 8000c94:	4b7d      	ldr	r3, [pc, #500]	; (8000e8c <digital_clock+0x810>)
 8000c96:	681c      	ldr	r4, [r3, #0]
 8000c98:	687b      	ldr	r3, [r7, #4]
 8000c9a:	9300      	str	r3, [sp, #0]
 8000c9c:	0023      	movs	r3, r4
 8000c9e:	f001 fa2b 	bl	80020f8 <d4_counter>





    	                      a=1;
 8000ca2:	4b7b      	ldr	r3, [pc, #492]	; (8000e90 <digital_clock+0x814>)
 8000ca4:	2201      	movs	r2, #1
 8000ca6:	601a      	str	r2, [r3, #0]
    	                      b=7;
 8000ca8:	4b76      	ldr	r3, [pc, #472]	; (8000e84 <digital_clock+0x808>)
 8000caa:	2207      	movs	r2, #7
 8000cac:	601a      	str	r2, [r3, #0]
    	                      c=5;
 8000cae:	4b76      	ldr	r3, [pc, #472]	; (8000e88 <digital_clock+0x80c>)
 8000cb0:	2205      	movs	r2, #5
 8000cb2:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8000cb4:	4b75      	ldr	r3, [pc, #468]	; (8000e8c <digital_clock+0x810>)
 8000cb6:	2209      	movs	r2, #9
 8000cb8:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8000cba:	4b75      	ldr	r3, [pc, #468]	; (8000e90 <digital_clock+0x814>)
 8000cbc:	6818      	ldr	r0, [r3, #0]
 8000cbe:	4b71      	ldr	r3, [pc, #452]	; (8000e84 <digital_clock+0x808>)
 8000cc0:	6819      	ldr	r1, [r3, #0]
 8000cc2:	4b71      	ldr	r3, [pc, #452]	; (8000e88 <digital_clock+0x80c>)
 8000cc4:	681a      	ldr	r2, [r3, #0]
 8000cc6:	4b71      	ldr	r3, [pc, #452]	; (8000e8c <digital_clock+0x810>)
 8000cc8:	681c      	ldr	r4, [r3, #0]
 8000cca:	687b      	ldr	r3, [r7, #4]
 8000ccc:	9300      	str	r3, [sp, #0]
 8000cce:	0023      	movs	r3, r4
 8000cd0:	f001 fa12 	bl	80020f8 <d4_counter>

    	                      b=7;
 8000cd4:	4b6b      	ldr	r3, [pc, #428]	; (8000e84 <digital_clock+0x808>)
 8000cd6:	2207      	movs	r2, #7
 8000cd8:	601a      	str	r2, [r3, #0]
    	                      c=4;
 8000cda:	4b6b      	ldr	r3, [pc, #428]	; (8000e88 <digital_clock+0x80c>)
 8000cdc:	2204      	movs	r2, #4
 8000cde:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8000ce0:	4b6a      	ldr	r3, [pc, #424]	; (8000e8c <digital_clock+0x810>)
 8000ce2:	2209      	movs	r2, #9
 8000ce4:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8000ce6:	4b6a      	ldr	r3, [pc, #424]	; (8000e90 <digital_clock+0x814>)
 8000ce8:	6818      	ldr	r0, [r3, #0]
 8000cea:	4b66      	ldr	r3, [pc, #408]	; (8000e84 <digital_clock+0x808>)
 8000cec:	6819      	ldr	r1, [r3, #0]
 8000cee:	4b66      	ldr	r3, [pc, #408]	; (8000e88 <digital_clock+0x80c>)
 8000cf0:	681a      	ldr	r2, [r3, #0]
 8000cf2:	4b66      	ldr	r3, [pc, #408]	; (8000e8c <digital_clock+0x810>)
 8000cf4:	681c      	ldr	r4, [r3, #0]
 8000cf6:	687b      	ldr	r3, [r7, #4]
 8000cf8:	9300      	str	r3, [sp, #0]
 8000cfa:	0023      	movs	r3, r4
 8000cfc:	f001 f9fc 	bl	80020f8 <d4_counter>

    	                      b=7;
 8000d00:	4b60      	ldr	r3, [pc, #384]	; (8000e84 <digital_clock+0x808>)
 8000d02:	2207      	movs	r2, #7
 8000d04:	601a      	str	r2, [r3, #0]
    	                      c=3;
 8000d06:	4b60      	ldr	r3, [pc, #384]	; (8000e88 <digital_clock+0x80c>)
 8000d08:	2203      	movs	r2, #3
 8000d0a:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8000d0c:	4b5f      	ldr	r3, [pc, #380]	; (8000e8c <digital_clock+0x810>)
 8000d0e:	2209      	movs	r2, #9
 8000d10:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8000d12:	4b5f      	ldr	r3, [pc, #380]	; (8000e90 <digital_clock+0x814>)
 8000d14:	6818      	ldr	r0, [r3, #0]
 8000d16:	4b5b      	ldr	r3, [pc, #364]	; (8000e84 <digital_clock+0x808>)
 8000d18:	6819      	ldr	r1, [r3, #0]
 8000d1a:	4b5b      	ldr	r3, [pc, #364]	; (8000e88 <digital_clock+0x80c>)
 8000d1c:	681a      	ldr	r2, [r3, #0]
 8000d1e:	4b5b      	ldr	r3, [pc, #364]	; (8000e8c <digital_clock+0x810>)
 8000d20:	681c      	ldr	r4, [r3, #0]
 8000d22:	687b      	ldr	r3, [r7, #4]
 8000d24:	9300      	str	r3, [sp, #0]
 8000d26:	0023      	movs	r3, r4
 8000d28:	f001 f9e6 	bl	80020f8 <d4_counter>

    	                      b=7;
 8000d2c:	4b55      	ldr	r3, [pc, #340]	; (8000e84 <digital_clock+0x808>)
 8000d2e:	2207      	movs	r2, #7
 8000d30:	601a      	str	r2, [r3, #0]
    	                      c=2;
 8000d32:	4b55      	ldr	r3, [pc, #340]	; (8000e88 <digital_clock+0x80c>)
 8000d34:	2202      	movs	r2, #2
 8000d36:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8000d38:	4b54      	ldr	r3, [pc, #336]	; (8000e8c <digital_clock+0x810>)
 8000d3a:	2209      	movs	r2, #9
 8000d3c:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8000d3e:	4b54      	ldr	r3, [pc, #336]	; (8000e90 <digital_clock+0x814>)
 8000d40:	6818      	ldr	r0, [r3, #0]
 8000d42:	4b50      	ldr	r3, [pc, #320]	; (8000e84 <digital_clock+0x808>)
 8000d44:	6819      	ldr	r1, [r3, #0]
 8000d46:	4b50      	ldr	r3, [pc, #320]	; (8000e88 <digital_clock+0x80c>)
 8000d48:	681a      	ldr	r2, [r3, #0]
 8000d4a:	4b50      	ldr	r3, [pc, #320]	; (8000e8c <digital_clock+0x810>)
 8000d4c:	681c      	ldr	r4, [r3, #0]
 8000d4e:	687b      	ldr	r3, [r7, #4]
 8000d50:	9300      	str	r3, [sp, #0]
 8000d52:	0023      	movs	r3, r4
 8000d54:	f001 f9d0 	bl	80020f8 <d4_counter>

    	                      b=7;
 8000d58:	4b4a      	ldr	r3, [pc, #296]	; (8000e84 <digital_clock+0x808>)
 8000d5a:	2207      	movs	r2, #7
 8000d5c:	601a      	str	r2, [r3, #0]
    	                      c=1;
 8000d5e:	4b4a      	ldr	r3, [pc, #296]	; (8000e88 <digital_clock+0x80c>)
 8000d60:	2201      	movs	r2, #1
 8000d62:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8000d64:	4b49      	ldr	r3, [pc, #292]	; (8000e8c <digital_clock+0x810>)
 8000d66:	2209      	movs	r2, #9
 8000d68:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8000d6a:	4b49      	ldr	r3, [pc, #292]	; (8000e90 <digital_clock+0x814>)
 8000d6c:	6818      	ldr	r0, [r3, #0]
 8000d6e:	4b45      	ldr	r3, [pc, #276]	; (8000e84 <digital_clock+0x808>)
 8000d70:	6819      	ldr	r1, [r3, #0]
 8000d72:	4b45      	ldr	r3, [pc, #276]	; (8000e88 <digital_clock+0x80c>)
 8000d74:	681a      	ldr	r2, [r3, #0]
 8000d76:	4b45      	ldr	r3, [pc, #276]	; (8000e8c <digital_clock+0x810>)
 8000d78:	681c      	ldr	r4, [r3, #0]
 8000d7a:	687b      	ldr	r3, [r7, #4]
 8000d7c:	9300      	str	r3, [sp, #0]
 8000d7e:	0023      	movs	r3, r4
 8000d80:	f001 f9ba 	bl	80020f8 <d4_counter>

    	                      b=7;
 8000d84:	4b3f      	ldr	r3, [pc, #252]	; (8000e84 <digital_clock+0x808>)
 8000d86:	2207      	movs	r2, #7
 8000d88:	601a      	str	r2, [r3, #0]
    	                      c=0;
 8000d8a:	4b3f      	ldr	r3, [pc, #252]	; (8000e88 <digital_clock+0x80c>)
 8000d8c:	2200      	movs	r2, #0
 8000d8e:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8000d90:	4b3e      	ldr	r3, [pc, #248]	; (8000e8c <digital_clock+0x810>)
 8000d92:	2209      	movs	r2, #9
 8000d94:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8000d96:	4b3e      	ldr	r3, [pc, #248]	; (8000e90 <digital_clock+0x814>)
 8000d98:	6818      	ldr	r0, [r3, #0]
 8000d9a:	4b3a      	ldr	r3, [pc, #232]	; (8000e84 <digital_clock+0x808>)
 8000d9c:	6819      	ldr	r1, [r3, #0]
 8000d9e:	4b3a      	ldr	r3, [pc, #232]	; (8000e88 <digital_clock+0x80c>)
 8000da0:	681a      	ldr	r2, [r3, #0]
 8000da2:	4b3a      	ldr	r3, [pc, #232]	; (8000e8c <digital_clock+0x810>)
 8000da4:	681c      	ldr	r4, [r3, #0]
 8000da6:	687b      	ldr	r3, [r7, #4]
 8000da8:	9300      	str	r3, [sp, #0]
 8000daa:	0023      	movs	r3, r4
 8000dac:	f001 f9a4 	bl	80020f8 <d4_counter>



    	                      a=1;
 8000db0:	4b37      	ldr	r3, [pc, #220]	; (8000e90 <digital_clock+0x814>)
 8000db2:	2201      	movs	r2, #1
 8000db4:	601a      	str	r2, [r3, #0]
    	                      b=6;
 8000db6:	4b33      	ldr	r3, [pc, #204]	; (8000e84 <digital_clock+0x808>)
 8000db8:	2206      	movs	r2, #6
 8000dba:	601a      	str	r2, [r3, #0]
    	                      c=5;
 8000dbc:	4b32      	ldr	r3, [pc, #200]	; (8000e88 <digital_clock+0x80c>)
 8000dbe:	2205      	movs	r2, #5
 8000dc0:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8000dc2:	4b32      	ldr	r3, [pc, #200]	; (8000e8c <digital_clock+0x810>)
 8000dc4:	2209      	movs	r2, #9
 8000dc6:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8000dc8:	4b31      	ldr	r3, [pc, #196]	; (8000e90 <digital_clock+0x814>)
 8000dca:	6818      	ldr	r0, [r3, #0]
 8000dcc:	4b2d      	ldr	r3, [pc, #180]	; (8000e84 <digital_clock+0x808>)
 8000dce:	6819      	ldr	r1, [r3, #0]
 8000dd0:	4b2d      	ldr	r3, [pc, #180]	; (8000e88 <digital_clock+0x80c>)
 8000dd2:	681a      	ldr	r2, [r3, #0]
 8000dd4:	4b2d      	ldr	r3, [pc, #180]	; (8000e8c <digital_clock+0x810>)
 8000dd6:	681c      	ldr	r4, [r3, #0]
 8000dd8:	687b      	ldr	r3, [r7, #4]
 8000dda:	9300      	str	r3, [sp, #0]
 8000ddc:	0023      	movs	r3, r4
 8000dde:	f001 f98b 	bl	80020f8 <d4_counter>

    	                      b=6;
 8000de2:	4b28      	ldr	r3, [pc, #160]	; (8000e84 <digital_clock+0x808>)
 8000de4:	2206      	movs	r2, #6
 8000de6:	601a      	str	r2, [r3, #0]
    	                      c=4;
 8000de8:	4b27      	ldr	r3, [pc, #156]	; (8000e88 <digital_clock+0x80c>)
 8000dea:	2204      	movs	r2, #4
 8000dec:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8000dee:	4b27      	ldr	r3, [pc, #156]	; (8000e8c <digital_clock+0x810>)
 8000df0:	2209      	movs	r2, #9
 8000df2:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8000df4:	4b26      	ldr	r3, [pc, #152]	; (8000e90 <digital_clock+0x814>)
 8000df6:	6818      	ldr	r0, [r3, #0]
 8000df8:	4b22      	ldr	r3, [pc, #136]	; (8000e84 <digital_clock+0x808>)
 8000dfa:	6819      	ldr	r1, [r3, #0]
 8000dfc:	4b22      	ldr	r3, [pc, #136]	; (8000e88 <digital_clock+0x80c>)
 8000dfe:	681a      	ldr	r2, [r3, #0]
 8000e00:	4b22      	ldr	r3, [pc, #136]	; (8000e8c <digital_clock+0x810>)
 8000e02:	681c      	ldr	r4, [r3, #0]
 8000e04:	687b      	ldr	r3, [r7, #4]
 8000e06:	9300      	str	r3, [sp, #0]
 8000e08:	0023      	movs	r3, r4
 8000e0a:	f001 f975 	bl	80020f8 <d4_counter>

    	                      b=6;
 8000e0e:	4b1d      	ldr	r3, [pc, #116]	; (8000e84 <digital_clock+0x808>)
 8000e10:	2206      	movs	r2, #6
 8000e12:	601a      	str	r2, [r3, #0]
    	                      c=3;
 8000e14:	4b1c      	ldr	r3, [pc, #112]	; (8000e88 <digital_clock+0x80c>)
 8000e16:	2203      	movs	r2, #3
 8000e18:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8000e1a:	4b1c      	ldr	r3, [pc, #112]	; (8000e8c <digital_clock+0x810>)
 8000e1c:	2209      	movs	r2, #9
 8000e1e:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8000e20:	4b1b      	ldr	r3, [pc, #108]	; (8000e90 <digital_clock+0x814>)
 8000e22:	6818      	ldr	r0, [r3, #0]
 8000e24:	4b17      	ldr	r3, [pc, #92]	; (8000e84 <digital_clock+0x808>)
 8000e26:	6819      	ldr	r1, [r3, #0]
 8000e28:	4b17      	ldr	r3, [pc, #92]	; (8000e88 <digital_clock+0x80c>)
 8000e2a:	681a      	ldr	r2, [r3, #0]
 8000e2c:	4b17      	ldr	r3, [pc, #92]	; (8000e8c <digital_clock+0x810>)
 8000e2e:	681c      	ldr	r4, [r3, #0]
 8000e30:	687b      	ldr	r3, [r7, #4]
 8000e32:	9300      	str	r3, [sp, #0]
 8000e34:	0023      	movs	r3, r4
 8000e36:	f001 f95f 	bl	80020f8 <d4_counter>

    	                      b=6;
 8000e3a:	4b12      	ldr	r3, [pc, #72]	; (8000e84 <digital_clock+0x808>)
 8000e3c:	2206      	movs	r2, #6
 8000e3e:	601a      	str	r2, [r3, #0]
    	                      c=2;
 8000e40:	4b11      	ldr	r3, [pc, #68]	; (8000e88 <digital_clock+0x80c>)
 8000e42:	2202      	movs	r2, #2
 8000e44:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8000e46:	4b11      	ldr	r3, [pc, #68]	; (8000e8c <digital_clock+0x810>)
 8000e48:	2209      	movs	r2, #9
 8000e4a:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8000e4c:	4b10      	ldr	r3, [pc, #64]	; (8000e90 <digital_clock+0x814>)
 8000e4e:	6818      	ldr	r0, [r3, #0]
 8000e50:	4b0c      	ldr	r3, [pc, #48]	; (8000e84 <digital_clock+0x808>)
 8000e52:	6819      	ldr	r1, [r3, #0]
 8000e54:	4b0c      	ldr	r3, [pc, #48]	; (8000e88 <digital_clock+0x80c>)
 8000e56:	681a      	ldr	r2, [r3, #0]
 8000e58:	4b0c      	ldr	r3, [pc, #48]	; (8000e8c <digital_clock+0x810>)
 8000e5a:	681c      	ldr	r4, [r3, #0]
 8000e5c:	687b      	ldr	r3, [r7, #4]
 8000e5e:	9300      	str	r3, [sp, #0]
 8000e60:	0023      	movs	r3, r4
 8000e62:	f001 f949 	bl	80020f8 <d4_counter>

    	                      b=6;
 8000e66:	4b07      	ldr	r3, [pc, #28]	; (8000e84 <digital_clock+0x808>)
 8000e68:	2206      	movs	r2, #6
 8000e6a:	601a      	str	r2, [r3, #0]
    	                      c=1;
 8000e6c:	4b06      	ldr	r3, [pc, #24]	; (8000e88 <digital_clock+0x80c>)
 8000e6e:	2201      	movs	r2, #1
 8000e70:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8000e72:	4b06      	ldr	r3, [pc, #24]	; (8000e8c <digital_clock+0x810>)
 8000e74:	2209      	movs	r2, #9
 8000e76:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8000e78:	4b05      	ldr	r3, [pc, #20]	; (8000e90 <digital_clock+0x814>)
 8000e7a:	6818      	ldr	r0, [r3, #0]
 8000e7c:	4b01      	ldr	r3, [pc, #4]	; (8000e84 <digital_clock+0x808>)
 8000e7e:	6819      	ldr	r1, [r3, #0]
 8000e80:	e008      	b.n	8000e94 <digital_clock+0x818>
 8000e82:	46c0      	nop			; (mov r8, r8)
 8000e84:	20000004 	.word	0x20000004
 8000e88:	20000008 	.word	0x20000008
 8000e8c:	2000000c 	.word	0x2000000c
 8000e90:	20000000 	.word	0x20000000
 8000e94:	4bfe      	ldr	r3, [pc, #1016]	; (8001290 <digital_clock+0xc14>)
 8000e96:	681a      	ldr	r2, [r3, #0]
 8000e98:	4bfe      	ldr	r3, [pc, #1016]	; (8001294 <digital_clock+0xc18>)
 8000e9a:	681c      	ldr	r4, [r3, #0]
 8000e9c:	687b      	ldr	r3, [r7, #4]
 8000e9e:	9300      	str	r3, [sp, #0]
 8000ea0:	0023      	movs	r3, r4
 8000ea2:	f001 f929 	bl	80020f8 <d4_counter>

    	                      b=6;
 8000ea6:	4bfc      	ldr	r3, [pc, #1008]	; (8001298 <digital_clock+0xc1c>)
 8000ea8:	2206      	movs	r2, #6
 8000eaa:	601a      	str	r2, [r3, #0]
    	                      c=0;
 8000eac:	4bf8      	ldr	r3, [pc, #992]	; (8001290 <digital_clock+0xc14>)
 8000eae:	2200      	movs	r2, #0
 8000eb0:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8000eb2:	4bf8      	ldr	r3, [pc, #992]	; (8001294 <digital_clock+0xc18>)
 8000eb4:	2209      	movs	r2, #9
 8000eb6:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8000eb8:	4bf8      	ldr	r3, [pc, #992]	; (800129c <digital_clock+0xc20>)
 8000eba:	6818      	ldr	r0, [r3, #0]
 8000ebc:	4bf6      	ldr	r3, [pc, #984]	; (8001298 <digital_clock+0xc1c>)
 8000ebe:	6819      	ldr	r1, [r3, #0]
 8000ec0:	4bf3      	ldr	r3, [pc, #972]	; (8001290 <digital_clock+0xc14>)
 8000ec2:	681a      	ldr	r2, [r3, #0]
 8000ec4:	4bf3      	ldr	r3, [pc, #972]	; (8001294 <digital_clock+0xc18>)
 8000ec6:	681c      	ldr	r4, [r3, #0]
 8000ec8:	687b      	ldr	r3, [r7, #4]
 8000eca:	9300      	str	r3, [sp, #0]
 8000ecc:	0023      	movs	r3, r4
 8000ece:	f001 f913 	bl	80020f8 <d4_counter>



    	                      a=1;
 8000ed2:	4bf2      	ldr	r3, [pc, #968]	; (800129c <digital_clock+0xc20>)
 8000ed4:	2201      	movs	r2, #1
 8000ed6:	601a      	str	r2, [r3, #0]
    	                      b=5;
 8000ed8:	4bef      	ldr	r3, [pc, #956]	; (8001298 <digital_clock+0xc1c>)
 8000eda:	2205      	movs	r2, #5
 8000edc:	601a      	str	r2, [r3, #0]
    	                      c=5;
 8000ede:	4bec      	ldr	r3, [pc, #944]	; (8001290 <digital_clock+0xc14>)
 8000ee0:	2205      	movs	r2, #5
 8000ee2:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8000ee4:	4beb      	ldr	r3, [pc, #940]	; (8001294 <digital_clock+0xc18>)
 8000ee6:	2209      	movs	r2, #9
 8000ee8:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8000eea:	4bec      	ldr	r3, [pc, #944]	; (800129c <digital_clock+0xc20>)
 8000eec:	6818      	ldr	r0, [r3, #0]
 8000eee:	4bea      	ldr	r3, [pc, #936]	; (8001298 <digital_clock+0xc1c>)
 8000ef0:	6819      	ldr	r1, [r3, #0]
 8000ef2:	4be7      	ldr	r3, [pc, #924]	; (8001290 <digital_clock+0xc14>)
 8000ef4:	681a      	ldr	r2, [r3, #0]
 8000ef6:	4be7      	ldr	r3, [pc, #924]	; (8001294 <digital_clock+0xc18>)
 8000ef8:	681c      	ldr	r4, [r3, #0]
 8000efa:	687b      	ldr	r3, [r7, #4]
 8000efc:	9300      	str	r3, [sp, #0]
 8000efe:	0023      	movs	r3, r4
 8000f00:	f001 f8fa 	bl	80020f8 <d4_counter>

    	                      b=5;
 8000f04:	4be4      	ldr	r3, [pc, #912]	; (8001298 <digital_clock+0xc1c>)
 8000f06:	2205      	movs	r2, #5
 8000f08:	601a      	str	r2, [r3, #0]
    	                      c=4;
 8000f0a:	4be1      	ldr	r3, [pc, #900]	; (8001290 <digital_clock+0xc14>)
 8000f0c:	2204      	movs	r2, #4
 8000f0e:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8000f10:	4be0      	ldr	r3, [pc, #896]	; (8001294 <digital_clock+0xc18>)
 8000f12:	2209      	movs	r2, #9
 8000f14:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8000f16:	4be1      	ldr	r3, [pc, #900]	; (800129c <digital_clock+0xc20>)
 8000f18:	6818      	ldr	r0, [r3, #0]
 8000f1a:	4bdf      	ldr	r3, [pc, #892]	; (8001298 <digital_clock+0xc1c>)
 8000f1c:	6819      	ldr	r1, [r3, #0]
 8000f1e:	4bdc      	ldr	r3, [pc, #880]	; (8001290 <digital_clock+0xc14>)
 8000f20:	681a      	ldr	r2, [r3, #0]
 8000f22:	4bdc      	ldr	r3, [pc, #880]	; (8001294 <digital_clock+0xc18>)
 8000f24:	681c      	ldr	r4, [r3, #0]
 8000f26:	687b      	ldr	r3, [r7, #4]
 8000f28:	9300      	str	r3, [sp, #0]
 8000f2a:	0023      	movs	r3, r4
 8000f2c:	f001 f8e4 	bl	80020f8 <d4_counter>

    	                      b=5;
 8000f30:	4bd9      	ldr	r3, [pc, #868]	; (8001298 <digital_clock+0xc1c>)
 8000f32:	2205      	movs	r2, #5
 8000f34:	601a      	str	r2, [r3, #0]
    	                      c=3;
 8000f36:	4bd6      	ldr	r3, [pc, #856]	; (8001290 <digital_clock+0xc14>)
 8000f38:	2203      	movs	r2, #3
 8000f3a:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8000f3c:	4bd5      	ldr	r3, [pc, #852]	; (8001294 <digital_clock+0xc18>)
 8000f3e:	2209      	movs	r2, #9
 8000f40:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8000f42:	4bd6      	ldr	r3, [pc, #856]	; (800129c <digital_clock+0xc20>)
 8000f44:	6818      	ldr	r0, [r3, #0]
 8000f46:	4bd4      	ldr	r3, [pc, #848]	; (8001298 <digital_clock+0xc1c>)
 8000f48:	6819      	ldr	r1, [r3, #0]
 8000f4a:	4bd1      	ldr	r3, [pc, #836]	; (8001290 <digital_clock+0xc14>)
 8000f4c:	681a      	ldr	r2, [r3, #0]
 8000f4e:	4bd1      	ldr	r3, [pc, #836]	; (8001294 <digital_clock+0xc18>)
 8000f50:	681c      	ldr	r4, [r3, #0]
 8000f52:	687b      	ldr	r3, [r7, #4]
 8000f54:	9300      	str	r3, [sp, #0]
 8000f56:	0023      	movs	r3, r4
 8000f58:	f001 f8ce 	bl	80020f8 <d4_counter>

    	                      b=5;
 8000f5c:	4bce      	ldr	r3, [pc, #824]	; (8001298 <digital_clock+0xc1c>)
 8000f5e:	2205      	movs	r2, #5
 8000f60:	601a      	str	r2, [r3, #0]
    	                      c=2;
 8000f62:	4bcb      	ldr	r3, [pc, #812]	; (8001290 <digital_clock+0xc14>)
 8000f64:	2202      	movs	r2, #2
 8000f66:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8000f68:	4bca      	ldr	r3, [pc, #808]	; (8001294 <digital_clock+0xc18>)
 8000f6a:	2209      	movs	r2, #9
 8000f6c:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8000f6e:	4bcb      	ldr	r3, [pc, #812]	; (800129c <digital_clock+0xc20>)
 8000f70:	6818      	ldr	r0, [r3, #0]
 8000f72:	4bc9      	ldr	r3, [pc, #804]	; (8001298 <digital_clock+0xc1c>)
 8000f74:	6819      	ldr	r1, [r3, #0]
 8000f76:	4bc6      	ldr	r3, [pc, #792]	; (8001290 <digital_clock+0xc14>)
 8000f78:	681a      	ldr	r2, [r3, #0]
 8000f7a:	4bc6      	ldr	r3, [pc, #792]	; (8001294 <digital_clock+0xc18>)
 8000f7c:	681c      	ldr	r4, [r3, #0]
 8000f7e:	687b      	ldr	r3, [r7, #4]
 8000f80:	9300      	str	r3, [sp, #0]
 8000f82:	0023      	movs	r3, r4
 8000f84:	f001 f8b8 	bl	80020f8 <d4_counter>

    	                      b=5;
 8000f88:	4bc3      	ldr	r3, [pc, #780]	; (8001298 <digital_clock+0xc1c>)
 8000f8a:	2205      	movs	r2, #5
 8000f8c:	601a      	str	r2, [r3, #0]
    	                      c=1;
 8000f8e:	4bc0      	ldr	r3, [pc, #768]	; (8001290 <digital_clock+0xc14>)
 8000f90:	2201      	movs	r2, #1
 8000f92:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8000f94:	4bbf      	ldr	r3, [pc, #764]	; (8001294 <digital_clock+0xc18>)
 8000f96:	2209      	movs	r2, #9
 8000f98:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8000f9a:	4bc0      	ldr	r3, [pc, #768]	; (800129c <digital_clock+0xc20>)
 8000f9c:	6818      	ldr	r0, [r3, #0]
 8000f9e:	4bbe      	ldr	r3, [pc, #760]	; (8001298 <digital_clock+0xc1c>)
 8000fa0:	6819      	ldr	r1, [r3, #0]
 8000fa2:	4bbb      	ldr	r3, [pc, #748]	; (8001290 <digital_clock+0xc14>)
 8000fa4:	681a      	ldr	r2, [r3, #0]
 8000fa6:	4bbb      	ldr	r3, [pc, #748]	; (8001294 <digital_clock+0xc18>)
 8000fa8:	681c      	ldr	r4, [r3, #0]
 8000faa:	687b      	ldr	r3, [r7, #4]
 8000fac:	9300      	str	r3, [sp, #0]
 8000fae:	0023      	movs	r3, r4
 8000fb0:	f001 f8a2 	bl	80020f8 <d4_counter>

    	                      b=5;
 8000fb4:	4bb8      	ldr	r3, [pc, #736]	; (8001298 <digital_clock+0xc1c>)
 8000fb6:	2205      	movs	r2, #5
 8000fb8:	601a      	str	r2, [r3, #0]
    	                      c=0;
 8000fba:	4bb5      	ldr	r3, [pc, #724]	; (8001290 <digital_clock+0xc14>)
 8000fbc:	2200      	movs	r2, #0
 8000fbe:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8000fc0:	4bb4      	ldr	r3, [pc, #720]	; (8001294 <digital_clock+0xc18>)
 8000fc2:	2209      	movs	r2, #9
 8000fc4:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8000fc6:	4bb5      	ldr	r3, [pc, #724]	; (800129c <digital_clock+0xc20>)
 8000fc8:	6818      	ldr	r0, [r3, #0]
 8000fca:	4bb3      	ldr	r3, [pc, #716]	; (8001298 <digital_clock+0xc1c>)
 8000fcc:	6819      	ldr	r1, [r3, #0]
 8000fce:	4bb0      	ldr	r3, [pc, #704]	; (8001290 <digital_clock+0xc14>)
 8000fd0:	681a      	ldr	r2, [r3, #0]
 8000fd2:	4bb0      	ldr	r3, [pc, #704]	; (8001294 <digital_clock+0xc18>)
 8000fd4:	681c      	ldr	r4, [r3, #0]
 8000fd6:	687b      	ldr	r3, [r7, #4]
 8000fd8:	9300      	str	r3, [sp, #0]
 8000fda:	0023      	movs	r3, r4
 8000fdc:	f001 f88c 	bl	80020f8 <d4_counter>

    	                      a=1;
 8000fe0:	4bae      	ldr	r3, [pc, #696]	; (800129c <digital_clock+0xc20>)
 8000fe2:	2201      	movs	r2, #1
 8000fe4:	601a      	str	r2, [r3, #0]
    	                      b=4;
 8000fe6:	4bac      	ldr	r3, [pc, #688]	; (8001298 <digital_clock+0xc1c>)
 8000fe8:	2204      	movs	r2, #4
 8000fea:	601a      	str	r2, [r3, #0]
    	                      c=5;
 8000fec:	4ba8      	ldr	r3, [pc, #672]	; (8001290 <digital_clock+0xc14>)
 8000fee:	2205      	movs	r2, #5
 8000ff0:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8000ff2:	4ba8      	ldr	r3, [pc, #672]	; (8001294 <digital_clock+0xc18>)
 8000ff4:	2209      	movs	r2, #9
 8000ff6:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8000ff8:	4ba8      	ldr	r3, [pc, #672]	; (800129c <digital_clock+0xc20>)
 8000ffa:	6818      	ldr	r0, [r3, #0]
 8000ffc:	4ba6      	ldr	r3, [pc, #664]	; (8001298 <digital_clock+0xc1c>)
 8000ffe:	6819      	ldr	r1, [r3, #0]
 8001000:	4ba3      	ldr	r3, [pc, #652]	; (8001290 <digital_clock+0xc14>)
 8001002:	681a      	ldr	r2, [r3, #0]
 8001004:	4ba3      	ldr	r3, [pc, #652]	; (8001294 <digital_clock+0xc18>)
 8001006:	681c      	ldr	r4, [r3, #0]
 8001008:	687b      	ldr	r3, [r7, #4]
 800100a:	9300      	str	r3, [sp, #0]
 800100c:	0023      	movs	r3, r4
 800100e:	f001 f873 	bl	80020f8 <d4_counter>

    	                      b=4;
 8001012:	4ba1      	ldr	r3, [pc, #644]	; (8001298 <digital_clock+0xc1c>)
 8001014:	2204      	movs	r2, #4
 8001016:	601a      	str	r2, [r3, #0]
    	                      c=4;
 8001018:	4b9d      	ldr	r3, [pc, #628]	; (8001290 <digital_clock+0xc14>)
 800101a:	2204      	movs	r2, #4
 800101c:	601a      	str	r2, [r3, #0]
    	                      d=9;
 800101e:	4b9d      	ldr	r3, [pc, #628]	; (8001294 <digital_clock+0xc18>)
 8001020:	2209      	movs	r2, #9
 8001022:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8001024:	4b9d      	ldr	r3, [pc, #628]	; (800129c <digital_clock+0xc20>)
 8001026:	6818      	ldr	r0, [r3, #0]
 8001028:	4b9b      	ldr	r3, [pc, #620]	; (8001298 <digital_clock+0xc1c>)
 800102a:	6819      	ldr	r1, [r3, #0]
 800102c:	4b98      	ldr	r3, [pc, #608]	; (8001290 <digital_clock+0xc14>)
 800102e:	681a      	ldr	r2, [r3, #0]
 8001030:	4b98      	ldr	r3, [pc, #608]	; (8001294 <digital_clock+0xc18>)
 8001032:	681c      	ldr	r4, [r3, #0]
 8001034:	687b      	ldr	r3, [r7, #4]
 8001036:	9300      	str	r3, [sp, #0]
 8001038:	0023      	movs	r3, r4
 800103a:	f001 f85d 	bl	80020f8 <d4_counter>

    	                      b=4;
 800103e:	4b96      	ldr	r3, [pc, #600]	; (8001298 <digital_clock+0xc1c>)
 8001040:	2204      	movs	r2, #4
 8001042:	601a      	str	r2, [r3, #0]
    	                      c=3;
 8001044:	4b92      	ldr	r3, [pc, #584]	; (8001290 <digital_clock+0xc14>)
 8001046:	2203      	movs	r2, #3
 8001048:	601a      	str	r2, [r3, #0]
    	                      d=9;
 800104a:	4b92      	ldr	r3, [pc, #584]	; (8001294 <digital_clock+0xc18>)
 800104c:	2209      	movs	r2, #9
 800104e:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8001050:	4b92      	ldr	r3, [pc, #584]	; (800129c <digital_clock+0xc20>)
 8001052:	6818      	ldr	r0, [r3, #0]
 8001054:	4b90      	ldr	r3, [pc, #576]	; (8001298 <digital_clock+0xc1c>)
 8001056:	6819      	ldr	r1, [r3, #0]
 8001058:	4b8d      	ldr	r3, [pc, #564]	; (8001290 <digital_clock+0xc14>)
 800105a:	681a      	ldr	r2, [r3, #0]
 800105c:	4b8d      	ldr	r3, [pc, #564]	; (8001294 <digital_clock+0xc18>)
 800105e:	681c      	ldr	r4, [r3, #0]
 8001060:	687b      	ldr	r3, [r7, #4]
 8001062:	9300      	str	r3, [sp, #0]
 8001064:	0023      	movs	r3, r4
 8001066:	f001 f847 	bl	80020f8 <d4_counter>

    	                      b=4;
 800106a:	4b8b      	ldr	r3, [pc, #556]	; (8001298 <digital_clock+0xc1c>)
 800106c:	2204      	movs	r2, #4
 800106e:	601a      	str	r2, [r3, #0]
    	                      c=2;
 8001070:	4b87      	ldr	r3, [pc, #540]	; (8001290 <digital_clock+0xc14>)
 8001072:	2202      	movs	r2, #2
 8001074:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8001076:	4b87      	ldr	r3, [pc, #540]	; (8001294 <digital_clock+0xc18>)
 8001078:	2209      	movs	r2, #9
 800107a:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 800107c:	4b87      	ldr	r3, [pc, #540]	; (800129c <digital_clock+0xc20>)
 800107e:	6818      	ldr	r0, [r3, #0]
 8001080:	4b85      	ldr	r3, [pc, #532]	; (8001298 <digital_clock+0xc1c>)
 8001082:	6819      	ldr	r1, [r3, #0]
 8001084:	4b82      	ldr	r3, [pc, #520]	; (8001290 <digital_clock+0xc14>)
 8001086:	681a      	ldr	r2, [r3, #0]
 8001088:	4b82      	ldr	r3, [pc, #520]	; (8001294 <digital_clock+0xc18>)
 800108a:	681c      	ldr	r4, [r3, #0]
 800108c:	687b      	ldr	r3, [r7, #4]
 800108e:	9300      	str	r3, [sp, #0]
 8001090:	0023      	movs	r3, r4
 8001092:	f001 f831 	bl	80020f8 <d4_counter>

    	                      b=4;
 8001096:	4b80      	ldr	r3, [pc, #512]	; (8001298 <digital_clock+0xc1c>)
 8001098:	2204      	movs	r2, #4
 800109a:	601a      	str	r2, [r3, #0]
    	                      c=1;
 800109c:	4b7c      	ldr	r3, [pc, #496]	; (8001290 <digital_clock+0xc14>)
 800109e:	2201      	movs	r2, #1
 80010a0:	601a      	str	r2, [r3, #0]
    	                      d=9;
 80010a2:	4b7c      	ldr	r3, [pc, #496]	; (8001294 <digital_clock+0xc18>)
 80010a4:	2209      	movs	r2, #9
 80010a6:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 80010a8:	4b7c      	ldr	r3, [pc, #496]	; (800129c <digital_clock+0xc20>)
 80010aa:	6818      	ldr	r0, [r3, #0]
 80010ac:	4b7a      	ldr	r3, [pc, #488]	; (8001298 <digital_clock+0xc1c>)
 80010ae:	6819      	ldr	r1, [r3, #0]
 80010b0:	4b77      	ldr	r3, [pc, #476]	; (8001290 <digital_clock+0xc14>)
 80010b2:	681a      	ldr	r2, [r3, #0]
 80010b4:	4b77      	ldr	r3, [pc, #476]	; (8001294 <digital_clock+0xc18>)
 80010b6:	681c      	ldr	r4, [r3, #0]
 80010b8:	687b      	ldr	r3, [r7, #4]
 80010ba:	9300      	str	r3, [sp, #0]
 80010bc:	0023      	movs	r3, r4
 80010be:	f001 f81b 	bl	80020f8 <d4_counter>

    	                      b=4;
 80010c2:	4b75      	ldr	r3, [pc, #468]	; (8001298 <digital_clock+0xc1c>)
 80010c4:	2204      	movs	r2, #4
 80010c6:	601a      	str	r2, [r3, #0]
    	                      c=0;
 80010c8:	4b71      	ldr	r3, [pc, #452]	; (8001290 <digital_clock+0xc14>)
 80010ca:	2200      	movs	r2, #0
 80010cc:	601a      	str	r2, [r3, #0]
    	                      d=9;
 80010ce:	4b71      	ldr	r3, [pc, #452]	; (8001294 <digital_clock+0xc18>)
 80010d0:	2209      	movs	r2, #9
 80010d2:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 80010d4:	4b71      	ldr	r3, [pc, #452]	; (800129c <digital_clock+0xc20>)
 80010d6:	6818      	ldr	r0, [r3, #0]
 80010d8:	4b6f      	ldr	r3, [pc, #444]	; (8001298 <digital_clock+0xc1c>)
 80010da:	6819      	ldr	r1, [r3, #0]
 80010dc:	4b6c      	ldr	r3, [pc, #432]	; (8001290 <digital_clock+0xc14>)
 80010de:	681a      	ldr	r2, [r3, #0]
 80010e0:	4b6c      	ldr	r3, [pc, #432]	; (8001294 <digital_clock+0xc18>)
 80010e2:	681c      	ldr	r4, [r3, #0]
 80010e4:	687b      	ldr	r3, [r7, #4]
 80010e6:	9300      	str	r3, [sp, #0]
 80010e8:	0023      	movs	r3, r4
 80010ea:	f001 f805 	bl	80020f8 <d4_counter>

    	                      a=1;
 80010ee:	4b6b      	ldr	r3, [pc, #428]	; (800129c <digital_clock+0xc20>)
 80010f0:	2201      	movs	r2, #1
 80010f2:	601a      	str	r2, [r3, #0]
    	                      b=3;
 80010f4:	4b68      	ldr	r3, [pc, #416]	; (8001298 <digital_clock+0xc1c>)
 80010f6:	2203      	movs	r2, #3
 80010f8:	601a      	str	r2, [r3, #0]
    	                      c=5;
 80010fa:	4b65      	ldr	r3, [pc, #404]	; (8001290 <digital_clock+0xc14>)
 80010fc:	2205      	movs	r2, #5
 80010fe:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8001100:	4b64      	ldr	r3, [pc, #400]	; (8001294 <digital_clock+0xc18>)
 8001102:	2209      	movs	r2, #9
 8001104:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8001106:	4b65      	ldr	r3, [pc, #404]	; (800129c <digital_clock+0xc20>)
 8001108:	6818      	ldr	r0, [r3, #0]
 800110a:	4b63      	ldr	r3, [pc, #396]	; (8001298 <digital_clock+0xc1c>)
 800110c:	6819      	ldr	r1, [r3, #0]
 800110e:	4b60      	ldr	r3, [pc, #384]	; (8001290 <digital_clock+0xc14>)
 8001110:	681a      	ldr	r2, [r3, #0]
 8001112:	4b60      	ldr	r3, [pc, #384]	; (8001294 <digital_clock+0xc18>)
 8001114:	681c      	ldr	r4, [r3, #0]
 8001116:	687b      	ldr	r3, [r7, #4]
 8001118:	9300      	str	r3, [sp, #0]
 800111a:	0023      	movs	r3, r4
 800111c:	f000 ffec 	bl	80020f8 <d4_counter>

    	                      b=3;
 8001120:	4b5d      	ldr	r3, [pc, #372]	; (8001298 <digital_clock+0xc1c>)
 8001122:	2203      	movs	r2, #3
 8001124:	601a      	str	r2, [r3, #0]
    	                      c=4;
 8001126:	4b5a      	ldr	r3, [pc, #360]	; (8001290 <digital_clock+0xc14>)
 8001128:	2204      	movs	r2, #4
 800112a:	601a      	str	r2, [r3, #0]
    	                      d=9;
 800112c:	4b59      	ldr	r3, [pc, #356]	; (8001294 <digital_clock+0xc18>)
 800112e:	2209      	movs	r2, #9
 8001130:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8001132:	4b5a      	ldr	r3, [pc, #360]	; (800129c <digital_clock+0xc20>)
 8001134:	6818      	ldr	r0, [r3, #0]
 8001136:	4b58      	ldr	r3, [pc, #352]	; (8001298 <digital_clock+0xc1c>)
 8001138:	6819      	ldr	r1, [r3, #0]
 800113a:	4b55      	ldr	r3, [pc, #340]	; (8001290 <digital_clock+0xc14>)
 800113c:	681a      	ldr	r2, [r3, #0]
 800113e:	4b55      	ldr	r3, [pc, #340]	; (8001294 <digital_clock+0xc18>)
 8001140:	681c      	ldr	r4, [r3, #0]
 8001142:	687b      	ldr	r3, [r7, #4]
 8001144:	9300      	str	r3, [sp, #0]
 8001146:	0023      	movs	r3, r4
 8001148:	f000 ffd6 	bl	80020f8 <d4_counter>

    	                      b=3;
 800114c:	4b52      	ldr	r3, [pc, #328]	; (8001298 <digital_clock+0xc1c>)
 800114e:	2203      	movs	r2, #3
 8001150:	601a      	str	r2, [r3, #0]
    	                      c=3;
 8001152:	4b4f      	ldr	r3, [pc, #316]	; (8001290 <digital_clock+0xc14>)
 8001154:	2203      	movs	r2, #3
 8001156:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8001158:	4b4e      	ldr	r3, [pc, #312]	; (8001294 <digital_clock+0xc18>)
 800115a:	2209      	movs	r2, #9
 800115c:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 800115e:	4b4f      	ldr	r3, [pc, #316]	; (800129c <digital_clock+0xc20>)
 8001160:	6818      	ldr	r0, [r3, #0]
 8001162:	4b4d      	ldr	r3, [pc, #308]	; (8001298 <digital_clock+0xc1c>)
 8001164:	6819      	ldr	r1, [r3, #0]
 8001166:	4b4a      	ldr	r3, [pc, #296]	; (8001290 <digital_clock+0xc14>)
 8001168:	681a      	ldr	r2, [r3, #0]
 800116a:	4b4a      	ldr	r3, [pc, #296]	; (8001294 <digital_clock+0xc18>)
 800116c:	681c      	ldr	r4, [r3, #0]
 800116e:	687b      	ldr	r3, [r7, #4]
 8001170:	9300      	str	r3, [sp, #0]
 8001172:	0023      	movs	r3, r4
 8001174:	f000 ffc0 	bl	80020f8 <d4_counter>

    	                      b=3;
 8001178:	4b47      	ldr	r3, [pc, #284]	; (8001298 <digital_clock+0xc1c>)
 800117a:	2203      	movs	r2, #3
 800117c:	601a      	str	r2, [r3, #0]
    	                      c=2;
 800117e:	4b44      	ldr	r3, [pc, #272]	; (8001290 <digital_clock+0xc14>)
 8001180:	2202      	movs	r2, #2
 8001182:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8001184:	4b43      	ldr	r3, [pc, #268]	; (8001294 <digital_clock+0xc18>)
 8001186:	2209      	movs	r2, #9
 8001188:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 800118a:	4b44      	ldr	r3, [pc, #272]	; (800129c <digital_clock+0xc20>)
 800118c:	6818      	ldr	r0, [r3, #0]
 800118e:	4b42      	ldr	r3, [pc, #264]	; (8001298 <digital_clock+0xc1c>)
 8001190:	6819      	ldr	r1, [r3, #0]
 8001192:	4b3f      	ldr	r3, [pc, #252]	; (8001290 <digital_clock+0xc14>)
 8001194:	681a      	ldr	r2, [r3, #0]
 8001196:	4b3f      	ldr	r3, [pc, #252]	; (8001294 <digital_clock+0xc18>)
 8001198:	681c      	ldr	r4, [r3, #0]
 800119a:	687b      	ldr	r3, [r7, #4]
 800119c:	9300      	str	r3, [sp, #0]
 800119e:	0023      	movs	r3, r4
 80011a0:	f000 ffaa 	bl	80020f8 <d4_counter>

    	                      b=3;
 80011a4:	4b3c      	ldr	r3, [pc, #240]	; (8001298 <digital_clock+0xc1c>)
 80011a6:	2203      	movs	r2, #3
 80011a8:	601a      	str	r2, [r3, #0]
    	                      c=1;
 80011aa:	4b39      	ldr	r3, [pc, #228]	; (8001290 <digital_clock+0xc14>)
 80011ac:	2201      	movs	r2, #1
 80011ae:	601a      	str	r2, [r3, #0]
    	                      d=9;
 80011b0:	4b38      	ldr	r3, [pc, #224]	; (8001294 <digital_clock+0xc18>)
 80011b2:	2209      	movs	r2, #9
 80011b4:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 80011b6:	4b39      	ldr	r3, [pc, #228]	; (800129c <digital_clock+0xc20>)
 80011b8:	6818      	ldr	r0, [r3, #0]
 80011ba:	4b37      	ldr	r3, [pc, #220]	; (8001298 <digital_clock+0xc1c>)
 80011bc:	6819      	ldr	r1, [r3, #0]
 80011be:	4b34      	ldr	r3, [pc, #208]	; (8001290 <digital_clock+0xc14>)
 80011c0:	681a      	ldr	r2, [r3, #0]
 80011c2:	4b34      	ldr	r3, [pc, #208]	; (8001294 <digital_clock+0xc18>)
 80011c4:	681c      	ldr	r4, [r3, #0]
 80011c6:	687b      	ldr	r3, [r7, #4]
 80011c8:	9300      	str	r3, [sp, #0]
 80011ca:	0023      	movs	r3, r4
 80011cc:	f000 ff94 	bl	80020f8 <d4_counter>

    	                      b=3;
 80011d0:	4b31      	ldr	r3, [pc, #196]	; (8001298 <digital_clock+0xc1c>)
 80011d2:	2203      	movs	r2, #3
 80011d4:	601a      	str	r2, [r3, #0]
    	                      c=0;
 80011d6:	4b2e      	ldr	r3, [pc, #184]	; (8001290 <digital_clock+0xc14>)
 80011d8:	2200      	movs	r2, #0
 80011da:	601a      	str	r2, [r3, #0]
    	                      d=9;
 80011dc:	4b2d      	ldr	r3, [pc, #180]	; (8001294 <digital_clock+0xc18>)
 80011de:	2209      	movs	r2, #9
 80011e0:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 80011e2:	4b2e      	ldr	r3, [pc, #184]	; (800129c <digital_clock+0xc20>)
 80011e4:	6818      	ldr	r0, [r3, #0]
 80011e6:	4b2c      	ldr	r3, [pc, #176]	; (8001298 <digital_clock+0xc1c>)
 80011e8:	6819      	ldr	r1, [r3, #0]
 80011ea:	4b29      	ldr	r3, [pc, #164]	; (8001290 <digital_clock+0xc14>)
 80011ec:	681a      	ldr	r2, [r3, #0]
 80011ee:	4b29      	ldr	r3, [pc, #164]	; (8001294 <digital_clock+0xc18>)
 80011f0:	681c      	ldr	r4, [r3, #0]
 80011f2:	687b      	ldr	r3, [r7, #4]
 80011f4:	9300      	str	r3, [sp, #0]
 80011f6:	0023      	movs	r3, r4
 80011f8:	f000 ff7e 	bl	80020f8 <d4_counter>


    	                      a=1;
 80011fc:	4b27      	ldr	r3, [pc, #156]	; (800129c <digital_clock+0xc20>)
 80011fe:	2201      	movs	r2, #1
 8001200:	601a      	str	r2, [r3, #0]
    	                      b=2;
 8001202:	4b25      	ldr	r3, [pc, #148]	; (8001298 <digital_clock+0xc1c>)
 8001204:	2202      	movs	r2, #2
 8001206:	601a      	str	r2, [r3, #0]
    	                      c=5;
 8001208:	4b21      	ldr	r3, [pc, #132]	; (8001290 <digital_clock+0xc14>)
 800120a:	2205      	movs	r2, #5
 800120c:	601a      	str	r2, [r3, #0]
    	                      d=9;
 800120e:	4b21      	ldr	r3, [pc, #132]	; (8001294 <digital_clock+0xc18>)
 8001210:	2209      	movs	r2, #9
 8001212:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8001214:	4b21      	ldr	r3, [pc, #132]	; (800129c <digital_clock+0xc20>)
 8001216:	6818      	ldr	r0, [r3, #0]
 8001218:	4b1f      	ldr	r3, [pc, #124]	; (8001298 <digital_clock+0xc1c>)
 800121a:	6819      	ldr	r1, [r3, #0]
 800121c:	4b1c      	ldr	r3, [pc, #112]	; (8001290 <digital_clock+0xc14>)
 800121e:	681a      	ldr	r2, [r3, #0]
 8001220:	4b1c      	ldr	r3, [pc, #112]	; (8001294 <digital_clock+0xc18>)
 8001222:	681c      	ldr	r4, [r3, #0]
 8001224:	687b      	ldr	r3, [r7, #4]
 8001226:	9300      	str	r3, [sp, #0]
 8001228:	0023      	movs	r3, r4
 800122a:	f000 ff65 	bl	80020f8 <d4_counter>

    	                      b=2;
 800122e:	4b1a      	ldr	r3, [pc, #104]	; (8001298 <digital_clock+0xc1c>)
 8001230:	2202      	movs	r2, #2
 8001232:	601a      	str	r2, [r3, #0]
    	                      c=4;
 8001234:	4b16      	ldr	r3, [pc, #88]	; (8001290 <digital_clock+0xc14>)
 8001236:	2204      	movs	r2, #4
 8001238:	601a      	str	r2, [r3, #0]
    	                      d=9;
 800123a:	4b16      	ldr	r3, [pc, #88]	; (8001294 <digital_clock+0xc18>)
 800123c:	2209      	movs	r2, #9
 800123e:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8001240:	4b16      	ldr	r3, [pc, #88]	; (800129c <digital_clock+0xc20>)
 8001242:	6818      	ldr	r0, [r3, #0]
 8001244:	4b14      	ldr	r3, [pc, #80]	; (8001298 <digital_clock+0xc1c>)
 8001246:	6819      	ldr	r1, [r3, #0]
 8001248:	4b11      	ldr	r3, [pc, #68]	; (8001290 <digital_clock+0xc14>)
 800124a:	681a      	ldr	r2, [r3, #0]
 800124c:	4b11      	ldr	r3, [pc, #68]	; (8001294 <digital_clock+0xc18>)
 800124e:	681c      	ldr	r4, [r3, #0]
 8001250:	687b      	ldr	r3, [r7, #4]
 8001252:	9300      	str	r3, [sp, #0]
 8001254:	0023      	movs	r3, r4
 8001256:	f000 ff4f 	bl	80020f8 <d4_counter>

    	                      b=2;
 800125a:	4b0f      	ldr	r3, [pc, #60]	; (8001298 <digital_clock+0xc1c>)
 800125c:	2202      	movs	r2, #2
 800125e:	601a      	str	r2, [r3, #0]
    	                      c=3;
 8001260:	4b0b      	ldr	r3, [pc, #44]	; (8001290 <digital_clock+0xc14>)
 8001262:	2203      	movs	r2, #3
 8001264:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8001266:	4b0b      	ldr	r3, [pc, #44]	; (8001294 <digital_clock+0xc18>)
 8001268:	2209      	movs	r2, #9
 800126a:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 800126c:	4b0b      	ldr	r3, [pc, #44]	; (800129c <digital_clock+0xc20>)
 800126e:	6818      	ldr	r0, [r3, #0]
 8001270:	4b09      	ldr	r3, [pc, #36]	; (8001298 <digital_clock+0xc1c>)
 8001272:	6819      	ldr	r1, [r3, #0]
 8001274:	4b06      	ldr	r3, [pc, #24]	; (8001290 <digital_clock+0xc14>)
 8001276:	681a      	ldr	r2, [r3, #0]
 8001278:	4b06      	ldr	r3, [pc, #24]	; (8001294 <digital_clock+0xc18>)
 800127a:	681c      	ldr	r4, [r3, #0]
 800127c:	687b      	ldr	r3, [r7, #4]
 800127e:	9300      	str	r3, [sp, #0]
 8001280:	0023      	movs	r3, r4
 8001282:	f000 ff39 	bl	80020f8 <d4_counter>

    	                      b=2;
 8001286:	4b04      	ldr	r3, [pc, #16]	; (8001298 <digital_clock+0xc1c>)
 8001288:	2202      	movs	r2, #2
 800128a:	601a      	str	r2, [r3, #0]
 800128c:	e008      	b.n	80012a0 <digital_clock+0xc24>
 800128e:	46c0      	nop			; (mov r8, r8)
 8001290:	20000008 	.word	0x20000008
 8001294:	2000000c 	.word	0x2000000c
 8001298:	20000004 	.word	0x20000004
 800129c:	20000000 	.word	0x20000000
    	                      c=2;
 80012a0:	4bfd      	ldr	r3, [pc, #1012]	; (8001698 <digital_clock+0x101c>)
 80012a2:	2202      	movs	r2, #2
 80012a4:	601a      	str	r2, [r3, #0]
    	                      d=9;
 80012a6:	4bfd      	ldr	r3, [pc, #1012]	; (800169c <digital_clock+0x1020>)
 80012a8:	2209      	movs	r2, #9
 80012aa:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 80012ac:	4bfc      	ldr	r3, [pc, #1008]	; (80016a0 <digital_clock+0x1024>)
 80012ae:	6818      	ldr	r0, [r3, #0]
 80012b0:	4bfc      	ldr	r3, [pc, #1008]	; (80016a4 <digital_clock+0x1028>)
 80012b2:	6819      	ldr	r1, [r3, #0]
 80012b4:	4bf8      	ldr	r3, [pc, #992]	; (8001698 <digital_clock+0x101c>)
 80012b6:	681a      	ldr	r2, [r3, #0]
 80012b8:	4bf8      	ldr	r3, [pc, #992]	; (800169c <digital_clock+0x1020>)
 80012ba:	681c      	ldr	r4, [r3, #0]
 80012bc:	687b      	ldr	r3, [r7, #4]
 80012be:	9300      	str	r3, [sp, #0]
 80012c0:	0023      	movs	r3, r4
 80012c2:	f000 ff19 	bl	80020f8 <d4_counter>

    	                      b=2;
 80012c6:	4bf7      	ldr	r3, [pc, #988]	; (80016a4 <digital_clock+0x1028>)
 80012c8:	2202      	movs	r2, #2
 80012ca:	601a      	str	r2, [r3, #0]
    	                      c=1;
 80012cc:	4bf2      	ldr	r3, [pc, #968]	; (8001698 <digital_clock+0x101c>)
 80012ce:	2201      	movs	r2, #1
 80012d0:	601a      	str	r2, [r3, #0]
    	                      d=9;
 80012d2:	4bf2      	ldr	r3, [pc, #968]	; (800169c <digital_clock+0x1020>)
 80012d4:	2209      	movs	r2, #9
 80012d6:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 80012d8:	4bf1      	ldr	r3, [pc, #964]	; (80016a0 <digital_clock+0x1024>)
 80012da:	6818      	ldr	r0, [r3, #0]
 80012dc:	4bf1      	ldr	r3, [pc, #964]	; (80016a4 <digital_clock+0x1028>)
 80012de:	6819      	ldr	r1, [r3, #0]
 80012e0:	4bed      	ldr	r3, [pc, #948]	; (8001698 <digital_clock+0x101c>)
 80012e2:	681a      	ldr	r2, [r3, #0]
 80012e4:	4bed      	ldr	r3, [pc, #948]	; (800169c <digital_clock+0x1020>)
 80012e6:	681c      	ldr	r4, [r3, #0]
 80012e8:	687b      	ldr	r3, [r7, #4]
 80012ea:	9300      	str	r3, [sp, #0]
 80012ec:	0023      	movs	r3, r4
 80012ee:	f000 ff03 	bl	80020f8 <d4_counter>

    	                      b=2;
 80012f2:	4bec      	ldr	r3, [pc, #944]	; (80016a4 <digital_clock+0x1028>)
 80012f4:	2202      	movs	r2, #2
 80012f6:	601a      	str	r2, [r3, #0]
    	                      c=0;
 80012f8:	4be7      	ldr	r3, [pc, #924]	; (8001698 <digital_clock+0x101c>)
 80012fa:	2200      	movs	r2, #0
 80012fc:	601a      	str	r2, [r3, #0]
    	                      d=9;
 80012fe:	4be7      	ldr	r3, [pc, #924]	; (800169c <digital_clock+0x1020>)
 8001300:	2209      	movs	r2, #9
 8001302:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8001304:	4be6      	ldr	r3, [pc, #920]	; (80016a0 <digital_clock+0x1024>)
 8001306:	6818      	ldr	r0, [r3, #0]
 8001308:	4be6      	ldr	r3, [pc, #920]	; (80016a4 <digital_clock+0x1028>)
 800130a:	6819      	ldr	r1, [r3, #0]
 800130c:	4be2      	ldr	r3, [pc, #904]	; (8001698 <digital_clock+0x101c>)
 800130e:	681a      	ldr	r2, [r3, #0]
 8001310:	4be2      	ldr	r3, [pc, #904]	; (800169c <digital_clock+0x1020>)
 8001312:	681c      	ldr	r4, [r3, #0]
 8001314:	687b      	ldr	r3, [r7, #4]
 8001316:	9300      	str	r3, [sp, #0]
 8001318:	0023      	movs	r3, r4
 800131a:	f000 feed 	bl	80020f8 <d4_counter>

    	                      a=1;
 800131e:	4be0      	ldr	r3, [pc, #896]	; (80016a0 <digital_clock+0x1024>)
 8001320:	2201      	movs	r2, #1
 8001322:	601a      	str	r2, [r3, #0]
    	                      b=1;
 8001324:	4bdf      	ldr	r3, [pc, #892]	; (80016a4 <digital_clock+0x1028>)
 8001326:	2201      	movs	r2, #1
 8001328:	601a      	str	r2, [r3, #0]
    	                      c=5;
 800132a:	4bdb      	ldr	r3, [pc, #876]	; (8001698 <digital_clock+0x101c>)
 800132c:	2205      	movs	r2, #5
 800132e:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8001330:	4bda      	ldr	r3, [pc, #872]	; (800169c <digital_clock+0x1020>)
 8001332:	2209      	movs	r2, #9
 8001334:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8001336:	4bda      	ldr	r3, [pc, #872]	; (80016a0 <digital_clock+0x1024>)
 8001338:	6818      	ldr	r0, [r3, #0]
 800133a:	4bda      	ldr	r3, [pc, #872]	; (80016a4 <digital_clock+0x1028>)
 800133c:	6819      	ldr	r1, [r3, #0]
 800133e:	4bd6      	ldr	r3, [pc, #856]	; (8001698 <digital_clock+0x101c>)
 8001340:	681a      	ldr	r2, [r3, #0]
 8001342:	4bd6      	ldr	r3, [pc, #856]	; (800169c <digital_clock+0x1020>)
 8001344:	681c      	ldr	r4, [r3, #0]
 8001346:	687b      	ldr	r3, [r7, #4]
 8001348:	9300      	str	r3, [sp, #0]
 800134a:	0023      	movs	r3, r4
 800134c:	f000 fed4 	bl	80020f8 <d4_counter>

    	                      b=1;
 8001350:	4bd4      	ldr	r3, [pc, #848]	; (80016a4 <digital_clock+0x1028>)
 8001352:	2201      	movs	r2, #1
 8001354:	601a      	str	r2, [r3, #0]
    	                      c=4;
 8001356:	4bd0      	ldr	r3, [pc, #832]	; (8001698 <digital_clock+0x101c>)
 8001358:	2204      	movs	r2, #4
 800135a:	601a      	str	r2, [r3, #0]
    	                      d=9;
 800135c:	4bcf      	ldr	r3, [pc, #828]	; (800169c <digital_clock+0x1020>)
 800135e:	2209      	movs	r2, #9
 8001360:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8001362:	4bcf      	ldr	r3, [pc, #828]	; (80016a0 <digital_clock+0x1024>)
 8001364:	6818      	ldr	r0, [r3, #0]
 8001366:	4bcf      	ldr	r3, [pc, #828]	; (80016a4 <digital_clock+0x1028>)
 8001368:	6819      	ldr	r1, [r3, #0]
 800136a:	4bcb      	ldr	r3, [pc, #812]	; (8001698 <digital_clock+0x101c>)
 800136c:	681a      	ldr	r2, [r3, #0]
 800136e:	4bcb      	ldr	r3, [pc, #812]	; (800169c <digital_clock+0x1020>)
 8001370:	681c      	ldr	r4, [r3, #0]
 8001372:	687b      	ldr	r3, [r7, #4]
 8001374:	9300      	str	r3, [sp, #0]
 8001376:	0023      	movs	r3, r4
 8001378:	f000 febe 	bl	80020f8 <d4_counter>

    	                      b=1;
 800137c:	4bc9      	ldr	r3, [pc, #804]	; (80016a4 <digital_clock+0x1028>)
 800137e:	2201      	movs	r2, #1
 8001380:	601a      	str	r2, [r3, #0]
    	                      c=3;
 8001382:	4bc5      	ldr	r3, [pc, #788]	; (8001698 <digital_clock+0x101c>)
 8001384:	2203      	movs	r2, #3
 8001386:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8001388:	4bc4      	ldr	r3, [pc, #784]	; (800169c <digital_clock+0x1020>)
 800138a:	2209      	movs	r2, #9
 800138c:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 800138e:	4bc4      	ldr	r3, [pc, #784]	; (80016a0 <digital_clock+0x1024>)
 8001390:	6818      	ldr	r0, [r3, #0]
 8001392:	4bc4      	ldr	r3, [pc, #784]	; (80016a4 <digital_clock+0x1028>)
 8001394:	6819      	ldr	r1, [r3, #0]
 8001396:	4bc0      	ldr	r3, [pc, #768]	; (8001698 <digital_clock+0x101c>)
 8001398:	681a      	ldr	r2, [r3, #0]
 800139a:	4bc0      	ldr	r3, [pc, #768]	; (800169c <digital_clock+0x1020>)
 800139c:	681c      	ldr	r4, [r3, #0]
 800139e:	687b      	ldr	r3, [r7, #4]
 80013a0:	9300      	str	r3, [sp, #0]
 80013a2:	0023      	movs	r3, r4
 80013a4:	f000 fea8 	bl	80020f8 <d4_counter>

    	                      b=1;
 80013a8:	4bbe      	ldr	r3, [pc, #760]	; (80016a4 <digital_clock+0x1028>)
 80013aa:	2201      	movs	r2, #1
 80013ac:	601a      	str	r2, [r3, #0]
    	                      c=2;
 80013ae:	4bba      	ldr	r3, [pc, #744]	; (8001698 <digital_clock+0x101c>)
 80013b0:	2202      	movs	r2, #2
 80013b2:	601a      	str	r2, [r3, #0]
    	                      d=9;
 80013b4:	4bb9      	ldr	r3, [pc, #740]	; (800169c <digital_clock+0x1020>)
 80013b6:	2209      	movs	r2, #9
 80013b8:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 80013ba:	4bb9      	ldr	r3, [pc, #740]	; (80016a0 <digital_clock+0x1024>)
 80013bc:	6818      	ldr	r0, [r3, #0]
 80013be:	4bb9      	ldr	r3, [pc, #740]	; (80016a4 <digital_clock+0x1028>)
 80013c0:	6819      	ldr	r1, [r3, #0]
 80013c2:	4bb5      	ldr	r3, [pc, #724]	; (8001698 <digital_clock+0x101c>)
 80013c4:	681a      	ldr	r2, [r3, #0]
 80013c6:	4bb5      	ldr	r3, [pc, #724]	; (800169c <digital_clock+0x1020>)
 80013c8:	681c      	ldr	r4, [r3, #0]
 80013ca:	687b      	ldr	r3, [r7, #4]
 80013cc:	9300      	str	r3, [sp, #0]
 80013ce:	0023      	movs	r3, r4
 80013d0:	f000 fe92 	bl	80020f8 <d4_counter>

    	                      b=1;
 80013d4:	4bb3      	ldr	r3, [pc, #716]	; (80016a4 <digital_clock+0x1028>)
 80013d6:	2201      	movs	r2, #1
 80013d8:	601a      	str	r2, [r3, #0]
    	                      c=1;
 80013da:	4baf      	ldr	r3, [pc, #700]	; (8001698 <digital_clock+0x101c>)
 80013dc:	2201      	movs	r2, #1
 80013de:	601a      	str	r2, [r3, #0]
    	                      d=9;
 80013e0:	4bae      	ldr	r3, [pc, #696]	; (800169c <digital_clock+0x1020>)
 80013e2:	2209      	movs	r2, #9
 80013e4:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 80013e6:	4bae      	ldr	r3, [pc, #696]	; (80016a0 <digital_clock+0x1024>)
 80013e8:	6818      	ldr	r0, [r3, #0]
 80013ea:	4bae      	ldr	r3, [pc, #696]	; (80016a4 <digital_clock+0x1028>)
 80013ec:	6819      	ldr	r1, [r3, #0]
 80013ee:	4baa      	ldr	r3, [pc, #680]	; (8001698 <digital_clock+0x101c>)
 80013f0:	681a      	ldr	r2, [r3, #0]
 80013f2:	4baa      	ldr	r3, [pc, #680]	; (800169c <digital_clock+0x1020>)
 80013f4:	681c      	ldr	r4, [r3, #0]
 80013f6:	687b      	ldr	r3, [r7, #4]
 80013f8:	9300      	str	r3, [sp, #0]
 80013fa:	0023      	movs	r3, r4
 80013fc:	f000 fe7c 	bl	80020f8 <d4_counter>

    	                      b=1;
 8001400:	4ba8      	ldr	r3, [pc, #672]	; (80016a4 <digital_clock+0x1028>)
 8001402:	2201      	movs	r2, #1
 8001404:	601a      	str	r2, [r3, #0]
    	                      c=0;
 8001406:	4ba4      	ldr	r3, [pc, #656]	; (8001698 <digital_clock+0x101c>)
 8001408:	2200      	movs	r2, #0
 800140a:	601a      	str	r2, [r3, #0]
    	                      d=9;
 800140c:	4ba3      	ldr	r3, [pc, #652]	; (800169c <digital_clock+0x1020>)
 800140e:	2209      	movs	r2, #9
 8001410:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8001412:	4ba3      	ldr	r3, [pc, #652]	; (80016a0 <digital_clock+0x1024>)
 8001414:	6818      	ldr	r0, [r3, #0]
 8001416:	4ba3      	ldr	r3, [pc, #652]	; (80016a4 <digital_clock+0x1028>)
 8001418:	6819      	ldr	r1, [r3, #0]
 800141a:	4b9f      	ldr	r3, [pc, #636]	; (8001698 <digital_clock+0x101c>)
 800141c:	681a      	ldr	r2, [r3, #0]
 800141e:	4b9f      	ldr	r3, [pc, #636]	; (800169c <digital_clock+0x1020>)
 8001420:	681c      	ldr	r4, [r3, #0]
 8001422:	687b      	ldr	r3, [r7, #4]
 8001424:	9300      	str	r3, [sp, #0]
 8001426:	0023      	movs	r3, r4
 8001428:	f000 fe66 	bl	80020f8 <d4_counter>

    	                      a=1;
 800142c:	4b9c      	ldr	r3, [pc, #624]	; (80016a0 <digital_clock+0x1024>)
 800142e:	2201      	movs	r2, #1
 8001430:	601a      	str	r2, [r3, #0]
    	                      b=0;
 8001432:	4b9c      	ldr	r3, [pc, #624]	; (80016a4 <digital_clock+0x1028>)
 8001434:	2200      	movs	r2, #0
 8001436:	601a      	str	r2, [r3, #0]
    	                      c=5;
 8001438:	4b97      	ldr	r3, [pc, #604]	; (8001698 <digital_clock+0x101c>)
 800143a:	2205      	movs	r2, #5
 800143c:	601a      	str	r2, [r3, #0]
    	                      d=9;
 800143e:	4b97      	ldr	r3, [pc, #604]	; (800169c <digital_clock+0x1020>)
 8001440:	2209      	movs	r2, #9
 8001442:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8001444:	4b96      	ldr	r3, [pc, #600]	; (80016a0 <digital_clock+0x1024>)
 8001446:	6818      	ldr	r0, [r3, #0]
 8001448:	4b96      	ldr	r3, [pc, #600]	; (80016a4 <digital_clock+0x1028>)
 800144a:	6819      	ldr	r1, [r3, #0]
 800144c:	4b92      	ldr	r3, [pc, #584]	; (8001698 <digital_clock+0x101c>)
 800144e:	681a      	ldr	r2, [r3, #0]
 8001450:	4b92      	ldr	r3, [pc, #584]	; (800169c <digital_clock+0x1020>)
 8001452:	681c      	ldr	r4, [r3, #0]
 8001454:	687b      	ldr	r3, [r7, #4]
 8001456:	9300      	str	r3, [sp, #0]
 8001458:	0023      	movs	r3, r4
 800145a:	f000 fe4d 	bl	80020f8 <d4_counter>

    	                      b=0;
 800145e:	4b91      	ldr	r3, [pc, #580]	; (80016a4 <digital_clock+0x1028>)
 8001460:	2200      	movs	r2, #0
 8001462:	601a      	str	r2, [r3, #0]
    	                      c=4;
 8001464:	4b8c      	ldr	r3, [pc, #560]	; (8001698 <digital_clock+0x101c>)
 8001466:	2204      	movs	r2, #4
 8001468:	601a      	str	r2, [r3, #0]
    	                      d=9;
 800146a:	4b8c      	ldr	r3, [pc, #560]	; (800169c <digital_clock+0x1020>)
 800146c:	2209      	movs	r2, #9
 800146e:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8001470:	4b8b      	ldr	r3, [pc, #556]	; (80016a0 <digital_clock+0x1024>)
 8001472:	6818      	ldr	r0, [r3, #0]
 8001474:	4b8b      	ldr	r3, [pc, #556]	; (80016a4 <digital_clock+0x1028>)
 8001476:	6819      	ldr	r1, [r3, #0]
 8001478:	4b87      	ldr	r3, [pc, #540]	; (8001698 <digital_clock+0x101c>)
 800147a:	681a      	ldr	r2, [r3, #0]
 800147c:	4b87      	ldr	r3, [pc, #540]	; (800169c <digital_clock+0x1020>)
 800147e:	681c      	ldr	r4, [r3, #0]
 8001480:	687b      	ldr	r3, [r7, #4]
 8001482:	9300      	str	r3, [sp, #0]
 8001484:	0023      	movs	r3, r4
 8001486:	f000 fe37 	bl	80020f8 <d4_counter>

    	                      b=0;
 800148a:	4b86      	ldr	r3, [pc, #536]	; (80016a4 <digital_clock+0x1028>)
 800148c:	2200      	movs	r2, #0
 800148e:	601a      	str	r2, [r3, #0]
    	                      c=3;
 8001490:	4b81      	ldr	r3, [pc, #516]	; (8001698 <digital_clock+0x101c>)
 8001492:	2203      	movs	r2, #3
 8001494:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8001496:	4b81      	ldr	r3, [pc, #516]	; (800169c <digital_clock+0x1020>)
 8001498:	2209      	movs	r2, #9
 800149a:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 800149c:	4b80      	ldr	r3, [pc, #512]	; (80016a0 <digital_clock+0x1024>)
 800149e:	6818      	ldr	r0, [r3, #0]
 80014a0:	4b80      	ldr	r3, [pc, #512]	; (80016a4 <digital_clock+0x1028>)
 80014a2:	6819      	ldr	r1, [r3, #0]
 80014a4:	4b7c      	ldr	r3, [pc, #496]	; (8001698 <digital_clock+0x101c>)
 80014a6:	681a      	ldr	r2, [r3, #0]
 80014a8:	4b7c      	ldr	r3, [pc, #496]	; (800169c <digital_clock+0x1020>)
 80014aa:	681c      	ldr	r4, [r3, #0]
 80014ac:	687b      	ldr	r3, [r7, #4]
 80014ae:	9300      	str	r3, [sp, #0]
 80014b0:	0023      	movs	r3, r4
 80014b2:	f000 fe21 	bl	80020f8 <d4_counter>

    	                      b=0;
 80014b6:	4b7b      	ldr	r3, [pc, #492]	; (80016a4 <digital_clock+0x1028>)
 80014b8:	2200      	movs	r2, #0
 80014ba:	601a      	str	r2, [r3, #0]
    	                      c=2;
 80014bc:	4b76      	ldr	r3, [pc, #472]	; (8001698 <digital_clock+0x101c>)
 80014be:	2202      	movs	r2, #2
 80014c0:	601a      	str	r2, [r3, #0]
    	                      d=9;
 80014c2:	4b76      	ldr	r3, [pc, #472]	; (800169c <digital_clock+0x1020>)
 80014c4:	2209      	movs	r2, #9
 80014c6:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 80014c8:	4b75      	ldr	r3, [pc, #468]	; (80016a0 <digital_clock+0x1024>)
 80014ca:	6818      	ldr	r0, [r3, #0]
 80014cc:	4b75      	ldr	r3, [pc, #468]	; (80016a4 <digital_clock+0x1028>)
 80014ce:	6819      	ldr	r1, [r3, #0]
 80014d0:	4b71      	ldr	r3, [pc, #452]	; (8001698 <digital_clock+0x101c>)
 80014d2:	681a      	ldr	r2, [r3, #0]
 80014d4:	4b71      	ldr	r3, [pc, #452]	; (800169c <digital_clock+0x1020>)
 80014d6:	681c      	ldr	r4, [r3, #0]
 80014d8:	687b      	ldr	r3, [r7, #4]
 80014da:	9300      	str	r3, [sp, #0]
 80014dc:	0023      	movs	r3, r4
 80014de:	f000 fe0b 	bl	80020f8 <d4_counter>

    	                      b=0;
 80014e2:	4b70      	ldr	r3, [pc, #448]	; (80016a4 <digital_clock+0x1028>)
 80014e4:	2200      	movs	r2, #0
 80014e6:	601a      	str	r2, [r3, #0]
    	                      c=1;
 80014e8:	4b6b      	ldr	r3, [pc, #428]	; (8001698 <digital_clock+0x101c>)
 80014ea:	2201      	movs	r2, #1
 80014ec:	601a      	str	r2, [r3, #0]
    	                      d=9;
 80014ee:	4b6b      	ldr	r3, [pc, #428]	; (800169c <digital_clock+0x1020>)
 80014f0:	2209      	movs	r2, #9
 80014f2:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 80014f4:	4b6a      	ldr	r3, [pc, #424]	; (80016a0 <digital_clock+0x1024>)
 80014f6:	6818      	ldr	r0, [r3, #0]
 80014f8:	4b6a      	ldr	r3, [pc, #424]	; (80016a4 <digital_clock+0x1028>)
 80014fa:	6819      	ldr	r1, [r3, #0]
 80014fc:	4b66      	ldr	r3, [pc, #408]	; (8001698 <digital_clock+0x101c>)
 80014fe:	681a      	ldr	r2, [r3, #0]
 8001500:	4b66      	ldr	r3, [pc, #408]	; (800169c <digital_clock+0x1020>)
 8001502:	681c      	ldr	r4, [r3, #0]
 8001504:	687b      	ldr	r3, [r7, #4]
 8001506:	9300      	str	r3, [sp, #0]
 8001508:	0023      	movs	r3, r4
 800150a:	f000 fdf5 	bl	80020f8 <d4_counter>

    	                      b=0;
 800150e:	4b65      	ldr	r3, [pc, #404]	; (80016a4 <digital_clock+0x1028>)
 8001510:	2200      	movs	r2, #0
 8001512:	601a      	str	r2, [r3, #0]
    	                      c=0;
 8001514:	4b60      	ldr	r3, [pc, #384]	; (8001698 <digital_clock+0x101c>)
 8001516:	2200      	movs	r2, #0
 8001518:	601a      	str	r2, [r3, #0]
    	                      d=9;
 800151a:	4b60      	ldr	r3, [pc, #384]	; (800169c <digital_clock+0x1020>)
 800151c:	2209      	movs	r2, #9
 800151e:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8001520:	4b5f      	ldr	r3, [pc, #380]	; (80016a0 <digital_clock+0x1024>)
 8001522:	6818      	ldr	r0, [r3, #0]
 8001524:	4b5f      	ldr	r3, [pc, #380]	; (80016a4 <digital_clock+0x1028>)
 8001526:	6819      	ldr	r1, [r3, #0]
 8001528:	4b5b      	ldr	r3, [pc, #364]	; (8001698 <digital_clock+0x101c>)
 800152a:	681a      	ldr	r2, [r3, #0]
 800152c:	4b5b      	ldr	r3, [pc, #364]	; (800169c <digital_clock+0x1020>)
 800152e:	681c      	ldr	r4, [r3, #0]
 8001530:	687b      	ldr	r3, [r7, #4]
 8001532:	9300      	str	r3, [sp, #0]
 8001534:	0023      	movs	r3, r4
 8001536:	f000 fddf 	bl	80020f8 <d4_counter>





    	                      a=0;
 800153a:	4b59      	ldr	r3, [pc, #356]	; (80016a0 <digital_clock+0x1024>)
 800153c:	2200      	movs	r2, #0
 800153e:	601a      	str	r2, [r3, #0]
    	                      b=9;
 8001540:	4b58      	ldr	r3, [pc, #352]	; (80016a4 <digital_clock+0x1028>)
 8001542:	2209      	movs	r2, #9
 8001544:	601a      	str	r2, [r3, #0]
    	                      c=5;
 8001546:	4b54      	ldr	r3, [pc, #336]	; (8001698 <digital_clock+0x101c>)
 8001548:	2205      	movs	r2, #5
 800154a:	601a      	str	r2, [r3, #0]
    	                      d=9;
 800154c:	4b53      	ldr	r3, [pc, #332]	; (800169c <digital_clock+0x1020>)
 800154e:	2209      	movs	r2, #9
 8001550:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8001552:	4b53      	ldr	r3, [pc, #332]	; (80016a0 <digital_clock+0x1024>)
 8001554:	6818      	ldr	r0, [r3, #0]
 8001556:	4b53      	ldr	r3, [pc, #332]	; (80016a4 <digital_clock+0x1028>)
 8001558:	6819      	ldr	r1, [r3, #0]
 800155a:	4b4f      	ldr	r3, [pc, #316]	; (8001698 <digital_clock+0x101c>)
 800155c:	681a      	ldr	r2, [r3, #0]
 800155e:	4b4f      	ldr	r3, [pc, #316]	; (800169c <digital_clock+0x1020>)
 8001560:	681c      	ldr	r4, [r3, #0]
 8001562:	687b      	ldr	r3, [r7, #4]
 8001564:	9300      	str	r3, [sp, #0]
 8001566:	0023      	movs	r3, r4
 8001568:	f000 fdc6 	bl	80020f8 <d4_counter>

    	                      b=9;
 800156c:	4b4d      	ldr	r3, [pc, #308]	; (80016a4 <digital_clock+0x1028>)
 800156e:	2209      	movs	r2, #9
 8001570:	601a      	str	r2, [r3, #0]
    	                      c=4;
 8001572:	4b49      	ldr	r3, [pc, #292]	; (8001698 <digital_clock+0x101c>)
 8001574:	2204      	movs	r2, #4
 8001576:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8001578:	4b48      	ldr	r3, [pc, #288]	; (800169c <digital_clock+0x1020>)
 800157a:	2209      	movs	r2, #9
 800157c:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 800157e:	4b48      	ldr	r3, [pc, #288]	; (80016a0 <digital_clock+0x1024>)
 8001580:	6818      	ldr	r0, [r3, #0]
 8001582:	4b48      	ldr	r3, [pc, #288]	; (80016a4 <digital_clock+0x1028>)
 8001584:	6819      	ldr	r1, [r3, #0]
 8001586:	4b44      	ldr	r3, [pc, #272]	; (8001698 <digital_clock+0x101c>)
 8001588:	681a      	ldr	r2, [r3, #0]
 800158a:	4b44      	ldr	r3, [pc, #272]	; (800169c <digital_clock+0x1020>)
 800158c:	681c      	ldr	r4, [r3, #0]
 800158e:	687b      	ldr	r3, [r7, #4]
 8001590:	9300      	str	r3, [sp, #0]
 8001592:	0023      	movs	r3, r4
 8001594:	f000 fdb0 	bl	80020f8 <d4_counter>

    	                      b=9;
 8001598:	4b42      	ldr	r3, [pc, #264]	; (80016a4 <digital_clock+0x1028>)
 800159a:	2209      	movs	r2, #9
 800159c:	601a      	str	r2, [r3, #0]
    	                      c=3;
 800159e:	4b3e      	ldr	r3, [pc, #248]	; (8001698 <digital_clock+0x101c>)
 80015a0:	2203      	movs	r2, #3
 80015a2:	601a      	str	r2, [r3, #0]
    	                      d=9;
 80015a4:	4b3d      	ldr	r3, [pc, #244]	; (800169c <digital_clock+0x1020>)
 80015a6:	2209      	movs	r2, #9
 80015a8:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 80015aa:	4b3d      	ldr	r3, [pc, #244]	; (80016a0 <digital_clock+0x1024>)
 80015ac:	6818      	ldr	r0, [r3, #0]
 80015ae:	4b3d      	ldr	r3, [pc, #244]	; (80016a4 <digital_clock+0x1028>)
 80015b0:	6819      	ldr	r1, [r3, #0]
 80015b2:	4b39      	ldr	r3, [pc, #228]	; (8001698 <digital_clock+0x101c>)
 80015b4:	681a      	ldr	r2, [r3, #0]
 80015b6:	4b39      	ldr	r3, [pc, #228]	; (800169c <digital_clock+0x1020>)
 80015b8:	681c      	ldr	r4, [r3, #0]
 80015ba:	687b      	ldr	r3, [r7, #4]
 80015bc:	9300      	str	r3, [sp, #0]
 80015be:	0023      	movs	r3, r4
 80015c0:	f000 fd9a 	bl	80020f8 <d4_counter>

    	                      b=9;
 80015c4:	4b37      	ldr	r3, [pc, #220]	; (80016a4 <digital_clock+0x1028>)
 80015c6:	2209      	movs	r2, #9
 80015c8:	601a      	str	r2, [r3, #0]
    	                      c=2;
 80015ca:	4b33      	ldr	r3, [pc, #204]	; (8001698 <digital_clock+0x101c>)
 80015cc:	2202      	movs	r2, #2
 80015ce:	601a      	str	r2, [r3, #0]
    	                      d=9;
 80015d0:	4b32      	ldr	r3, [pc, #200]	; (800169c <digital_clock+0x1020>)
 80015d2:	2209      	movs	r2, #9
 80015d4:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 80015d6:	4b32      	ldr	r3, [pc, #200]	; (80016a0 <digital_clock+0x1024>)
 80015d8:	6818      	ldr	r0, [r3, #0]
 80015da:	4b32      	ldr	r3, [pc, #200]	; (80016a4 <digital_clock+0x1028>)
 80015dc:	6819      	ldr	r1, [r3, #0]
 80015de:	4b2e      	ldr	r3, [pc, #184]	; (8001698 <digital_clock+0x101c>)
 80015e0:	681a      	ldr	r2, [r3, #0]
 80015e2:	4b2e      	ldr	r3, [pc, #184]	; (800169c <digital_clock+0x1020>)
 80015e4:	681c      	ldr	r4, [r3, #0]
 80015e6:	687b      	ldr	r3, [r7, #4]
 80015e8:	9300      	str	r3, [sp, #0]
 80015ea:	0023      	movs	r3, r4
 80015ec:	f000 fd84 	bl	80020f8 <d4_counter>

    	                      b=9;
 80015f0:	4b2c      	ldr	r3, [pc, #176]	; (80016a4 <digital_clock+0x1028>)
 80015f2:	2209      	movs	r2, #9
 80015f4:	601a      	str	r2, [r3, #0]
    	                      c=1;
 80015f6:	4b28      	ldr	r3, [pc, #160]	; (8001698 <digital_clock+0x101c>)
 80015f8:	2201      	movs	r2, #1
 80015fa:	601a      	str	r2, [r3, #0]
    	                      d=9;
 80015fc:	4b27      	ldr	r3, [pc, #156]	; (800169c <digital_clock+0x1020>)
 80015fe:	2209      	movs	r2, #9
 8001600:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8001602:	4b27      	ldr	r3, [pc, #156]	; (80016a0 <digital_clock+0x1024>)
 8001604:	6818      	ldr	r0, [r3, #0]
 8001606:	4b27      	ldr	r3, [pc, #156]	; (80016a4 <digital_clock+0x1028>)
 8001608:	6819      	ldr	r1, [r3, #0]
 800160a:	4b23      	ldr	r3, [pc, #140]	; (8001698 <digital_clock+0x101c>)
 800160c:	681a      	ldr	r2, [r3, #0]
 800160e:	4b23      	ldr	r3, [pc, #140]	; (800169c <digital_clock+0x1020>)
 8001610:	681c      	ldr	r4, [r3, #0]
 8001612:	687b      	ldr	r3, [r7, #4]
 8001614:	9300      	str	r3, [sp, #0]
 8001616:	0023      	movs	r3, r4
 8001618:	f000 fd6e 	bl	80020f8 <d4_counter>

    	                      b=9;
 800161c:	4b21      	ldr	r3, [pc, #132]	; (80016a4 <digital_clock+0x1028>)
 800161e:	2209      	movs	r2, #9
 8001620:	601a      	str	r2, [r3, #0]
    	                      c=0;
 8001622:	4b1d      	ldr	r3, [pc, #116]	; (8001698 <digital_clock+0x101c>)
 8001624:	2200      	movs	r2, #0
 8001626:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8001628:	4b1c      	ldr	r3, [pc, #112]	; (800169c <digital_clock+0x1020>)
 800162a:	2209      	movs	r2, #9
 800162c:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 800162e:	4b1c      	ldr	r3, [pc, #112]	; (80016a0 <digital_clock+0x1024>)
 8001630:	6818      	ldr	r0, [r3, #0]
 8001632:	4b1c      	ldr	r3, [pc, #112]	; (80016a4 <digital_clock+0x1028>)
 8001634:	6819      	ldr	r1, [r3, #0]
 8001636:	4b18      	ldr	r3, [pc, #96]	; (8001698 <digital_clock+0x101c>)
 8001638:	681a      	ldr	r2, [r3, #0]
 800163a:	4b18      	ldr	r3, [pc, #96]	; (800169c <digital_clock+0x1020>)
 800163c:	681c      	ldr	r4, [r3, #0]
 800163e:	687b      	ldr	r3, [r7, #4]
 8001640:	9300      	str	r3, [sp, #0]
 8001642:	0023      	movs	r3, r4
 8001644:	f000 fd58 	bl	80020f8 <d4_counter>





    	                      a=0;
 8001648:	4b15      	ldr	r3, [pc, #84]	; (80016a0 <digital_clock+0x1024>)
 800164a:	2200      	movs	r2, #0
 800164c:	601a      	str	r2, [r3, #0]
    	                      b=8;
 800164e:	4b15      	ldr	r3, [pc, #84]	; (80016a4 <digital_clock+0x1028>)
 8001650:	2208      	movs	r2, #8
 8001652:	601a      	str	r2, [r3, #0]
    	                      c=5;
 8001654:	4b10      	ldr	r3, [pc, #64]	; (8001698 <digital_clock+0x101c>)
 8001656:	2205      	movs	r2, #5
 8001658:	601a      	str	r2, [r3, #0]
    	                      d=9;
 800165a:	4b10      	ldr	r3, [pc, #64]	; (800169c <digital_clock+0x1020>)
 800165c:	2209      	movs	r2, #9
 800165e:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8001660:	4b0f      	ldr	r3, [pc, #60]	; (80016a0 <digital_clock+0x1024>)
 8001662:	6818      	ldr	r0, [r3, #0]
 8001664:	4b0f      	ldr	r3, [pc, #60]	; (80016a4 <digital_clock+0x1028>)
 8001666:	6819      	ldr	r1, [r3, #0]
 8001668:	4b0b      	ldr	r3, [pc, #44]	; (8001698 <digital_clock+0x101c>)
 800166a:	681a      	ldr	r2, [r3, #0]
 800166c:	4b0b      	ldr	r3, [pc, #44]	; (800169c <digital_clock+0x1020>)
 800166e:	681c      	ldr	r4, [r3, #0]
 8001670:	687b      	ldr	r3, [r7, #4]
 8001672:	9300      	str	r3, [sp, #0]
 8001674:	0023      	movs	r3, r4
 8001676:	f000 fd3f 	bl	80020f8 <d4_counter>

    	                      b=8;
 800167a:	4b0a      	ldr	r3, [pc, #40]	; (80016a4 <digital_clock+0x1028>)
 800167c:	2208      	movs	r2, #8
 800167e:	601a      	str	r2, [r3, #0]
    	                      c=4;
 8001680:	4b05      	ldr	r3, [pc, #20]	; (8001698 <digital_clock+0x101c>)
 8001682:	2204      	movs	r2, #4
 8001684:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8001686:	4b05      	ldr	r3, [pc, #20]	; (800169c <digital_clock+0x1020>)
 8001688:	2209      	movs	r2, #9
 800168a:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 800168c:	4b04      	ldr	r3, [pc, #16]	; (80016a0 <digital_clock+0x1024>)
 800168e:	6818      	ldr	r0, [r3, #0]
 8001690:	4b04      	ldr	r3, [pc, #16]	; (80016a4 <digital_clock+0x1028>)
 8001692:	6819      	ldr	r1, [r3, #0]
 8001694:	e008      	b.n	80016a8 <digital_clock+0x102c>
 8001696:	46c0      	nop			; (mov r8, r8)
 8001698:	20000008 	.word	0x20000008
 800169c:	2000000c 	.word	0x2000000c
 80016a0:	20000000 	.word	0x20000000
 80016a4:	20000004 	.word	0x20000004
 80016a8:	4bfe      	ldr	r3, [pc, #1016]	; (8001aa4 <digital_clock+0x1428>)
 80016aa:	681a      	ldr	r2, [r3, #0]
 80016ac:	4bfe      	ldr	r3, [pc, #1016]	; (8001aa8 <digital_clock+0x142c>)
 80016ae:	681c      	ldr	r4, [r3, #0]
 80016b0:	687b      	ldr	r3, [r7, #4]
 80016b2:	9300      	str	r3, [sp, #0]
 80016b4:	0023      	movs	r3, r4
 80016b6:	f000 fd1f 	bl	80020f8 <d4_counter>

    	                      b=8;
 80016ba:	4bfc      	ldr	r3, [pc, #1008]	; (8001aac <digital_clock+0x1430>)
 80016bc:	2208      	movs	r2, #8
 80016be:	601a      	str	r2, [r3, #0]
    	                      c=3;
 80016c0:	4bf8      	ldr	r3, [pc, #992]	; (8001aa4 <digital_clock+0x1428>)
 80016c2:	2203      	movs	r2, #3
 80016c4:	601a      	str	r2, [r3, #0]
    	                      d=9;
 80016c6:	4bf8      	ldr	r3, [pc, #992]	; (8001aa8 <digital_clock+0x142c>)
 80016c8:	2209      	movs	r2, #9
 80016ca:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 80016cc:	4bf8      	ldr	r3, [pc, #992]	; (8001ab0 <digital_clock+0x1434>)
 80016ce:	6818      	ldr	r0, [r3, #0]
 80016d0:	4bf6      	ldr	r3, [pc, #984]	; (8001aac <digital_clock+0x1430>)
 80016d2:	6819      	ldr	r1, [r3, #0]
 80016d4:	4bf3      	ldr	r3, [pc, #972]	; (8001aa4 <digital_clock+0x1428>)
 80016d6:	681a      	ldr	r2, [r3, #0]
 80016d8:	4bf3      	ldr	r3, [pc, #972]	; (8001aa8 <digital_clock+0x142c>)
 80016da:	681c      	ldr	r4, [r3, #0]
 80016dc:	687b      	ldr	r3, [r7, #4]
 80016de:	9300      	str	r3, [sp, #0]
 80016e0:	0023      	movs	r3, r4
 80016e2:	f000 fd09 	bl	80020f8 <d4_counter>

    	                      b=8;
 80016e6:	4bf1      	ldr	r3, [pc, #964]	; (8001aac <digital_clock+0x1430>)
 80016e8:	2208      	movs	r2, #8
 80016ea:	601a      	str	r2, [r3, #0]
    	                      c=2;
 80016ec:	4bed      	ldr	r3, [pc, #948]	; (8001aa4 <digital_clock+0x1428>)
 80016ee:	2202      	movs	r2, #2
 80016f0:	601a      	str	r2, [r3, #0]
    	                      d=9;
 80016f2:	4bed      	ldr	r3, [pc, #948]	; (8001aa8 <digital_clock+0x142c>)
 80016f4:	2209      	movs	r2, #9
 80016f6:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 80016f8:	4bed      	ldr	r3, [pc, #948]	; (8001ab0 <digital_clock+0x1434>)
 80016fa:	6818      	ldr	r0, [r3, #0]
 80016fc:	4beb      	ldr	r3, [pc, #940]	; (8001aac <digital_clock+0x1430>)
 80016fe:	6819      	ldr	r1, [r3, #0]
 8001700:	4be8      	ldr	r3, [pc, #928]	; (8001aa4 <digital_clock+0x1428>)
 8001702:	681a      	ldr	r2, [r3, #0]
 8001704:	4be8      	ldr	r3, [pc, #928]	; (8001aa8 <digital_clock+0x142c>)
 8001706:	681c      	ldr	r4, [r3, #0]
 8001708:	687b      	ldr	r3, [r7, #4]
 800170a:	9300      	str	r3, [sp, #0]
 800170c:	0023      	movs	r3, r4
 800170e:	f000 fcf3 	bl	80020f8 <d4_counter>

    	                      b=8;
 8001712:	4be6      	ldr	r3, [pc, #920]	; (8001aac <digital_clock+0x1430>)
 8001714:	2208      	movs	r2, #8
 8001716:	601a      	str	r2, [r3, #0]
    	                      c=1;
 8001718:	4be2      	ldr	r3, [pc, #904]	; (8001aa4 <digital_clock+0x1428>)
 800171a:	2201      	movs	r2, #1
 800171c:	601a      	str	r2, [r3, #0]
    	                      d=9;
 800171e:	4be2      	ldr	r3, [pc, #904]	; (8001aa8 <digital_clock+0x142c>)
 8001720:	2209      	movs	r2, #9
 8001722:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8001724:	4be2      	ldr	r3, [pc, #904]	; (8001ab0 <digital_clock+0x1434>)
 8001726:	6818      	ldr	r0, [r3, #0]
 8001728:	4be0      	ldr	r3, [pc, #896]	; (8001aac <digital_clock+0x1430>)
 800172a:	6819      	ldr	r1, [r3, #0]
 800172c:	4bdd      	ldr	r3, [pc, #884]	; (8001aa4 <digital_clock+0x1428>)
 800172e:	681a      	ldr	r2, [r3, #0]
 8001730:	4bdd      	ldr	r3, [pc, #884]	; (8001aa8 <digital_clock+0x142c>)
 8001732:	681c      	ldr	r4, [r3, #0]
 8001734:	687b      	ldr	r3, [r7, #4]
 8001736:	9300      	str	r3, [sp, #0]
 8001738:	0023      	movs	r3, r4
 800173a:	f000 fcdd 	bl	80020f8 <d4_counter>

    	                      b=8;
 800173e:	4bdb      	ldr	r3, [pc, #876]	; (8001aac <digital_clock+0x1430>)
 8001740:	2208      	movs	r2, #8
 8001742:	601a      	str	r2, [r3, #0]
    	                      c=0;
 8001744:	4bd7      	ldr	r3, [pc, #860]	; (8001aa4 <digital_clock+0x1428>)
 8001746:	2200      	movs	r2, #0
 8001748:	601a      	str	r2, [r3, #0]
    	                      d=9;
 800174a:	4bd7      	ldr	r3, [pc, #860]	; (8001aa8 <digital_clock+0x142c>)
 800174c:	2209      	movs	r2, #9
 800174e:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8001750:	4bd7      	ldr	r3, [pc, #860]	; (8001ab0 <digital_clock+0x1434>)
 8001752:	6818      	ldr	r0, [r3, #0]
 8001754:	4bd5      	ldr	r3, [pc, #852]	; (8001aac <digital_clock+0x1430>)
 8001756:	6819      	ldr	r1, [r3, #0]
 8001758:	4bd2      	ldr	r3, [pc, #840]	; (8001aa4 <digital_clock+0x1428>)
 800175a:	681a      	ldr	r2, [r3, #0]
 800175c:	4bd2      	ldr	r3, [pc, #840]	; (8001aa8 <digital_clock+0x142c>)
 800175e:	681c      	ldr	r4, [r3, #0]
 8001760:	687b      	ldr	r3, [r7, #4]
 8001762:	9300      	str	r3, [sp, #0]
 8001764:	0023      	movs	r3, r4
 8001766:	f000 fcc7 	bl	80020f8 <d4_counter>





    	                      a=0;
 800176a:	4bd1      	ldr	r3, [pc, #836]	; (8001ab0 <digital_clock+0x1434>)
 800176c:	2200      	movs	r2, #0
 800176e:	601a      	str	r2, [r3, #0]
    	                      b=7;
 8001770:	4bce      	ldr	r3, [pc, #824]	; (8001aac <digital_clock+0x1430>)
 8001772:	2207      	movs	r2, #7
 8001774:	601a      	str	r2, [r3, #0]
    	                      c=5;
 8001776:	4bcb      	ldr	r3, [pc, #812]	; (8001aa4 <digital_clock+0x1428>)
 8001778:	2205      	movs	r2, #5
 800177a:	601a      	str	r2, [r3, #0]
    	                      d=9;
 800177c:	4bca      	ldr	r3, [pc, #808]	; (8001aa8 <digital_clock+0x142c>)
 800177e:	2209      	movs	r2, #9
 8001780:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8001782:	4bcb      	ldr	r3, [pc, #812]	; (8001ab0 <digital_clock+0x1434>)
 8001784:	6818      	ldr	r0, [r3, #0]
 8001786:	4bc9      	ldr	r3, [pc, #804]	; (8001aac <digital_clock+0x1430>)
 8001788:	6819      	ldr	r1, [r3, #0]
 800178a:	4bc6      	ldr	r3, [pc, #792]	; (8001aa4 <digital_clock+0x1428>)
 800178c:	681a      	ldr	r2, [r3, #0]
 800178e:	4bc6      	ldr	r3, [pc, #792]	; (8001aa8 <digital_clock+0x142c>)
 8001790:	681c      	ldr	r4, [r3, #0]
 8001792:	687b      	ldr	r3, [r7, #4]
 8001794:	9300      	str	r3, [sp, #0]
 8001796:	0023      	movs	r3, r4
 8001798:	f000 fcae 	bl	80020f8 <d4_counter>

    	                      b=7;
 800179c:	4bc3      	ldr	r3, [pc, #780]	; (8001aac <digital_clock+0x1430>)
 800179e:	2207      	movs	r2, #7
 80017a0:	601a      	str	r2, [r3, #0]
    	                      c=4;
 80017a2:	4bc0      	ldr	r3, [pc, #768]	; (8001aa4 <digital_clock+0x1428>)
 80017a4:	2204      	movs	r2, #4
 80017a6:	601a      	str	r2, [r3, #0]
    	                      d=9;
 80017a8:	4bbf      	ldr	r3, [pc, #764]	; (8001aa8 <digital_clock+0x142c>)
 80017aa:	2209      	movs	r2, #9
 80017ac:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 80017ae:	4bc0      	ldr	r3, [pc, #768]	; (8001ab0 <digital_clock+0x1434>)
 80017b0:	6818      	ldr	r0, [r3, #0]
 80017b2:	4bbe      	ldr	r3, [pc, #760]	; (8001aac <digital_clock+0x1430>)
 80017b4:	6819      	ldr	r1, [r3, #0]
 80017b6:	4bbb      	ldr	r3, [pc, #748]	; (8001aa4 <digital_clock+0x1428>)
 80017b8:	681a      	ldr	r2, [r3, #0]
 80017ba:	4bbb      	ldr	r3, [pc, #748]	; (8001aa8 <digital_clock+0x142c>)
 80017bc:	681c      	ldr	r4, [r3, #0]
 80017be:	687b      	ldr	r3, [r7, #4]
 80017c0:	9300      	str	r3, [sp, #0]
 80017c2:	0023      	movs	r3, r4
 80017c4:	f000 fc98 	bl	80020f8 <d4_counter>

    	                      b=7;
 80017c8:	4bb8      	ldr	r3, [pc, #736]	; (8001aac <digital_clock+0x1430>)
 80017ca:	2207      	movs	r2, #7
 80017cc:	601a      	str	r2, [r3, #0]
    	                      c=3;
 80017ce:	4bb5      	ldr	r3, [pc, #724]	; (8001aa4 <digital_clock+0x1428>)
 80017d0:	2203      	movs	r2, #3
 80017d2:	601a      	str	r2, [r3, #0]
    	                      d=9;
 80017d4:	4bb4      	ldr	r3, [pc, #720]	; (8001aa8 <digital_clock+0x142c>)
 80017d6:	2209      	movs	r2, #9
 80017d8:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 80017da:	4bb5      	ldr	r3, [pc, #724]	; (8001ab0 <digital_clock+0x1434>)
 80017dc:	6818      	ldr	r0, [r3, #0]
 80017de:	4bb3      	ldr	r3, [pc, #716]	; (8001aac <digital_clock+0x1430>)
 80017e0:	6819      	ldr	r1, [r3, #0]
 80017e2:	4bb0      	ldr	r3, [pc, #704]	; (8001aa4 <digital_clock+0x1428>)
 80017e4:	681a      	ldr	r2, [r3, #0]
 80017e6:	4bb0      	ldr	r3, [pc, #704]	; (8001aa8 <digital_clock+0x142c>)
 80017e8:	681c      	ldr	r4, [r3, #0]
 80017ea:	687b      	ldr	r3, [r7, #4]
 80017ec:	9300      	str	r3, [sp, #0]
 80017ee:	0023      	movs	r3, r4
 80017f0:	f000 fc82 	bl	80020f8 <d4_counter>

    	                      b=7;
 80017f4:	4bad      	ldr	r3, [pc, #692]	; (8001aac <digital_clock+0x1430>)
 80017f6:	2207      	movs	r2, #7
 80017f8:	601a      	str	r2, [r3, #0]
    	                      c=2;
 80017fa:	4baa      	ldr	r3, [pc, #680]	; (8001aa4 <digital_clock+0x1428>)
 80017fc:	2202      	movs	r2, #2
 80017fe:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8001800:	4ba9      	ldr	r3, [pc, #676]	; (8001aa8 <digital_clock+0x142c>)
 8001802:	2209      	movs	r2, #9
 8001804:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8001806:	4baa      	ldr	r3, [pc, #680]	; (8001ab0 <digital_clock+0x1434>)
 8001808:	6818      	ldr	r0, [r3, #0]
 800180a:	4ba8      	ldr	r3, [pc, #672]	; (8001aac <digital_clock+0x1430>)
 800180c:	6819      	ldr	r1, [r3, #0]
 800180e:	4ba5      	ldr	r3, [pc, #660]	; (8001aa4 <digital_clock+0x1428>)
 8001810:	681a      	ldr	r2, [r3, #0]
 8001812:	4ba5      	ldr	r3, [pc, #660]	; (8001aa8 <digital_clock+0x142c>)
 8001814:	681c      	ldr	r4, [r3, #0]
 8001816:	687b      	ldr	r3, [r7, #4]
 8001818:	9300      	str	r3, [sp, #0]
 800181a:	0023      	movs	r3, r4
 800181c:	f000 fc6c 	bl	80020f8 <d4_counter>

    	                      b=7;
 8001820:	4ba2      	ldr	r3, [pc, #648]	; (8001aac <digital_clock+0x1430>)
 8001822:	2207      	movs	r2, #7
 8001824:	601a      	str	r2, [r3, #0]
    	                      c=1;
 8001826:	4b9f      	ldr	r3, [pc, #636]	; (8001aa4 <digital_clock+0x1428>)
 8001828:	2201      	movs	r2, #1
 800182a:	601a      	str	r2, [r3, #0]
    	                      d=9;
 800182c:	4b9e      	ldr	r3, [pc, #632]	; (8001aa8 <digital_clock+0x142c>)
 800182e:	2209      	movs	r2, #9
 8001830:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8001832:	4b9f      	ldr	r3, [pc, #636]	; (8001ab0 <digital_clock+0x1434>)
 8001834:	6818      	ldr	r0, [r3, #0]
 8001836:	4b9d      	ldr	r3, [pc, #628]	; (8001aac <digital_clock+0x1430>)
 8001838:	6819      	ldr	r1, [r3, #0]
 800183a:	4b9a      	ldr	r3, [pc, #616]	; (8001aa4 <digital_clock+0x1428>)
 800183c:	681a      	ldr	r2, [r3, #0]
 800183e:	4b9a      	ldr	r3, [pc, #616]	; (8001aa8 <digital_clock+0x142c>)
 8001840:	681c      	ldr	r4, [r3, #0]
 8001842:	687b      	ldr	r3, [r7, #4]
 8001844:	9300      	str	r3, [sp, #0]
 8001846:	0023      	movs	r3, r4
 8001848:	f000 fc56 	bl	80020f8 <d4_counter>

    	                      b=7;
 800184c:	4b97      	ldr	r3, [pc, #604]	; (8001aac <digital_clock+0x1430>)
 800184e:	2207      	movs	r2, #7
 8001850:	601a      	str	r2, [r3, #0]
    	                      c=0;
 8001852:	4b94      	ldr	r3, [pc, #592]	; (8001aa4 <digital_clock+0x1428>)
 8001854:	2200      	movs	r2, #0
 8001856:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8001858:	4b93      	ldr	r3, [pc, #588]	; (8001aa8 <digital_clock+0x142c>)
 800185a:	2209      	movs	r2, #9
 800185c:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 800185e:	4b94      	ldr	r3, [pc, #592]	; (8001ab0 <digital_clock+0x1434>)
 8001860:	6818      	ldr	r0, [r3, #0]
 8001862:	4b92      	ldr	r3, [pc, #584]	; (8001aac <digital_clock+0x1430>)
 8001864:	6819      	ldr	r1, [r3, #0]
 8001866:	4b8f      	ldr	r3, [pc, #572]	; (8001aa4 <digital_clock+0x1428>)
 8001868:	681a      	ldr	r2, [r3, #0]
 800186a:	4b8f      	ldr	r3, [pc, #572]	; (8001aa8 <digital_clock+0x142c>)
 800186c:	681c      	ldr	r4, [r3, #0]
 800186e:	687b      	ldr	r3, [r7, #4]
 8001870:	9300      	str	r3, [sp, #0]
 8001872:	0023      	movs	r3, r4
 8001874:	f000 fc40 	bl	80020f8 <d4_counter>



    	                      a=0;
 8001878:	4b8d      	ldr	r3, [pc, #564]	; (8001ab0 <digital_clock+0x1434>)
 800187a:	2200      	movs	r2, #0
 800187c:	601a      	str	r2, [r3, #0]
    	                      b=6;
 800187e:	4b8b      	ldr	r3, [pc, #556]	; (8001aac <digital_clock+0x1430>)
 8001880:	2206      	movs	r2, #6
 8001882:	601a      	str	r2, [r3, #0]
    	                      c=5;
 8001884:	4b87      	ldr	r3, [pc, #540]	; (8001aa4 <digital_clock+0x1428>)
 8001886:	2205      	movs	r2, #5
 8001888:	601a      	str	r2, [r3, #0]
    	                      d=9;
 800188a:	4b87      	ldr	r3, [pc, #540]	; (8001aa8 <digital_clock+0x142c>)
 800188c:	2209      	movs	r2, #9
 800188e:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8001890:	4b87      	ldr	r3, [pc, #540]	; (8001ab0 <digital_clock+0x1434>)
 8001892:	6818      	ldr	r0, [r3, #0]
 8001894:	4b85      	ldr	r3, [pc, #532]	; (8001aac <digital_clock+0x1430>)
 8001896:	6819      	ldr	r1, [r3, #0]
 8001898:	4b82      	ldr	r3, [pc, #520]	; (8001aa4 <digital_clock+0x1428>)
 800189a:	681a      	ldr	r2, [r3, #0]
 800189c:	4b82      	ldr	r3, [pc, #520]	; (8001aa8 <digital_clock+0x142c>)
 800189e:	681c      	ldr	r4, [r3, #0]
 80018a0:	687b      	ldr	r3, [r7, #4]
 80018a2:	9300      	str	r3, [sp, #0]
 80018a4:	0023      	movs	r3, r4
 80018a6:	f000 fc27 	bl	80020f8 <d4_counter>

    	                      b=6;
 80018aa:	4b80      	ldr	r3, [pc, #512]	; (8001aac <digital_clock+0x1430>)
 80018ac:	2206      	movs	r2, #6
 80018ae:	601a      	str	r2, [r3, #0]
    	                      c=4;
 80018b0:	4b7c      	ldr	r3, [pc, #496]	; (8001aa4 <digital_clock+0x1428>)
 80018b2:	2204      	movs	r2, #4
 80018b4:	601a      	str	r2, [r3, #0]
    	                      d=9;
 80018b6:	4b7c      	ldr	r3, [pc, #496]	; (8001aa8 <digital_clock+0x142c>)
 80018b8:	2209      	movs	r2, #9
 80018ba:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 80018bc:	4b7c      	ldr	r3, [pc, #496]	; (8001ab0 <digital_clock+0x1434>)
 80018be:	6818      	ldr	r0, [r3, #0]
 80018c0:	4b7a      	ldr	r3, [pc, #488]	; (8001aac <digital_clock+0x1430>)
 80018c2:	6819      	ldr	r1, [r3, #0]
 80018c4:	4b77      	ldr	r3, [pc, #476]	; (8001aa4 <digital_clock+0x1428>)
 80018c6:	681a      	ldr	r2, [r3, #0]
 80018c8:	4b77      	ldr	r3, [pc, #476]	; (8001aa8 <digital_clock+0x142c>)
 80018ca:	681c      	ldr	r4, [r3, #0]
 80018cc:	687b      	ldr	r3, [r7, #4]
 80018ce:	9300      	str	r3, [sp, #0]
 80018d0:	0023      	movs	r3, r4
 80018d2:	f000 fc11 	bl	80020f8 <d4_counter>

    	                      b=6;
 80018d6:	4b75      	ldr	r3, [pc, #468]	; (8001aac <digital_clock+0x1430>)
 80018d8:	2206      	movs	r2, #6
 80018da:	601a      	str	r2, [r3, #0]
    	                      c=3;
 80018dc:	4b71      	ldr	r3, [pc, #452]	; (8001aa4 <digital_clock+0x1428>)
 80018de:	2203      	movs	r2, #3
 80018e0:	601a      	str	r2, [r3, #0]
    	                      d=9;
 80018e2:	4b71      	ldr	r3, [pc, #452]	; (8001aa8 <digital_clock+0x142c>)
 80018e4:	2209      	movs	r2, #9
 80018e6:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 80018e8:	4b71      	ldr	r3, [pc, #452]	; (8001ab0 <digital_clock+0x1434>)
 80018ea:	6818      	ldr	r0, [r3, #0]
 80018ec:	4b6f      	ldr	r3, [pc, #444]	; (8001aac <digital_clock+0x1430>)
 80018ee:	6819      	ldr	r1, [r3, #0]
 80018f0:	4b6c      	ldr	r3, [pc, #432]	; (8001aa4 <digital_clock+0x1428>)
 80018f2:	681a      	ldr	r2, [r3, #0]
 80018f4:	4b6c      	ldr	r3, [pc, #432]	; (8001aa8 <digital_clock+0x142c>)
 80018f6:	681c      	ldr	r4, [r3, #0]
 80018f8:	687b      	ldr	r3, [r7, #4]
 80018fa:	9300      	str	r3, [sp, #0]
 80018fc:	0023      	movs	r3, r4
 80018fe:	f000 fbfb 	bl	80020f8 <d4_counter>

    	                      b=6;
 8001902:	4b6a      	ldr	r3, [pc, #424]	; (8001aac <digital_clock+0x1430>)
 8001904:	2206      	movs	r2, #6
 8001906:	601a      	str	r2, [r3, #0]
    	                      c=2;
 8001908:	4b66      	ldr	r3, [pc, #408]	; (8001aa4 <digital_clock+0x1428>)
 800190a:	2202      	movs	r2, #2
 800190c:	601a      	str	r2, [r3, #0]
    	                      d=9;
 800190e:	4b66      	ldr	r3, [pc, #408]	; (8001aa8 <digital_clock+0x142c>)
 8001910:	2209      	movs	r2, #9
 8001912:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8001914:	4b66      	ldr	r3, [pc, #408]	; (8001ab0 <digital_clock+0x1434>)
 8001916:	6818      	ldr	r0, [r3, #0]
 8001918:	4b64      	ldr	r3, [pc, #400]	; (8001aac <digital_clock+0x1430>)
 800191a:	6819      	ldr	r1, [r3, #0]
 800191c:	4b61      	ldr	r3, [pc, #388]	; (8001aa4 <digital_clock+0x1428>)
 800191e:	681a      	ldr	r2, [r3, #0]
 8001920:	4b61      	ldr	r3, [pc, #388]	; (8001aa8 <digital_clock+0x142c>)
 8001922:	681c      	ldr	r4, [r3, #0]
 8001924:	687b      	ldr	r3, [r7, #4]
 8001926:	9300      	str	r3, [sp, #0]
 8001928:	0023      	movs	r3, r4
 800192a:	f000 fbe5 	bl	80020f8 <d4_counter>

    	                      b=6;
 800192e:	4b5f      	ldr	r3, [pc, #380]	; (8001aac <digital_clock+0x1430>)
 8001930:	2206      	movs	r2, #6
 8001932:	601a      	str	r2, [r3, #0]
    	                      c=1;
 8001934:	4b5b      	ldr	r3, [pc, #364]	; (8001aa4 <digital_clock+0x1428>)
 8001936:	2201      	movs	r2, #1
 8001938:	601a      	str	r2, [r3, #0]
    	                      d=9;
 800193a:	4b5b      	ldr	r3, [pc, #364]	; (8001aa8 <digital_clock+0x142c>)
 800193c:	2209      	movs	r2, #9
 800193e:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8001940:	4b5b      	ldr	r3, [pc, #364]	; (8001ab0 <digital_clock+0x1434>)
 8001942:	6818      	ldr	r0, [r3, #0]
 8001944:	4b59      	ldr	r3, [pc, #356]	; (8001aac <digital_clock+0x1430>)
 8001946:	6819      	ldr	r1, [r3, #0]
 8001948:	4b56      	ldr	r3, [pc, #344]	; (8001aa4 <digital_clock+0x1428>)
 800194a:	681a      	ldr	r2, [r3, #0]
 800194c:	4b56      	ldr	r3, [pc, #344]	; (8001aa8 <digital_clock+0x142c>)
 800194e:	681c      	ldr	r4, [r3, #0]
 8001950:	687b      	ldr	r3, [r7, #4]
 8001952:	9300      	str	r3, [sp, #0]
 8001954:	0023      	movs	r3, r4
 8001956:	f000 fbcf 	bl	80020f8 <d4_counter>

    	                      b=6;
 800195a:	4b54      	ldr	r3, [pc, #336]	; (8001aac <digital_clock+0x1430>)
 800195c:	2206      	movs	r2, #6
 800195e:	601a      	str	r2, [r3, #0]
    	                      c=0;
 8001960:	4b50      	ldr	r3, [pc, #320]	; (8001aa4 <digital_clock+0x1428>)
 8001962:	2200      	movs	r2, #0
 8001964:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8001966:	4b50      	ldr	r3, [pc, #320]	; (8001aa8 <digital_clock+0x142c>)
 8001968:	2209      	movs	r2, #9
 800196a:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 800196c:	4b50      	ldr	r3, [pc, #320]	; (8001ab0 <digital_clock+0x1434>)
 800196e:	6818      	ldr	r0, [r3, #0]
 8001970:	4b4e      	ldr	r3, [pc, #312]	; (8001aac <digital_clock+0x1430>)
 8001972:	6819      	ldr	r1, [r3, #0]
 8001974:	4b4b      	ldr	r3, [pc, #300]	; (8001aa4 <digital_clock+0x1428>)
 8001976:	681a      	ldr	r2, [r3, #0]
 8001978:	4b4b      	ldr	r3, [pc, #300]	; (8001aa8 <digital_clock+0x142c>)
 800197a:	681c      	ldr	r4, [r3, #0]
 800197c:	687b      	ldr	r3, [r7, #4]
 800197e:	9300      	str	r3, [sp, #0]
 8001980:	0023      	movs	r3, r4
 8001982:	f000 fbb9 	bl	80020f8 <d4_counter>



    	                      a=0;
 8001986:	4b4a      	ldr	r3, [pc, #296]	; (8001ab0 <digital_clock+0x1434>)
 8001988:	2200      	movs	r2, #0
 800198a:	601a      	str	r2, [r3, #0]
    	                      b=5;
 800198c:	4b47      	ldr	r3, [pc, #284]	; (8001aac <digital_clock+0x1430>)
 800198e:	2205      	movs	r2, #5
 8001990:	601a      	str	r2, [r3, #0]
    	                      c=5;
 8001992:	4b44      	ldr	r3, [pc, #272]	; (8001aa4 <digital_clock+0x1428>)
 8001994:	2205      	movs	r2, #5
 8001996:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8001998:	4b43      	ldr	r3, [pc, #268]	; (8001aa8 <digital_clock+0x142c>)
 800199a:	2209      	movs	r2, #9
 800199c:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 800199e:	4b44      	ldr	r3, [pc, #272]	; (8001ab0 <digital_clock+0x1434>)
 80019a0:	6818      	ldr	r0, [r3, #0]
 80019a2:	4b42      	ldr	r3, [pc, #264]	; (8001aac <digital_clock+0x1430>)
 80019a4:	6819      	ldr	r1, [r3, #0]
 80019a6:	4b3f      	ldr	r3, [pc, #252]	; (8001aa4 <digital_clock+0x1428>)
 80019a8:	681a      	ldr	r2, [r3, #0]
 80019aa:	4b3f      	ldr	r3, [pc, #252]	; (8001aa8 <digital_clock+0x142c>)
 80019ac:	681c      	ldr	r4, [r3, #0]
 80019ae:	687b      	ldr	r3, [r7, #4]
 80019b0:	9300      	str	r3, [sp, #0]
 80019b2:	0023      	movs	r3, r4
 80019b4:	f000 fba0 	bl	80020f8 <d4_counter>

    	                      b=5;
 80019b8:	4b3c      	ldr	r3, [pc, #240]	; (8001aac <digital_clock+0x1430>)
 80019ba:	2205      	movs	r2, #5
 80019bc:	601a      	str	r2, [r3, #0]
    	                      c=4;
 80019be:	4b39      	ldr	r3, [pc, #228]	; (8001aa4 <digital_clock+0x1428>)
 80019c0:	2204      	movs	r2, #4
 80019c2:	601a      	str	r2, [r3, #0]
    	                      d=9;
 80019c4:	4b38      	ldr	r3, [pc, #224]	; (8001aa8 <digital_clock+0x142c>)
 80019c6:	2209      	movs	r2, #9
 80019c8:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 80019ca:	4b39      	ldr	r3, [pc, #228]	; (8001ab0 <digital_clock+0x1434>)
 80019cc:	6818      	ldr	r0, [r3, #0]
 80019ce:	4b37      	ldr	r3, [pc, #220]	; (8001aac <digital_clock+0x1430>)
 80019d0:	6819      	ldr	r1, [r3, #0]
 80019d2:	4b34      	ldr	r3, [pc, #208]	; (8001aa4 <digital_clock+0x1428>)
 80019d4:	681a      	ldr	r2, [r3, #0]
 80019d6:	4b34      	ldr	r3, [pc, #208]	; (8001aa8 <digital_clock+0x142c>)
 80019d8:	681c      	ldr	r4, [r3, #0]
 80019da:	687b      	ldr	r3, [r7, #4]
 80019dc:	9300      	str	r3, [sp, #0]
 80019de:	0023      	movs	r3, r4
 80019e0:	f000 fb8a 	bl	80020f8 <d4_counter>

    	                      b=5;
 80019e4:	4b31      	ldr	r3, [pc, #196]	; (8001aac <digital_clock+0x1430>)
 80019e6:	2205      	movs	r2, #5
 80019e8:	601a      	str	r2, [r3, #0]
    	                      c=3;
 80019ea:	4b2e      	ldr	r3, [pc, #184]	; (8001aa4 <digital_clock+0x1428>)
 80019ec:	2203      	movs	r2, #3
 80019ee:	601a      	str	r2, [r3, #0]
    	                      d=9;
 80019f0:	4b2d      	ldr	r3, [pc, #180]	; (8001aa8 <digital_clock+0x142c>)
 80019f2:	2209      	movs	r2, #9
 80019f4:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 80019f6:	4b2e      	ldr	r3, [pc, #184]	; (8001ab0 <digital_clock+0x1434>)
 80019f8:	6818      	ldr	r0, [r3, #0]
 80019fa:	4b2c      	ldr	r3, [pc, #176]	; (8001aac <digital_clock+0x1430>)
 80019fc:	6819      	ldr	r1, [r3, #0]
 80019fe:	4b29      	ldr	r3, [pc, #164]	; (8001aa4 <digital_clock+0x1428>)
 8001a00:	681a      	ldr	r2, [r3, #0]
 8001a02:	4b29      	ldr	r3, [pc, #164]	; (8001aa8 <digital_clock+0x142c>)
 8001a04:	681c      	ldr	r4, [r3, #0]
 8001a06:	687b      	ldr	r3, [r7, #4]
 8001a08:	9300      	str	r3, [sp, #0]
 8001a0a:	0023      	movs	r3, r4
 8001a0c:	f000 fb74 	bl	80020f8 <d4_counter>

    	                      b=5;
 8001a10:	4b26      	ldr	r3, [pc, #152]	; (8001aac <digital_clock+0x1430>)
 8001a12:	2205      	movs	r2, #5
 8001a14:	601a      	str	r2, [r3, #0]
    	                      c=2;
 8001a16:	4b23      	ldr	r3, [pc, #140]	; (8001aa4 <digital_clock+0x1428>)
 8001a18:	2202      	movs	r2, #2
 8001a1a:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8001a1c:	4b22      	ldr	r3, [pc, #136]	; (8001aa8 <digital_clock+0x142c>)
 8001a1e:	2209      	movs	r2, #9
 8001a20:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8001a22:	4b23      	ldr	r3, [pc, #140]	; (8001ab0 <digital_clock+0x1434>)
 8001a24:	6818      	ldr	r0, [r3, #0]
 8001a26:	4b21      	ldr	r3, [pc, #132]	; (8001aac <digital_clock+0x1430>)
 8001a28:	6819      	ldr	r1, [r3, #0]
 8001a2a:	4b1e      	ldr	r3, [pc, #120]	; (8001aa4 <digital_clock+0x1428>)
 8001a2c:	681a      	ldr	r2, [r3, #0]
 8001a2e:	4b1e      	ldr	r3, [pc, #120]	; (8001aa8 <digital_clock+0x142c>)
 8001a30:	681c      	ldr	r4, [r3, #0]
 8001a32:	687b      	ldr	r3, [r7, #4]
 8001a34:	9300      	str	r3, [sp, #0]
 8001a36:	0023      	movs	r3, r4
 8001a38:	f000 fb5e 	bl	80020f8 <d4_counter>

    	                      b=5;
 8001a3c:	4b1b      	ldr	r3, [pc, #108]	; (8001aac <digital_clock+0x1430>)
 8001a3e:	2205      	movs	r2, #5
 8001a40:	601a      	str	r2, [r3, #0]
    	                      c=1;
 8001a42:	4b18      	ldr	r3, [pc, #96]	; (8001aa4 <digital_clock+0x1428>)
 8001a44:	2201      	movs	r2, #1
 8001a46:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8001a48:	4b17      	ldr	r3, [pc, #92]	; (8001aa8 <digital_clock+0x142c>)
 8001a4a:	2209      	movs	r2, #9
 8001a4c:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8001a4e:	4b18      	ldr	r3, [pc, #96]	; (8001ab0 <digital_clock+0x1434>)
 8001a50:	6818      	ldr	r0, [r3, #0]
 8001a52:	4b16      	ldr	r3, [pc, #88]	; (8001aac <digital_clock+0x1430>)
 8001a54:	6819      	ldr	r1, [r3, #0]
 8001a56:	4b13      	ldr	r3, [pc, #76]	; (8001aa4 <digital_clock+0x1428>)
 8001a58:	681a      	ldr	r2, [r3, #0]
 8001a5a:	4b13      	ldr	r3, [pc, #76]	; (8001aa8 <digital_clock+0x142c>)
 8001a5c:	681c      	ldr	r4, [r3, #0]
 8001a5e:	687b      	ldr	r3, [r7, #4]
 8001a60:	9300      	str	r3, [sp, #0]
 8001a62:	0023      	movs	r3, r4
 8001a64:	f000 fb48 	bl	80020f8 <d4_counter>

    	                      b=5;
 8001a68:	4b10      	ldr	r3, [pc, #64]	; (8001aac <digital_clock+0x1430>)
 8001a6a:	2205      	movs	r2, #5
 8001a6c:	601a      	str	r2, [r3, #0]
    	                      c=0;
 8001a6e:	4b0d      	ldr	r3, [pc, #52]	; (8001aa4 <digital_clock+0x1428>)
 8001a70:	2200      	movs	r2, #0
 8001a72:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8001a74:	4b0c      	ldr	r3, [pc, #48]	; (8001aa8 <digital_clock+0x142c>)
 8001a76:	2209      	movs	r2, #9
 8001a78:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8001a7a:	4b0d      	ldr	r3, [pc, #52]	; (8001ab0 <digital_clock+0x1434>)
 8001a7c:	6818      	ldr	r0, [r3, #0]
 8001a7e:	4b0b      	ldr	r3, [pc, #44]	; (8001aac <digital_clock+0x1430>)
 8001a80:	6819      	ldr	r1, [r3, #0]
 8001a82:	4b08      	ldr	r3, [pc, #32]	; (8001aa4 <digital_clock+0x1428>)
 8001a84:	681a      	ldr	r2, [r3, #0]
 8001a86:	4b08      	ldr	r3, [pc, #32]	; (8001aa8 <digital_clock+0x142c>)
 8001a88:	681c      	ldr	r4, [r3, #0]
 8001a8a:	687b      	ldr	r3, [r7, #4]
 8001a8c:	9300      	str	r3, [sp, #0]
 8001a8e:	0023      	movs	r3, r4
 8001a90:	f000 fb32 	bl	80020f8 <d4_counter>

    	                      a=0;
 8001a94:	4b06      	ldr	r3, [pc, #24]	; (8001ab0 <digital_clock+0x1434>)
 8001a96:	2200      	movs	r2, #0
 8001a98:	601a      	str	r2, [r3, #0]
    	                      b=4;
 8001a9a:	4b04      	ldr	r3, [pc, #16]	; (8001aac <digital_clock+0x1430>)
 8001a9c:	2204      	movs	r2, #4
 8001a9e:	601a      	str	r2, [r3, #0]
 8001aa0:	e008      	b.n	8001ab4 <digital_clock+0x1438>
 8001aa2:	46c0      	nop			; (mov r8, r8)
 8001aa4:	20000008 	.word	0x20000008
 8001aa8:	2000000c 	.word	0x2000000c
 8001aac:	20000004 	.word	0x20000004
 8001ab0:	20000000 	.word	0x20000000
    	                      c=5;
 8001ab4:	4bfe      	ldr	r3, [pc, #1016]	; (8001eb0 <digital_clock+0x1834>)
 8001ab6:	2205      	movs	r2, #5
 8001ab8:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8001aba:	4bfe      	ldr	r3, [pc, #1016]	; (8001eb4 <digital_clock+0x1838>)
 8001abc:	2209      	movs	r2, #9
 8001abe:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8001ac0:	4bfd      	ldr	r3, [pc, #1012]	; (8001eb8 <digital_clock+0x183c>)
 8001ac2:	6818      	ldr	r0, [r3, #0]
 8001ac4:	4bfd      	ldr	r3, [pc, #1012]	; (8001ebc <digital_clock+0x1840>)
 8001ac6:	6819      	ldr	r1, [r3, #0]
 8001ac8:	4bf9      	ldr	r3, [pc, #996]	; (8001eb0 <digital_clock+0x1834>)
 8001aca:	681a      	ldr	r2, [r3, #0]
 8001acc:	4bf9      	ldr	r3, [pc, #996]	; (8001eb4 <digital_clock+0x1838>)
 8001ace:	681c      	ldr	r4, [r3, #0]
 8001ad0:	687b      	ldr	r3, [r7, #4]
 8001ad2:	9300      	str	r3, [sp, #0]
 8001ad4:	0023      	movs	r3, r4
 8001ad6:	f000 fb0f 	bl	80020f8 <d4_counter>

    	                      b=4;
 8001ada:	4bf8      	ldr	r3, [pc, #992]	; (8001ebc <digital_clock+0x1840>)
 8001adc:	2204      	movs	r2, #4
 8001ade:	601a      	str	r2, [r3, #0]
    	                      c=4;
 8001ae0:	4bf3      	ldr	r3, [pc, #972]	; (8001eb0 <digital_clock+0x1834>)
 8001ae2:	2204      	movs	r2, #4
 8001ae4:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8001ae6:	4bf3      	ldr	r3, [pc, #972]	; (8001eb4 <digital_clock+0x1838>)
 8001ae8:	2209      	movs	r2, #9
 8001aea:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8001aec:	4bf2      	ldr	r3, [pc, #968]	; (8001eb8 <digital_clock+0x183c>)
 8001aee:	6818      	ldr	r0, [r3, #0]
 8001af0:	4bf2      	ldr	r3, [pc, #968]	; (8001ebc <digital_clock+0x1840>)
 8001af2:	6819      	ldr	r1, [r3, #0]
 8001af4:	4bee      	ldr	r3, [pc, #952]	; (8001eb0 <digital_clock+0x1834>)
 8001af6:	681a      	ldr	r2, [r3, #0]
 8001af8:	4bee      	ldr	r3, [pc, #952]	; (8001eb4 <digital_clock+0x1838>)
 8001afa:	681c      	ldr	r4, [r3, #0]
 8001afc:	687b      	ldr	r3, [r7, #4]
 8001afe:	9300      	str	r3, [sp, #0]
 8001b00:	0023      	movs	r3, r4
 8001b02:	f000 faf9 	bl	80020f8 <d4_counter>

    	                      b=4;
 8001b06:	4bed      	ldr	r3, [pc, #948]	; (8001ebc <digital_clock+0x1840>)
 8001b08:	2204      	movs	r2, #4
 8001b0a:	601a      	str	r2, [r3, #0]
    	                      c=3;
 8001b0c:	4be8      	ldr	r3, [pc, #928]	; (8001eb0 <digital_clock+0x1834>)
 8001b0e:	2203      	movs	r2, #3
 8001b10:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8001b12:	4be8      	ldr	r3, [pc, #928]	; (8001eb4 <digital_clock+0x1838>)
 8001b14:	2209      	movs	r2, #9
 8001b16:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8001b18:	4be7      	ldr	r3, [pc, #924]	; (8001eb8 <digital_clock+0x183c>)
 8001b1a:	6818      	ldr	r0, [r3, #0]
 8001b1c:	4be7      	ldr	r3, [pc, #924]	; (8001ebc <digital_clock+0x1840>)
 8001b1e:	6819      	ldr	r1, [r3, #0]
 8001b20:	4be3      	ldr	r3, [pc, #908]	; (8001eb0 <digital_clock+0x1834>)
 8001b22:	681a      	ldr	r2, [r3, #0]
 8001b24:	4be3      	ldr	r3, [pc, #908]	; (8001eb4 <digital_clock+0x1838>)
 8001b26:	681c      	ldr	r4, [r3, #0]
 8001b28:	687b      	ldr	r3, [r7, #4]
 8001b2a:	9300      	str	r3, [sp, #0]
 8001b2c:	0023      	movs	r3, r4
 8001b2e:	f000 fae3 	bl	80020f8 <d4_counter>

    	                      b=4;
 8001b32:	4be2      	ldr	r3, [pc, #904]	; (8001ebc <digital_clock+0x1840>)
 8001b34:	2204      	movs	r2, #4
 8001b36:	601a      	str	r2, [r3, #0]
    	                      c=2;
 8001b38:	4bdd      	ldr	r3, [pc, #884]	; (8001eb0 <digital_clock+0x1834>)
 8001b3a:	2202      	movs	r2, #2
 8001b3c:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8001b3e:	4bdd      	ldr	r3, [pc, #884]	; (8001eb4 <digital_clock+0x1838>)
 8001b40:	2209      	movs	r2, #9
 8001b42:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8001b44:	4bdc      	ldr	r3, [pc, #880]	; (8001eb8 <digital_clock+0x183c>)
 8001b46:	6818      	ldr	r0, [r3, #0]
 8001b48:	4bdc      	ldr	r3, [pc, #880]	; (8001ebc <digital_clock+0x1840>)
 8001b4a:	6819      	ldr	r1, [r3, #0]
 8001b4c:	4bd8      	ldr	r3, [pc, #864]	; (8001eb0 <digital_clock+0x1834>)
 8001b4e:	681a      	ldr	r2, [r3, #0]
 8001b50:	4bd8      	ldr	r3, [pc, #864]	; (8001eb4 <digital_clock+0x1838>)
 8001b52:	681c      	ldr	r4, [r3, #0]
 8001b54:	687b      	ldr	r3, [r7, #4]
 8001b56:	9300      	str	r3, [sp, #0]
 8001b58:	0023      	movs	r3, r4
 8001b5a:	f000 facd 	bl	80020f8 <d4_counter>

    	                      b=4;
 8001b5e:	4bd7      	ldr	r3, [pc, #860]	; (8001ebc <digital_clock+0x1840>)
 8001b60:	2204      	movs	r2, #4
 8001b62:	601a      	str	r2, [r3, #0]
    	                      c=1;
 8001b64:	4bd2      	ldr	r3, [pc, #840]	; (8001eb0 <digital_clock+0x1834>)
 8001b66:	2201      	movs	r2, #1
 8001b68:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8001b6a:	4bd2      	ldr	r3, [pc, #840]	; (8001eb4 <digital_clock+0x1838>)
 8001b6c:	2209      	movs	r2, #9
 8001b6e:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8001b70:	4bd1      	ldr	r3, [pc, #836]	; (8001eb8 <digital_clock+0x183c>)
 8001b72:	6818      	ldr	r0, [r3, #0]
 8001b74:	4bd1      	ldr	r3, [pc, #836]	; (8001ebc <digital_clock+0x1840>)
 8001b76:	6819      	ldr	r1, [r3, #0]
 8001b78:	4bcd      	ldr	r3, [pc, #820]	; (8001eb0 <digital_clock+0x1834>)
 8001b7a:	681a      	ldr	r2, [r3, #0]
 8001b7c:	4bcd      	ldr	r3, [pc, #820]	; (8001eb4 <digital_clock+0x1838>)
 8001b7e:	681c      	ldr	r4, [r3, #0]
 8001b80:	687b      	ldr	r3, [r7, #4]
 8001b82:	9300      	str	r3, [sp, #0]
 8001b84:	0023      	movs	r3, r4
 8001b86:	f000 fab7 	bl	80020f8 <d4_counter>

    	                      b=4;
 8001b8a:	4bcc      	ldr	r3, [pc, #816]	; (8001ebc <digital_clock+0x1840>)
 8001b8c:	2204      	movs	r2, #4
 8001b8e:	601a      	str	r2, [r3, #0]
    	                      c=0;
 8001b90:	4bc7      	ldr	r3, [pc, #796]	; (8001eb0 <digital_clock+0x1834>)
 8001b92:	2200      	movs	r2, #0
 8001b94:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8001b96:	4bc7      	ldr	r3, [pc, #796]	; (8001eb4 <digital_clock+0x1838>)
 8001b98:	2209      	movs	r2, #9
 8001b9a:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8001b9c:	4bc6      	ldr	r3, [pc, #792]	; (8001eb8 <digital_clock+0x183c>)
 8001b9e:	6818      	ldr	r0, [r3, #0]
 8001ba0:	4bc6      	ldr	r3, [pc, #792]	; (8001ebc <digital_clock+0x1840>)
 8001ba2:	6819      	ldr	r1, [r3, #0]
 8001ba4:	4bc2      	ldr	r3, [pc, #776]	; (8001eb0 <digital_clock+0x1834>)
 8001ba6:	681a      	ldr	r2, [r3, #0]
 8001ba8:	4bc2      	ldr	r3, [pc, #776]	; (8001eb4 <digital_clock+0x1838>)
 8001baa:	681c      	ldr	r4, [r3, #0]
 8001bac:	687b      	ldr	r3, [r7, #4]
 8001bae:	9300      	str	r3, [sp, #0]
 8001bb0:	0023      	movs	r3, r4
 8001bb2:	f000 faa1 	bl	80020f8 <d4_counter>

    	                      a=0;
 8001bb6:	4bc0      	ldr	r3, [pc, #768]	; (8001eb8 <digital_clock+0x183c>)
 8001bb8:	2200      	movs	r2, #0
 8001bba:	601a      	str	r2, [r3, #0]
    	                      b=3;
 8001bbc:	4bbf      	ldr	r3, [pc, #764]	; (8001ebc <digital_clock+0x1840>)
 8001bbe:	2203      	movs	r2, #3
 8001bc0:	601a      	str	r2, [r3, #0]
    	                      c=5;
 8001bc2:	4bbb      	ldr	r3, [pc, #748]	; (8001eb0 <digital_clock+0x1834>)
 8001bc4:	2205      	movs	r2, #5
 8001bc6:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8001bc8:	4bba      	ldr	r3, [pc, #744]	; (8001eb4 <digital_clock+0x1838>)
 8001bca:	2209      	movs	r2, #9
 8001bcc:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8001bce:	4bba      	ldr	r3, [pc, #744]	; (8001eb8 <digital_clock+0x183c>)
 8001bd0:	6818      	ldr	r0, [r3, #0]
 8001bd2:	4bba      	ldr	r3, [pc, #744]	; (8001ebc <digital_clock+0x1840>)
 8001bd4:	6819      	ldr	r1, [r3, #0]
 8001bd6:	4bb6      	ldr	r3, [pc, #728]	; (8001eb0 <digital_clock+0x1834>)
 8001bd8:	681a      	ldr	r2, [r3, #0]
 8001bda:	4bb6      	ldr	r3, [pc, #728]	; (8001eb4 <digital_clock+0x1838>)
 8001bdc:	681c      	ldr	r4, [r3, #0]
 8001bde:	687b      	ldr	r3, [r7, #4]
 8001be0:	9300      	str	r3, [sp, #0]
 8001be2:	0023      	movs	r3, r4
 8001be4:	f000 fa88 	bl	80020f8 <d4_counter>

    	                      b=3;
 8001be8:	4bb4      	ldr	r3, [pc, #720]	; (8001ebc <digital_clock+0x1840>)
 8001bea:	2203      	movs	r2, #3
 8001bec:	601a      	str	r2, [r3, #0]
    	                      c=4;
 8001bee:	4bb0      	ldr	r3, [pc, #704]	; (8001eb0 <digital_clock+0x1834>)
 8001bf0:	2204      	movs	r2, #4
 8001bf2:	601a      	str	r2, [r3, #0]
    	                      d=9;
 8001bf4:	4baf      	ldr	r3, [pc, #700]	; (8001eb4 <digital_clock+0x1838>)
 8001bf6:	2209      	movs	r2, #9
 8001bf8:	601a      	str	r2, [r3, #0]
    	                      d4_counter(a,b,c,d,f);
 8001bfa:	4baf      	ldr	r3, [pc, #700]	; (8001eb8 <digital_clock+0x183c>)
 8001bfc:	6818      	ldr	r0, [r3, #0]
 8001bfe:	4baf      	ldr	r3, [pc, #700]	; (8001ebc <digital_clock+0x1840>)
 8001c00:	6819      	ldr	r1, [r3, #0]
 8001c02:	4bab      	ldr	r3, [pc, #684]	; (8001eb0 <digital_clock+0x1834>)
 8001c04:	681a      	ldr	r2, [r3, #0]
 8001c06:	4bab      	ldr	r3, [pc, #684]	; (8001eb4 <digital_clock+0x1838>)
 8001c08:	681c      	ldr	r4, [r3, #0]
 8001c0a:	687b      	ldr	r3, [r7, #4]
 8001c0c:	9300      	str	r3, [sp, #0]
 8001c0e:	0023      	movs	r3, r4
 8001c10:	f000 fa72 	bl	80020f8 <d4_counter>


                       b=3;
 8001c14:	4ba9      	ldr	r3, [pc, #676]	; (8001ebc <digital_clock+0x1840>)
 8001c16:	2203      	movs	r2, #3
 8001c18:	601a      	str	r2, [r3, #0]
                       c=3;
 8001c1a:	4ba5      	ldr	r3, [pc, #660]	; (8001eb0 <digital_clock+0x1834>)
 8001c1c:	2203      	movs	r2, #3
 8001c1e:	601a      	str	r2, [r3, #0]
                       d=9;
 8001c20:	4ba4      	ldr	r3, [pc, #656]	; (8001eb4 <digital_clock+0x1838>)
 8001c22:	2209      	movs	r2, #9
 8001c24:	601a      	str	r2, [r3, #0]
                       d4_counter(a,b,c,d,f);
 8001c26:	4ba4      	ldr	r3, [pc, #656]	; (8001eb8 <digital_clock+0x183c>)
 8001c28:	6818      	ldr	r0, [r3, #0]
 8001c2a:	4ba4      	ldr	r3, [pc, #656]	; (8001ebc <digital_clock+0x1840>)
 8001c2c:	6819      	ldr	r1, [r3, #0]
 8001c2e:	4ba0      	ldr	r3, [pc, #640]	; (8001eb0 <digital_clock+0x1834>)
 8001c30:	681a      	ldr	r2, [r3, #0]
 8001c32:	4ba0      	ldr	r3, [pc, #640]	; (8001eb4 <digital_clock+0x1838>)
 8001c34:	681c      	ldr	r4, [r3, #0]
 8001c36:	687b      	ldr	r3, [r7, #4]
 8001c38:	9300      	str	r3, [sp, #0]
 8001c3a:	0023      	movs	r3, r4
 8001c3c:	f000 fa5c 	bl	80020f8 <d4_counter>

                       b=3;
 8001c40:	4b9e      	ldr	r3, [pc, #632]	; (8001ebc <digital_clock+0x1840>)
 8001c42:	2203      	movs	r2, #3
 8001c44:	601a      	str	r2, [r3, #0]
                       c=2;
 8001c46:	4b9a      	ldr	r3, [pc, #616]	; (8001eb0 <digital_clock+0x1834>)
 8001c48:	2202      	movs	r2, #2
 8001c4a:	601a      	str	r2, [r3, #0]
                       d=9;
 8001c4c:	4b99      	ldr	r3, [pc, #612]	; (8001eb4 <digital_clock+0x1838>)
 8001c4e:	2209      	movs	r2, #9
 8001c50:	601a      	str	r2, [r3, #0]
                       d4_counter(a,b,c,d,f);
 8001c52:	4b99      	ldr	r3, [pc, #612]	; (8001eb8 <digital_clock+0x183c>)
 8001c54:	6818      	ldr	r0, [r3, #0]
 8001c56:	4b99      	ldr	r3, [pc, #612]	; (8001ebc <digital_clock+0x1840>)
 8001c58:	6819      	ldr	r1, [r3, #0]
 8001c5a:	4b95      	ldr	r3, [pc, #596]	; (8001eb0 <digital_clock+0x1834>)
 8001c5c:	681a      	ldr	r2, [r3, #0]
 8001c5e:	4b95      	ldr	r3, [pc, #596]	; (8001eb4 <digital_clock+0x1838>)
 8001c60:	681c      	ldr	r4, [r3, #0]
 8001c62:	687b      	ldr	r3, [r7, #4]
 8001c64:	9300      	str	r3, [sp, #0]
 8001c66:	0023      	movs	r3, r4
 8001c68:	f000 fa46 	bl	80020f8 <d4_counter>

                       b=3;
 8001c6c:	4b93      	ldr	r3, [pc, #588]	; (8001ebc <digital_clock+0x1840>)
 8001c6e:	2203      	movs	r2, #3
 8001c70:	601a      	str	r2, [r3, #0]
                       c=1;
 8001c72:	4b8f      	ldr	r3, [pc, #572]	; (8001eb0 <digital_clock+0x1834>)
 8001c74:	2201      	movs	r2, #1
 8001c76:	601a      	str	r2, [r3, #0]
                       d=9;
 8001c78:	4b8e      	ldr	r3, [pc, #568]	; (8001eb4 <digital_clock+0x1838>)
 8001c7a:	2209      	movs	r2, #9
 8001c7c:	601a      	str	r2, [r3, #0]
                       d4_counter(a,b,c,d,f);
 8001c7e:	4b8e      	ldr	r3, [pc, #568]	; (8001eb8 <digital_clock+0x183c>)
 8001c80:	6818      	ldr	r0, [r3, #0]
 8001c82:	4b8e      	ldr	r3, [pc, #568]	; (8001ebc <digital_clock+0x1840>)
 8001c84:	6819      	ldr	r1, [r3, #0]
 8001c86:	4b8a      	ldr	r3, [pc, #552]	; (8001eb0 <digital_clock+0x1834>)
 8001c88:	681a      	ldr	r2, [r3, #0]
 8001c8a:	4b8a      	ldr	r3, [pc, #552]	; (8001eb4 <digital_clock+0x1838>)
 8001c8c:	681c      	ldr	r4, [r3, #0]
 8001c8e:	687b      	ldr	r3, [r7, #4]
 8001c90:	9300      	str	r3, [sp, #0]
 8001c92:	0023      	movs	r3, r4
 8001c94:	f000 fa30 	bl	80020f8 <d4_counter>

                       b=3;
 8001c98:	4b88      	ldr	r3, [pc, #544]	; (8001ebc <digital_clock+0x1840>)
 8001c9a:	2203      	movs	r2, #3
 8001c9c:	601a      	str	r2, [r3, #0]
                       c=0;
 8001c9e:	4b84      	ldr	r3, [pc, #528]	; (8001eb0 <digital_clock+0x1834>)
 8001ca0:	2200      	movs	r2, #0
 8001ca2:	601a      	str	r2, [r3, #0]
                       d=9;
 8001ca4:	4b83      	ldr	r3, [pc, #524]	; (8001eb4 <digital_clock+0x1838>)
 8001ca6:	2209      	movs	r2, #9
 8001ca8:	601a      	str	r2, [r3, #0]
                       d4_counter(a,b,c,d,f);
 8001caa:	4b83      	ldr	r3, [pc, #524]	; (8001eb8 <digital_clock+0x183c>)
 8001cac:	6818      	ldr	r0, [r3, #0]
 8001cae:	4b83      	ldr	r3, [pc, #524]	; (8001ebc <digital_clock+0x1840>)
 8001cb0:	6819      	ldr	r1, [r3, #0]
 8001cb2:	4b7f      	ldr	r3, [pc, #508]	; (8001eb0 <digital_clock+0x1834>)
 8001cb4:	681a      	ldr	r2, [r3, #0]
 8001cb6:	4b7f      	ldr	r3, [pc, #508]	; (8001eb4 <digital_clock+0x1838>)
 8001cb8:	681c      	ldr	r4, [r3, #0]
 8001cba:	687b      	ldr	r3, [r7, #4]
 8001cbc:	9300      	str	r3, [sp, #0]
 8001cbe:	0023      	movs	r3, r4
 8001cc0:	f000 fa1a 	bl	80020f8 <d4_counter>


                       a=0;
 8001cc4:	4b7c      	ldr	r3, [pc, #496]	; (8001eb8 <digital_clock+0x183c>)
 8001cc6:	2200      	movs	r2, #0
 8001cc8:	601a      	str	r2, [r3, #0]
                       b=2;
 8001cca:	4b7c      	ldr	r3, [pc, #496]	; (8001ebc <digital_clock+0x1840>)
 8001ccc:	2202      	movs	r2, #2
 8001cce:	601a      	str	r2, [r3, #0]
                       c=5;
 8001cd0:	4b77      	ldr	r3, [pc, #476]	; (8001eb0 <digital_clock+0x1834>)
 8001cd2:	2205      	movs	r2, #5
 8001cd4:	601a      	str	r2, [r3, #0]
                       d=9;
 8001cd6:	4b77      	ldr	r3, [pc, #476]	; (8001eb4 <digital_clock+0x1838>)
 8001cd8:	2209      	movs	r2, #9
 8001cda:	601a      	str	r2, [r3, #0]
                       d4_counter(a,b,c,d,f);
 8001cdc:	4b76      	ldr	r3, [pc, #472]	; (8001eb8 <digital_clock+0x183c>)
 8001cde:	6818      	ldr	r0, [r3, #0]
 8001ce0:	4b76      	ldr	r3, [pc, #472]	; (8001ebc <digital_clock+0x1840>)
 8001ce2:	6819      	ldr	r1, [r3, #0]
 8001ce4:	4b72      	ldr	r3, [pc, #456]	; (8001eb0 <digital_clock+0x1834>)
 8001ce6:	681a      	ldr	r2, [r3, #0]
 8001ce8:	4b72      	ldr	r3, [pc, #456]	; (8001eb4 <digital_clock+0x1838>)
 8001cea:	681c      	ldr	r4, [r3, #0]
 8001cec:	687b      	ldr	r3, [r7, #4]
 8001cee:	9300      	str	r3, [sp, #0]
 8001cf0:	0023      	movs	r3, r4
 8001cf2:	f000 fa01 	bl	80020f8 <d4_counter>

                       b=2;
 8001cf6:	4b71      	ldr	r3, [pc, #452]	; (8001ebc <digital_clock+0x1840>)
 8001cf8:	2202      	movs	r2, #2
 8001cfa:	601a      	str	r2, [r3, #0]
                       c=4;
 8001cfc:	4b6c      	ldr	r3, [pc, #432]	; (8001eb0 <digital_clock+0x1834>)
 8001cfe:	2204      	movs	r2, #4
 8001d00:	601a      	str	r2, [r3, #0]
                       d=9;
 8001d02:	4b6c      	ldr	r3, [pc, #432]	; (8001eb4 <digital_clock+0x1838>)
 8001d04:	2209      	movs	r2, #9
 8001d06:	601a      	str	r2, [r3, #0]
                       d4_counter(a,b,c,d,f);
 8001d08:	4b6b      	ldr	r3, [pc, #428]	; (8001eb8 <digital_clock+0x183c>)
 8001d0a:	6818      	ldr	r0, [r3, #0]
 8001d0c:	4b6b      	ldr	r3, [pc, #428]	; (8001ebc <digital_clock+0x1840>)
 8001d0e:	6819      	ldr	r1, [r3, #0]
 8001d10:	4b67      	ldr	r3, [pc, #412]	; (8001eb0 <digital_clock+0x1834>)
 8001d12:	681a      	ldr	r2, [r3, #0]
 8001d14:	4b67      	ldr	r3, [pc, #412]	; (8001eb4 <digital_clock+0x1838>)
 8001d16:	681c      	ldr	r4, [r3, #0]
 8001d18:	687b      	ldr	r3, [r7, #4]
 8001d1a:	9300      	str	r3, [sp, #0]
 8001d1c:	0023      	movs	r3, r4
 8001d1e:	f000 f9eb 	bl	80020f8 <d4_counter>

                       b=2;
 8001d22:	4b66      	ldr	r3, [pc, #408]	; (8001ebc <digital_clock+0x1840>)
 8001d24:	2202      	movs	r2, #2
 8001d26:	601a      	str	r2, [r3, #0]
                       c=3;
 8001d28:	4b61      	ldr	r3, [pc, #388]	; (8001eb0 <digital_clock+0x1834>)
 8001d2a:	2203      	movs	r2, #3
 8001d2c:	601a      	str	r2, [r3, #0]
                       d=9;
 8001d2e:	4b61      	ldr	r3, [pc, #388]	; (8001eb4 <digital_clock+0x1838>)
 8001d30:	2209      	movs	r2, #9
 8001d32:	601a      	str	r2, [r3, #0]
                       d4_counter(a,b,c,d,f);
 8001d34:	4b60      	ldr	r3, [pc, #384]	; (8001eb8 <digital_clock+0x183c>)
 8001d36:	6818      	ldr	r0, [r3, #0]
 8001d38:	4b60      	ldr	r3, [pc, #384]	; (8001ebc <digital_clock+0x1840>)
 8001d3a:	6819      	ldr	r1, [r3, #0]
 8001d3c:	4b5c      	ldr	r3, [pc, #368]	; (8001eb0 <digital_clock+0x1834>)
 8001d3e:	681a      	ldr	r2, [r3, #0]
 8001d40:	4b5c      	ldr	r3, [pc, #368]	; (8001eb4 <digital_clock+0x1838>)
 8001d42:	681c      	ldr	r4, [r3, #0]
 8001d44:	687b      	ldr	r3, [r7, #4]
 8001d46:	9300      	str	r3, [sp, #0]
 8001d48:	0023      	movs	r3, r4
 8001d4a:	f000 f9d5 	bl	80020f8 <d4_counter>

                       b=2;
 8001d4e:	4b5b      	ldr	r3, [pc, #364]	; (8001ebc <digital_clock+0x1840>)
 8001d50:	2202      	movs	r2, #2
 8001d52:	601a      	str	r2, [r3, #0]
                       c=2;
 8001d54:	4b56      	ldr	r3, [pc, #344]	; (8001eb0 <digital_clock+0x1834>)
 8001d56:	2202      	movs	r2, #2
 8001d58:	601a      	str	r2, [r3, #0]
                       d=9;
 8001d5a:	4b56      	ldr	r3, [pc, #344]	; (8001eb4 <digital_clock+0x1838>)
 8001d5c:	2209      	movs	r2, #9
 8001d5e:	601a      	str	r2, [r3, #0]
                       d4_counter(a,b,c,d,f);
 8001d60:	4b55      	ldr	r3, [pc, #340]	; (8001eb8 <digital_clock+0x183c>)
 8001d62:	6818      	ldr	r0, [r3, #0]
 8001d64:	4b55      	ldr	r3, [pc, #340]	; (8001ebc <digital_clock+0x1840>)
 8001d66:	6819      	ldr	r1, [r3, #0]
 8001d68:	4b51      	ldr	r3, [pc, #324]	; (8001eb0 <digital_clock+0x1834>)
 8001d6a:	681a      	ldr	r2, [r3, #0]
 8001d6c:	4b51      	ldr	r3, [pc, #324]	; (8001eb4 <digital_clock+0x1838>)
 8001d6e:	681c      	ldr	r4, [r3, #0]
 8001d70:	687b      	ldr	r3, [r7, #4]
 8001d72:	9300      	str	r3, [sp, #0]
 8001d74:	0023      	movs	r3, r4
 8001d76:	f000 f9bf 	bl	80020f8 <d4_counter>

                       b=2;
 8001d7a:	4b50      	ldr	r3, [pc, #320]	; (8001ebc <digital_clock+0x1840>)
 8001d7c:	2202      	movs	r2, #2
 8001d7e:	601a      	str	r2, [r3, #0]
                       c=1;
 8001d80:	4b4b      	ldr	r3, [pc, #300]	; (8001eb0 <digital_clock+0x1834>)
 8001d82:	2201      	movs	r2, #1
 8001d84:	601a      	str	r2, [r3, #0]
                       d=9;
 8001d86:	4b4b      	ldr	r3, [pc, #300]	; (8001eb4 <digital_clock+0x1838>)
 8001d88:	2209      	movs	r2, #9
 8001d8a:	601a      	str	r2, [r3, #0]
                       d4_counter(a,b,c,d,f);
 8001d8c:	4b4a      	ldr	r3, [pc, #296]	; (8001eb8 <digital_clock+0x183c>)
 8001d8e:	6818      	ldr	r0, [r3, #0]
 8001d90:	4b4a      	ldr	r3, [pc, #296]	; (8001ebc <digital_clock+0x1840>)
 8001d92:	6819      	ldr	r1, [r3, #0]
 8001d94:	4b46      	ldr	r3, [pc, #280]	; (8001eb0 <digital_clock+0x1834>)
 8001d96:	681a      	ldr	r2, [r3, #0]
 8001d98:	4b46      	ldr	r3, [pc, #280]	; (8001eb4 <digital_clock+0x1838>)
 8001d9a:	681c      	ldr	r4, [r3, #0]
 8001d9c:	687b      	ldr	r3, [r7, #4]
 8001d9e:	9300      	str	r3, [sp, #0]
 8001da0:	0023      	movs	r3, r4
 8001da2:	f000 f9a9 	bl	80020f8 <d4_counter>

                       b=2;
 8001da6:	4b45      	ldr	r3, [pc, #276]	; (8001ebc <digital_clock+0x1840>)
 8001da8:	2202      	movs	r2, #2
 8001daa:	601a      	str	r2, [r3, #0]
                       c=0;
 8001dac:	4b40      	ldr	r3, [pc, #256]	; (8001eb0 <digital_clock+0x1834>)
 8001dae:	2200      	movs	r2, #0
 8001db0:	601a      	str	r2, [r3, #0]
                       d=9;
 8001db2:	4b40      	ldr	r3, [pc, #256]	; (8001eb4 <digital_clock+0x1838>)
 8001db4:	2209      	movs	r2, #9
 8001db6:	601a      	str	r2, [r3, #0]
                       d4_counter(a,b,c,d,f);
 8001db8:	4b3f      	ldr	r3, [pc, #252]	; (8001eb8 <digital_clock+0x183c>)
 8001dba:	6818      	ldr	r0, [r3, #0]
 8001dbc:	4b3f      	ldr	r3, [pc, #252]	; (8001ebc <digital_clock+0x1840>)
 8001dbe:	6819      	ldr	r1, [r3, #0]
 8001dc0:	4b3b      	ldr	r3, [pc, #236]	; (8001eb0 <digital_clock+0x1834>)
 8001dc2:	681a      	ldr	r2, [r3, #0]
 8001dc4:	4b3b      	ldr	r3, [pc, #236]	; (8001eb4 <digital_clock+0x1838>)
 8001dc6:	681c      	ldr	r4, [r3, #0]
 8001dc8:	687b      	ldr	r3, [r7, #4]
 8001dca:	9300      	str	r3, [sp, #0]
 8001dcc:	0023      	movs	r3, r4
 8001dce:	f000 f993 	bl	80020f8 <d4_counter>

                       a=0;
 8001dd2:	4b39      	ldr	r3, [pc, #228]	; (8001eb8 <digital_clock+0x183c>)
 8001dd4:	2200      	movs	r2, #0
 8001dd6:	601a      	str	r2, [r3, #0]
                       b=1;
 8001dd8:	4b38      	ldr	r3, [pc, #224]	; (8001ebc <digital_clock+0x1840>)
 8001dda:	2201      	movs	r2, #1
 8001ddc:	601a      	str	r2, [r3, #0]
                       c=5;
 8001dde:	4b34      	ldr	r3, [pc, #208]	; (8001eb0 <digital_clock+0x1834>)
 8001de0:	2205      	movs	r2, #5
 8001de2:	601a      	str	r2, [r3, #0]
                       d=9;
 8001de4:	4b33      	ldr	r3, [pc, #204]	; (8001eb4 <digital_clock+0x1838>)
 8001de6:	2209      	movs	r2, #9
 8001de8:	601a      	str	r2, [r3, #0]
                       d4_counter(a,b,c,d,f);
 8001dea:	4b33      	ldr	r3, [pc, #204]	; (8001eb8 <digital_clock+0x183c>)
 8001dec:	6818      	ldr	r0, [r3, #0]
 8001dee:	4b33      	ldr	r3, [pc, #204]	; (8001ebc <digital_clock+0x1840>)
 8001df0:	6819      	ldr	r1, [r3, #0]
 8001df2:	4b2f      	ldr	r3, [pc, #188]	; (8001eb0 <digital_clock+0x1834>)
 8001df4:	681a      	ldr	r2, [r3, #0]
 8001df6:	4b2f      	ldr	r3, [pc, #188]	; (8001eb4 <digital_clock+0x1838>)
 8001df8:	681c      	ldr	r4, [r3, #0]
 8001dfa:	687b      	ldr	r3, [r7, #4]
 8001dfc:	9300      	str	r3, [sp, #0]
 8001dfe:	0023      	movs	r3, r4
 8001e00:	f000 f97a 	bl	80020f8 <d4_counter>

                       b=1;
 8001e04:	4b2d      	ldr	r3, [pc, #180]	; (8001ebc <digital_clock+0x1840>)
 8001e06:	2201      	movs	r2, #1
 8001e08:	601a      	str	r2, [r3, #0]
                       c=4;
 8001e0a:	4b29      	ldr	r3, [pc, #164]	; (8001eb0 <digital_clock+0x1834>)
 8001e0c:	2204      	movs	r2, #4
 8001e0e:	601a      	str	r2, [r3, #0]
                       d=9;
 8001e10:	4b28      	ldr	r3, [pc, #160]	; (8001eb4 <digital_clock+0x1838>)
 8001e12:	2209      	movs	r2, #9
 8001e14:	601a      	str	r2, [r3, #0]
                       d4_counter(a,b,c,d,f);
 8001e16:	4b28      	ldr	r3, [pc, #160]	; (8001eb8 <digital_clock+0x183c>)
 8001e18:	6818      	ldr	r0, [r3, #0]
 8001e1a:	4b28      	ldr	r3, [pc, #160]	; (8001ebc <digital_clock+0x1840>)
 8001e1c:	6819      	ldr	r1, [r3, #0]
 8001e1e:	4b24      	ldr	r3, [pc, #144]	; (8001eb0 <digital_clock+0x1834>)
 8001e20:	681a      	ldr	r2, [r3, #0]
 8001e22:	4b24      	ldr	r3, [pc, #144]	; (8001eb4 <digital_clock+0x1838>)
 8001e24:	681c      	ldr	r4, [r3, #0]
 8001e26:	687b      	ldr	r3, [r7, #4]
 8001e28:	9300      	str	r3, [sp, #0]
 8001e2a:	0023      	movs	r3, r4
 8001e2c:	f000 f964 	bl	80020f8 <d4_counter>

                       b=1;
 8001e30:	4b22      	ldr	r3, [pc, #136]	; (8001ebc <digital_clock+0x1840>)
 8001e32:	2201      	movs	r2, #1
 8001e34:	601a      	str	r2, [r3, #0]
                       c=3;
 8001e36:	4b1e      	ldr	r3, [pc, #120]	; (8001eb0 <digital_clock+0x1834>)
 8001e38:	2203      	movs	r2, #3
 8001e3a:	601a      	str	r2, [r3, #0]
                       d=9;
 8001e3c:	4b1d      	ldr	r3, [pc, #116]	; (8001eb4 <digital_clock+0x1838>)
 8001e3e:	2209      	movs	r2, #9
 8001e40:	601a      	str	r2, [r3, #0]
                       d4_counter(a,b,c,d,f);
 8001e42:	4b1d      	ldr	r3, [pc, #116]	; (8001eb8 <digital_clock+0x183c>)
 8001e44:	6818      	ldr	r0, [r3, #0]
 8001e46:	4b1d      	ldr	r3, [pc, #116]	; (8001ebc <digital_clock+0x1840>)
 8001e48:	6819      	ldr	r1, [r3, #0]
 8001e4a:	4b19      	ldr	r3, [pc, #100]	; (8001eb0 <digital_clock+0x1834>)
 8001e4c:	681a      	ldr	r2, [r3, #0]
 8001e4e:	4b19      	ldr	r3, [pc, #100]	; (8001eb4 <digital_clock+0x1838>)
 8001e50:	681c      	ldr	r4, [r3, #0]
 8001e52:	687b      	ldr	r3, [r7, #4]
 8001e54:	9300      	str	r3, [sp, #0]
 8001e56:	0023      	movs	r3, r4
 8001e58:	f000 f94e 	bl	80020f8 <d4_counter>

                       b=1;
 8001e5c:	4b17      	ldr	r3, [pc, #92]	; (8001ebc <digital_clock+0x1840>)
 8001e5e:	2201      	movs	r2, #1
 8001e60:	601a      	str	r2, [r3, #0]
                       c=2;
 8001e62:	4b13      	ldr	r3, [pc, #76]	; (8001eb0 <digital_clock+0x1834>)
 8001e64:	2202      	movs	r2, #2
 8001e66:	601a      	str	r2, [r3, #0]
                       d=9;
 8001e68:	4b12      	ldr	r3, [pc, #72]	; (8001eb4 <digital_clock+0x1838>)
 8001e6a:	2209      	movs	r2, #9
 8001e6c:	601a      	str	r2, [r3, #0]
                       d4_counter(a,b,c,d,f);
 8001e6e:	4b12      	ldr	r3, [pc, #72]	; (8001eb8 <digital_clock+0x183c>)
 8001e70:	6818      	ldr	r0, [r3, #0]
 8001e72:	4b12      	ldr	r3, [pc, #72]	; (8001ebc <digital_clock+0x1840>)
 8001e74:	6819      	ldr	r1, [r3, #0]
 8001e76:	4b0e      	ldr	r3, [pc, #56]	; (8001eb0 <digital_clock+0x1834>)
 8001e78:	681a      	ldr	r2, [r3, #0]
 8001e7a:	4b0e      	ldr	r3, [pc, #56]	; (8001eb4 <digital_clock+0x1838>)
 8001e7c:	681c      	ldr	r4, [r3, #0]
 8001e7e:	687b      	ldr	r3, [r7, #4]
 8001e80:	9300      	str	r3, [sp, #0]
 8001e82:	0023      	movs	r3, r4
 8001e84:	f000 f938 	bl	80020f8 <d4_counter>

                       b=1;
 8001e88:	4b0c      	ldr	r3, [pc, #48]	; (8001ebc <digital_clock+0x1840>)
 8001e8a:	2201      	movs	r2, #1
 8001e8c:	601a      	str	r2, [r3, #0]
                       c=1;
 8001e8e:	4b08      	ldr	r3, [pc, #32]	; (8001eb0 <digital_clock+0x1834>)
 8001e90:	2201      	movs	r2, #1
 8001e92:	601a      	str	r2, [r3, #0]
                       d=9;
 8001e94:	4b07      	ldr	r3, [pc, #28]	; (8001eb4 <digital_clock+0x1838>)
 8001e96:	2209      	movs	r2, #9
 8001e98:	601a      	str	r2, [r3, #0]
                       d4_counter(a,b,c,d,f);
 8001e9a:	4b07      	ldr	r3, [pc, #28]	; (8001eb8 <digital_clock+0x183c>)
 8001e9c:	6818      	ldr	r0, [r3, #0]
 8001e9e:	4b07      	ldr	r3, [pc, #28]	; (8001ebc <digital_clock+0x1840>)
 8001ea0:	6819      	ldr	r1, [r3, #0]
 8001ea2:	4b03      	ldr	r3, [pc, #12]	; (8001eb0 <digital_clock+0x1834>)
 8001ea4:	681a      	ldr	r2, [r3, #0]
 8001ea6:	4b03      	ldr	r3, [pc, #12]	; (8001eb4 <digital_clock+0x1838>)
 8001ea8:	681c      	ldr	r4, [r3, #0]
 8001eaa:	687b      	ldr	r3, [r7, #4]
 8001eac:	e008      	b.n	8001ec0 <digital_clock+0x1844>
 8001eae:	46c0      	nop			; (mov r8, r8)
 8001eb0:	20000008 	.word	0x20000008
 8001eb4:	2000000c 	.word	0x2000000c
 8001eb8:	20000000 	.word	0x20000000
 8001ebc:	20000004 	.word	0x20000004
 8001ec0:	9300      	str	r3, [sp, #0]
 8001ec2:	0023      	movs	r3, r4
 8001ec4:	f000 f918 	bl	80020f8 <d4_counter>

                       b=1;
 8001ec8:	4b58      	ldr	r3, [pc, #352]	; (800202c <digital_clock+0x19b0>)
 8001eca:	2201      	movs	r2, #1
 8001ecc:	601a      	str	r2, [r3, #0]
                       c=0;
 8001ece:	4b58      	ldr	r3, [pc, #352]	; (8002030 <digital_clock+0x19b4>)
 8001ed0:	2200      	movs	r2, #0
 8001ed2:	601a      	str	r2, [r3, #0]
                       d=9;
 8001ed4:	4b57      	ldr	r3, [pc, #348]	; (8002034 <digital_clock+0x19b8>)
 8001ed6:	2209      	movs	r2, #9
 8001ed8:	601a      	str	r2, [r3, #0]
                       d4_counter(a,b,c,d,f);
 8001eda:	4b57      	ldr	r3, [pc, #348]	; (8002038 <digital_clock+0x19bc>)
 8001edc:	6818      	ldr	r0, [r3, #0]
 8001ede:	4b53      	ldr	r3, [pc, #332]	; (800202c <digital_clock+0x19b0>)
 8001ee0:	6819      	ldr	r1, [r3, #0]
 8001ee2:	4b53      	ldr	r3, [pc, #332]	; (8002030 <digital_clock+0x19b4>)
 8001ee4:	681a      	ldr	r2, [r3, #0]
 8001ee6:	4b53      	ldr	r3, [pc, #332]	; (8002034 <digital_clock+0x19b8>)
 8001ee8:	681c      	ldr	r4, [r3, #0]
 8001eea:	687b      	ldr	r3, [r7, #4]
 8001eec:	9300      	str	r3, [sp, #0]
 8001eee:	0023      	movs	r3, r4
 8001ef0:	f000 f902 	bl	80020f8 <d4_counter>

                       a=0;
 8001ef4:	4b50      	ldr	r3, [pc, #320]	; (8002038 <digital_clock+0x19bc>)
 8001ef6:	2200      	movs	r2, #0
 8001ef8:	601a      	str	r2, [r3, #0]
                       b=0;
 8001efa:	4b4c      	ldr	r3, [pc, #304]	; (800202c <digital_clock+0x19b0>)
 8001efc:	2200      	movs	r2, #0
 8001efe:	601a      	str	r2, [r3, #0]
                       c=5;
 8001f00:	4b4b      	ldr	r3, [pc, #300]	; (8002030 <digital_clock+0x19b4>)
 8001f02:	2205      	movs	r2, #5
 8001f04:	601a      	str	r2, [r3, #0]
                       d=9;
 8001f06:	4b4b      	ldr	r3, [pc, #300]	; (8002034 <digital_clock+0x19b8>)
 8001f08:	2209      	movs	r2, #9
 8001f0a:	601a      	str	r2, [r3, #0]
                       d4_counter(a,b,c,d,f);
 8001f0c:	4b4a      	ldr	r3, [pc, #296]	; (8002038 <digital_clock+0x19bc>)
 8001f0e:	6818      	ldr	r0, [r3, #0]
 8001f10:	4b46      	ldr	r3, [pc, #280]	; (800202c <digital_clock+0x19b0>)
 8001f12:	6819      	ldr	r1, [r3, #0]
 8001f14:	4b46      	ldr	r3, [pc, #280]	; (8002030 <digital_clock+0x19b4>)
 8001f16:	681a      	ldr	r2, [r3, #0]
 8001f18:	4b46      	ldr	r3, [pc, #280]	; (8002034 <digital_clock+0x19b8>)
 8001f1a:	681c      	ldr	r4, [r3, #0]
 8001f1c:	687b      	ldr	r3, [r7, #4]
 8001f1e:	9300      	str	r3, [sp, #0]
 8001f20:	0023      	movs	r3, r4
 8001f22:	f000 f8e9 	bl	80020f8 <d4_counter>

                       b=0;
 8001f26:	4b41      	ldr	r3, [pc, #260]	; (800202c <digital_clock+0x19b0>)
 8001f28:	2200      	movs	r2, #0
 8001f2a:	601a      	str	r2, [r3, #0]
                       c=4;
 8001f2c:	4b40      	ldr	r3, [pc, #256]	; (8002030 <digital_clock+0x19b4>)
 8001f2e:	2204      	movs	r2, #4
 8001f30:	601a      	str	r2, [r3, #0]
                       d=9;
 8001f32:	4b40      	ldr	r3, [pc, #256]	; (8002034 <digital_clock+0x19b8>)
 8001f34:	2209      	movs	r2, #9
 8001f36:	601a      	str	r2, [r3, #0]
                       d4_counter(a,b,c,d,f);
 8001f38:	4b3f      	ldr	r3, [pc, #252]	; (8002038 <digital_clock+0x19bc>)
 8001f3a:	6818      	ldr	r0, [r3, #0]
 8001f3c:	4b3b      	ldr	r3, [pc, #236]	; (800202c <digital_clock+0x19b0>)
 8001f3e:	6819      	ldr	r1, [r3, #0]
 8001f40:	4b3b      	ldr	r3, [pc, #236]	; (8002030 <digital_clock+0x19b4>)
 8001f42:	681a      	ldr	r2, [r3, #0]
 8001f44:	4b3b      	ldr	r3, [pc, #236]	; (8002034 <digital_clock+0x19b8>)
 8001f46:	681c      	ldr	r4, [r3, #0]
 8001f48:	687b      	ldr	r3, [r7, #4]
 8001f4a:	9300      	str	r3, [sp, #0]
 8001f4c:	0023      	movs	r3, r4
 8001f4e:	f000 f8d3 	bl	80020f8 <d4_counter>

                       b=0;
 8001f52:	4b36      	ldr	r3, [pc, #216]	; (800202c <digital_clock+0x19b0>)
 8001f54:	2200      	movs	r2, #0
 8001f56:	601a      	str	r2, [r3, #0]
                       c=3;
 8001f58:	4b35      	ldr	r3, [pc, #212]	; (8002030 <digital_clock+0x19b4>)
 8001f5a:	2203      	movs	r2, #3
 8001f5c:	601a      	str	r2, [r3, #0]
                       d=9;
 8001f5e:	4b35      	ldr	r3, [pc, #212]	; (8002034 <digital_clock+0x19b8>)
 8001f60:	2209      	movs	r2, #9
 8001f62:	601a      	str	r2, [r3, #0]
                       d4_counter(a,b,c,d,f);
 8001f64:	4b34      	ldr	r3, [pc, #208]	; (8002038 <digital_clock+0x19bc>)
 8001f66:	6818      	ldr	r0, [r3, #0]
 8001f68:	4b30      	ldr	r3, [pc, #192]	; (800202c <digital_clock+0x19b0>)
 8001f6a:	6819      	ldr	r1, [r3, #0]
 8001f6c:	4b30      	ldr	r3, [pc, #192]	; (8002030 <digital_clock+0x19b4>)
 8001f6e:	681a      	ldr	r2, [r3, #0]
 8001f70:	4b30      	ldr	r3, [pc, #192]	; (8002034 <digital_clock+0x19b8>)
 8001f72:	681c      	ldr	r4, [r3, #0]
 8001f74:	687b      	ldr	r3, [r7, #4]
 8001f76:	9300      	str	r3, [sp, #0]
 8001f78:	0023      	movs	r3, r4
 8001f7a:	f000 f8bd 	bl	80020f8 <d4_counter>

                       b=0;
 8001f7e:	4b2b      	ldr	r3, [pc, #172]	; (800202c <digital_clock+0x19b0>)
 8001f80:	2200      	movs	r2, #0
 8001f82:	601a      	str	r2, [r3, #0]
                       c=2;
 8001f84:	4b2a      	ldr	r3, [pc, #168]	; (8002030 <digital_clock+0x19b4>)
 8001f86:	2202      	movs	r2, #2
 8001f88:	601a      	str	r2, [r3, #0]
                       d=9;
 8001f8a:	4b2a      	ldr	r3, [pc, #168]	; (8002034 <digital_clock+0x19b8>)
 8001f8c:	2209      	movs	r2, #9
 8001f8e:	601a      	str	r2, [r3, #0]
                       d4_counter(a,b,c,d,f);
 8001f90:	4b29      	ldr	r3, [pc, #164]	; (8002038 <digital_clock+0x19bc>)
 8001f92:	6818      	ldr	r0, [r3, #0]
 8001f94:	4b25      	ldr	r3, [pc, #148]	; (800202c <digital_clock+0x19b0>)
 8001f96:	6819      	ldr	r1, [r3, #0]
 8001f98:	4b25      	ldr	r3, [pc, #148]	; (8002030 <digital_clock+0x19b4>)
 8001f9a:	681a      	ldr	r2, [r3, #0]
 8001f9c:	4b25      	ldr	r3, [pc, #148]	; (8002034 <digital_clock+0x19b8>)
 8001f9e:	681c      	ldr	r4, [r3, #0]
 8001fa0:	687b      	ldr	r3, [r7, #4]
 8001fa2:	9300      	str	r3, [sp, #0]
 8001fa4:	0023      	movs	r3, r4
 8001fa6:	f000 f8a7 	bl	80020f8 <d4_counter>

                       b=0;
 8001faa:	4b20      	ldr	r3, [pc, #128]	; (800202c <digital_clock+0x19b0>)
 8001fac:	2200      	movs	r2, #0
 8001fae:	601a      	str	r2, [r3, #0]
                       c=1;
 8001fb0:	4b1f      	ldr	r3, [pc, #124]	; (8002030 <digital_clock+0x19b4>)
 8001fb2:	2201      	movs	r2, #1
 8001fb4:	601a      	str	r2, [r3, #0]
                       d=9;
 8001fb6:	4b1f      	ldr	r3, [pc, #124]	; (8002034 <digital_clock+0x19b8>)
 8001fb8:	2209      	movs	r2, #9
 8001fba:	601a      	str	r2, [r3, #0]
                       d4_counter(a,b,c,d,f);
 8001fbc:	4b1e      	ldr	r3, [pc, #120]	; (8002038 <digital_clock+0x19bc>)
 8001fbe:	6818      	ldr	r0, [r3, #0]
 8001fc0:	4b1a      	ldr	r3, [pc, #104]	; (800202c <digital_clock+0x19b0>)
 8001fc2:	6819      	ldr	r1, [r3, #0]
 8001fc4:	4b1a      	ldr	r3, [pc, #104]	; (8002030 <digital_clock+0x19b4>)
 8001fc6:	681a      	ldr	r2, [r3, #0]
 8001fc8:	4b1a      	ldr	r3, [pc, #104]	; (8002034 <digital_clock+0x19b8>)
 8001fca:	681c      	ldr	r4, [r3, #0]
 8001fcc:	687b      	ldr	r3, [r7, #4]
 8001fce:	9300      	str	r3, [sp, #0]
 8001fd0:	0023      	movs	r3, r4
 8001fd2:	f000 f891 	bl	80020f8 <d4_counter>

                       b=0;
 8001fd6:	4b15      	ldr	r3, [pc, #84]	; (800202c <digital_clock+0x19b0>)
 8001fd8:	2200      	movs	r2, #0
 8001fda:	601a      	str	r2, [r3, #0]
                       c=0;
 8001fdc:	4b14      	ldr	r3, [pc, #80]	; (8002030 <digital_clock+0x19b4>)
 8001fde:	2200      	movs	r2, #0
 8001fe0:	601a      	str	r2, [r3, #0]
                       d=9;
 8001fe2:	4b14      	ldr	r3, [pc, #80]	; (8002034 <digital_clock+0x19b8>)
 8001fe4:	2209      	movs	r2, #9
 8001fe6:	601a      	str	r2, [r3, #0]
                       d4_counter(a,b,c,d,f);
 8001fe8:	4b13      	ldr	r3, [pc, #76]	; (8002038 <digital_clock+0x19bc>)
 8001fea:	6818      	ldr	r0, [r3, #0]
 8001fec:	4b0f      	ldr	r3, [pc, #60]	; (800202c <digital_clock+0x19b0>)
 8001fee:	6819      	ldr	r1, [r3, #0]
 8001ff0:	4b0f      	ldr	r3, [pc, #60]	; (8002030 <digital_clock+0x19b4>)
 8001ff2:	681a      	ldr	r2, [r3, #0]
 8001ff4:	4b0f      	ldr	r3, [pc, #60]	; (8002034 <digital_clock+0x19b8>)
 8001ff6:	681c      	ldr	r4, [r3, #0]
 8001ff8:	687b      	ldr	r3, [r7, #4]
 8001ffa:	9300      	str	r3, [sp, #0]
 8001ffc:	0023      	movs	r3, r4
 8001ffe:	f000 f87b 	bl	80020f8 <d4_counter>

                       delay(500000);
 8002002:	4b0e      	ldr	r3, [pc, #56]	; (800203c <digital_clock+0x19c0>)
 8002004:	0018      	movs	r0, r3
 8002006:	f7fe f905 	bl	8000214 <delay>
                       a=2;b=3;c=5;d=9;
 800200a:	4b0b      	ldr	r3, [pc, #44]	; (8002038 <digital_clock+0x19bc>)
 800200c:	2202      	movs	r2, #2
 800200e:	601a      	str	r2, [r3, #0]
 8002010:	4b06      	ldr	r3, [pc, #24]	; (800202c <digital_clock+0x19b0>)
 8002012:	2203      	movs	r2, #3
 8002014:	601a      	str	r2, [r3, #0]
 8002016:	4b06      	ldr	r3, [pc, #24]	; (8002030 <digital_clock+0x19b4>)
 8002018:	2205      	movs	r2, #5
 800201a:	601a      	str	r2, [r3, #0]
 800201c:	4b05      	ldr	r3, [pc, #20]	; (8002034 <digital_clock+0x19b8>)
 800201e:	2209      	movs	r2, #9
 8002020:	601a      	str	r2, [r3, #0]

}
 8002022:	46c0      	nop			; (mov r8, r8)
 8002024:	46bd      	mov	sp, r7
 8002026:	b003      	add	sp, #12
 8002028:	bd90      	pop	{r4, r7, pc}
 800202a:	46c0      	nop			; (mov r8, r8)
 800202c:	20000004 	.word	0x20000004
 8002030:	20000008 	.word	0x20000008
 8002034:	2000000c 	.word	0x2000000c
 8002038:	20000000 	.word	0x20000000
 800203c:	0007a120 	.word	0x0007a120

08002040 <sayac_setup>:

void sayac_setup(){
 8002040:	b580      	push	{r7, lr}
 8002042:	af00      	add	r7, sp, #0
	if(sayac==0){
 8002044:	4b2a      	ldr	r3, [pc, #168]	; (80020f0 <sayac_setup+0xb0>)
 8002046:	681b      	ldr	r3, [r3, #0]
 8002048:	2b00      	cmp	r3, #0
 800204a:	d110      	bne.n	800206e <sayac_setup+0x2e>
					 D1_digit_with_delay(0,100); // only D1
 800204c:	2164      	movs	r1, #100	; 0x64
 800204e:	2000      	movs	r0, #0
 8002050:	f7fe f992 	bl	8000378 <D1_digit_with_delay>
					 D2_digit_with_delay(0,100); // only D2
 8002054:	2164      	movs	r1, #100	; 0x64
 8002056:	2000      	movs	r0, #0
 8002058:	f7fe f9bc 	bl	80003d4 <D2_digit_with_delay>
					 D3_digit_with_delay(0,100); // only D3
 800205c:	2164      	movs	r1, #100	; 0x64
 800205e:	2000      	movs	r0, #0
 8002060:	f7fe f9e6 	bl	8000430 <D3_digit_with_delay>
					 D4_digit_with_delay(0,100); // only D4
 8002064:	2164      	movs	r1, #100	; 0x64
 8002066:	2000      	movs	r0, #0
 8002068:	f7fe fa0e 	bl	8000488 <D4_digit_with_delay>
 800206c:	e034      	b.n	80020d8 <sayac_setup+0x98>
				}
	else if(sayac==1)
 800206e:	4b20      	ldr	r3, [pc, #128]	; (80020f0 <sayac_setup+0xb0>)
 8002070:	681b      	ldr	r3, [r3, #0]
 8002072:	2b01      	cmp	r3, #1
 8002074:	d105      	bne.n	8002082 <sayac_setup+0x42>
		digital_clock(16000);
 8002076:	23fa      	movs	r3, #250	; 0xfa
 8002078:	019b      	lsls	r3, r3, #6
 800207a:	0018      	movs	r0, r3
 800207c:	f7fe fafe 	bl	800067c <digital_clock>
 8002080:	e02a      	b.n	80020d8 <sayac_setup+0x98>
	else if(sayac==2)
 8002082:	4b1b      	ldr	r3, [pc, #108]	; (80020f0 <sayac_setup+0xb0>)
 8002084:	681b      	ldr	r3, [r3, #0]
 8002086:	2b02      	cmp	r3, #2
 8002088:	d105      	bne.n	8002096 <sayac_setup+0x56>
		digital_clock(8000);
 800208a:	23fa      	movs	r3, #250	; 0xfa
 800208c:	015b      	lsls	r3, r3, #5
 800208e:	0018      	movs	r0, r3
 8002090:	f7fe faf4 	bl	800067c <digital_clock>
 8002094:	e020      	b.n	80020d8 <sayac_setup+0x98>
	else if(sayac==3)
 8002096:	4b16      	ldr	r3, [pc, #88]	; (80020f0 <sayac_setup+0xb0>)
 8002098:	681b      	ldr	r3, [r3, #0]
 800209a:	2b03      	cmp	r3, #3
 800209c:	d105      	bne.n	80020aa <sayac_setup+0x6a>
		digital_clock(4000);
 800209e:	23fa      	movs	r3, #250	; 0xfa
 80020a0:	011b      	lsls	r3, r3, #4
 80020a2:	0018      	movs	r0, r3
 80020a4:	f7fe faea 	bl	800067c <digital_clock>
 80020a8:	e016      	b.n	80020d8 <sayac_setup+0x98>
	else if(sayac==4)
 80020aa:	4b11      	ldr	r3, [pc, #68]	; (80020f0 <sayac_setup+0xb0>)
 80020ac:	681b      	ldr	r3, [r3, #0]
 80020ae:	2b04      	cmp	r3, #4
 80020b0:	d105      	bne.n	80020be <sayac_setup+0x7e>
		digital_clock(2000);
 80020b2:	23fa      	movs	r3, #250	; 0xfa
 80020b4:	00db      	lsls	r3, r3, #3
 80020b6:	0018      	movs	r0, r3
 80020b8:	f7fe fae0 	bl	800067c <digital_clock>
 80020bc:	e00c      	b.n	80020d8 <sayac_setup+0x98>
	else if(sayac==5)
 80020be:	4b0c      	ldr	r3, [pc, #48]	; (80020f0 <sayac_setup+0xb0>)
 80020c0:	681b      	ldr	r3, [r3, #0]
 80020c2:	2b05      	cmp	r3, #5
 80020c4:	d105      	bne.n	80020d2 <sayac_setup+0x92>
		digital_clock(1000);
 80020c6:	23fa      	movs	r3, #250	; 0xfa
 80020c8:	009b      	lsls	r3, r3, #2
 80020ca:	0018      	movs	r0, r3
 80020cc:	f7fe fad6 	bl	800067c <digital_clock>
 80020d0:	e002      	b.n	80020d8 <sayac_setup+0x98>
	else
		{sayac=0;}
 80020d2:	4b07      	ldr	r3, [pc, #28]	; (80020f0 <sayac_setup+0xb0>)
 80020d4:	2200      	movs	r2, #0
 80020d6:	601a      	str	r2, [r3, #0]
	 delay(100);
 80020d8:	2064      	movs	r0, #100	; 0x64
 80020da:	f7fe f89b 	bl	8000214 <delay>
	                d=d-1;
 80020de:	4b05      	ldr	r3, [pc, #20]	; (80020f4 <sayac_setup+0xb4>)
 80020e0:	681b      	ldr	r3, [r3, #0]
 80020e2:	1e5a      	subs	r2, r3, #1
 80020e4:	4b03      	ldr	r3, [pc, #12]	; (80020f4 <sayac_setup+0xb4>)
 80020e6:	601a      	str	r2, [r3, #0]
		}
 80020e8:	46c0      	nop			; (mov r8, r8)
 80020ea:	46bd      	mov	sp, r7
 80020ec:	bd80      	pop	{r7, pc}
 80020ee:	46c0      	nop			; (mov r8, r8)
 80020f0:	2000002c 	.word	0x2000002c
 80020f4:	2000000c 	.word	0x2000000c

080020f8 <d4_counter>:
void d4_counter(int a, int b, int c, int d, volatile uint32_t f){
 80020f8:	b580      	push	{r7, lr}
 80020fa:	b084      	sub	sp, #16
 80020fc:	af00      	add	r7, sp, #0
 80020fe:	60f8      	str	r0, [r7, #12]
 8002100:	60b9      	str	r1, [r7, #8]
 8002102:	607a      	str	r2, [r7, #4]
 8002104:	603b      	str	r3, [r7, #0]

            while(d>=0){
 8002106:	e019      	b.n	800213c <d4_counter+0x44>
                D1_digit_with_delay(a,f); // only D1
 8002108:	68fb      	ldr	r3, [r7, #12]
 800210a:	69ba      	ldr	r2, [r7, #24]
 800210c:	0011      	movs	r1, r2
 800210e:	0018      	movs	r0, r3
 8002110:	f7fe f932 	bl	8000378 <D1_digit_with_delay>
                D2_digit_with_delay(b,f); // only D2
 8002114:	68bb      	ldr	r3, [r7, #8]
 8002116:	69ba      	ldr	r2, [r7, #24]
 8002118:	0011      	movs	r1, r2
 800211a:	0018      	movs	r0, r3
 800211c:	f7fe f95a 	bl	80003d4 <D2_digit_with_delay>
                D3_digit_with_delay(c,f); // only D3
 8002120:	687b      	ldr	r3, [r7, #4]
 8002122:	69ba      	ldr	r2, [r7, #24]
 8002124:	0011      	movs	r1, r2
 8002126:	0018      	movs	r0, r3
 8002128:	f7fe f982 	bl	8000430 <D3_digit_with_delay>
                D4_digit_with_delay(d,f); // only D4
 800212c:	683b      	ldr	r3, [r7, #0]
 800212e:	69ba      	ldr	r2, [r7, #24]
 8002130:	0011      	movs	r1, r2
 8002132:	0018      	movs	r0, r3
 8002134:	f7fe f9a8 	bl	8000488 <D4_digit_with_delay>
                clearSSD();
 8002138:	f7fe f9d4 	bl	80004e4 <clearSSD>
            while(d>=0){
 800213c:	683b      	ldr	r3, [r7, #0]
 800213e:	2b00      	cmp	r3, #0
 8002140:	dae2      	bge.n	8002108 <d4_counter+0x10>
               }
}
 8002142:	46c0      	nop			; (mov r8, r8)
 8002144:	46c0      	nop			; (mov r8, r8)
 8002146:	46bd      	mov	sp, r7
 8002148:	b004      	add	sp, #16
 800214a:	bd80      	pop	{r7, pc}

0800214c <main>:
#include "stm32g0xx.h"
#include "bsp.h"
#include <time.h>
#define LEDDELAY    1600000
int main(void)
{
 800214c:	b580      	push	{r7, lr}
 800214e:	af00      	add	r7, sp, #0
				RCC->IOPENR |= (3U << 0);
 8002150:	4b25      	ldr	r3, [pc, #148]	; (80021e8 <main+0x9c>)
 8002152:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8002154:	4b24      	ldr	r3, [pc, #144]	; (80021e8 <main+0x9c>)
 8002156:	2103      	movs	r1, #3
 8002158:	430a      	orrs	r2, r1
 800215a:	635a      	str	r2, [r3, #52]	; 0x34

				set_input(1,0);
 800215c:	2100      	movs	r1, #0
 800215e:	2001      	movs	r0, #1
 8002160:	f7fe f868 	bl	8000234 <set_input>
				GPIOA->PUPDR |= (2U << 2*0); //enable pullup&pulldown
 8002164:	23a0      	movs	r3, #160	; 0xa0
 8002166:	05db      	lsls	r3, r3, #23
 8002168:	68da      	ldr	r2, [r3, #12]
 800216a:	23a0      	movs	r3, #160	; 0xa0
 800216c:	05db      	lsls	r3, r3, #23
 800216e:	2102      	movs	r1, #2
 8002170:	430a      	orrs	r2, r1
 8002172:	60da      	str	r2, [r3, #12]

	    	   set_output(1,1);
 8002174:	2101      	movs	r1, #1
 8002176:	2001      	movs	r0, #1
 8002178:	f7fe f886 	bl	8000288 <set_output>
	       	   set_output(1,4);
 800217c:	2104      	movs	r1, #4
 800217e:	2001      	movs	r0, #1
 8002180:	f7fe f882 	bl	8000288 <set_output>
	       	   set_output(1,5);
 8002184:	2105      	movs	r1, #5
 8002186:	2001      	movs	r0, #1
 8002188:	f7fe f87e 	bl	8000288 <set_output>
	       	   set_output(1,6);
 800218c:	2106      	movs	r1, #6
 800218e:	2001      	movs	r0, #1
 8002190:	f7fe f87a 	bl	8000288 <set_output>
	       	   set_output(1,7);
 8002194:	2107      	movs	r1, #7
 8002196:	2001      	movs	r0, #1
 8002198:	f7fe f876 	bl	8000288 <set_output>
	       	   set_output(1,8);
 800219c:	2108      	movs	r1, #8
 800219e:	2001      	movs	r0, #1
 80021a0:	f7fe f872 	bl	8000288 <set_output>
	       	   set_output(1,11);
 80021a4:	210b      	movs	r1, #11
 80021a6:	2001      	movs	r0, #1
 80021a8:	f7fe f86e 	bl	8000288 <set_output>
	       	   set_output(1,12);
 80021ac:	210c      	movs	r1, #12
 80021ae:	2001      	movs	r0, #1
 80021b0:	f7fe f86a 	bl	8000288 <set_output>

	       	   set_output(2,4);
 80021b4:	2104      	movs	r1, #4
 80021b6:	2002      	movs	r0, #2
 80021b8:	f7fe f866 	bl	8000288 <set_output>
	       	   set_output(2,5);
 80021bc:	2105      	movs	r1, #5
 80021be:	2002      	movs	r0, #2
 80021c0:	f7fe f862 	bl	8000288 <set_output>
	       	   set_output(2,6);
 80021c4:	2106      	movs	r1, #6
 80021c6:	2002      	movs	r0, #2
 80021c8:	f7fe f85e 	bl	8000288 <set_output>
	       	   set_output(2,9);
 80021cc:	2109      	movs	r1, #9
 80021ce:	2002      	movs	r0, #2
 80021d0:	f7fe f85a 	bl	8000288 <set_output>
	       	   set_input(2,3);
 80021d4:	2103      	movs	r1, #3
 80021d6:	2002      	movs	r0, #2
 80021d8:	f7fe f82c 	bl	8000234 <set_input>

	       	init_ext_interrupt();
 80021dc:	f7fe f892 	bl	8000304 <init_ext_interrupt>


	while (1)
	{
		sayac_setup();
 80021e0:	f7ff ff2e 	bl	8002040 <sayac_setup>
 80021e4:	e7fc      	b.n	80021e0 <main+0x94>
 80021e6:	46c0      	nop			; (mov r8, r8)
 80021e8:	40021000 	.word	0x40021000

080021ec <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80021ec:	480d      	ldr	r0, [pc, #52]	; (8002224 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80021ee:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80021f0:	f000 f826 	bl	8002240 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80021f4:	480c      	ldr	r0, [pc, #48]	; (8002228 <LoopForever+0x6>)
  ldr r1, =_edata
 80021f6:	490d      	ldr	r1, [pc, #52]	; (800222c <LoopForever+0xa>)
  ldr r2, =_sidata
 80021f8:	4a0d      	ldr	r2, [pc, #52]	; (8002230 <LoopForever+0xe>)
  movs r3, #0
 80021fa:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80021fc:	e002      	b.n	8002204 <LoopCopyDataInit>

080021fe <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80021fe:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8002200:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8002202:	3304      	adds	r3, #4

08002204 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8002204:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8002206:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8002208:	d3f9      	bcc.n	80021fe <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800220a:	4a0a      	ldr	r2, [pc, #40]	; (8002234 <LoopForever+0x12>)
  ldr r4, =_ebss
 800220c:	4c0a      	ldr	r4, [pc, #40]	; (8002238 <LoopForever+0x16>)
  movs r3, #0
 800220e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8002210:	e001      	b.n	8002216 <LoopFillZerobss>

08002212 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8002212:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8002214:	3204      	adds	r2, #4

08002216 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8002216:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8002218:	d3fb      	bcc.n	8002212 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800221a:	f000 f81d 	bl	8002258 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800221e:	f7ff ff95 	bl	800214c <main>

08002222 <LoopForever>:

LoopForever:
    b LoopForever
 8002222:	e7fe      	b.n	8002222 <LoopForever>
  ldr   r0, =_estack
 8002224:	20002000 	.word	0x20002000
  ldr r0, =_sdata
 8002228:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800222c:	20000010 	.word	0x20000010
  ldr r2, =_sidata
 8002230:	080022e8 	.word	0x080022e8
  ldr r2, =_sbss
 8002234:	20000010 	.word	0x20000010
  ldr r4, =_ebss
 8002238:	20000030 	.word	0x20000030

0800223c <ADC_COMP_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800223c:	e7fe      	b.n	800223c <ADC_COMP_IRQHandler>
	...

08002240 <SystemInit>:
  * @brief  Setup the microcontroller system.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8002240:	b580      	push	{r7, lr}
 8002242:	af00      	add	r7, sp, #0
  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8002244:	4b03      	ldr	r3, [pc, #12]	; (8002254 <SystemInit+0x14>)
 8002246:	2280      	movs	r2, #128	; 0x80
 8002248:	0512      	lsls	r2, r2, #20
 800224a:	609a      	str	r2, [r3, #8]
#endif
}
 800224c:	46c0      	nop			; (mov r8, r8)
 800224e:	46bd      	mov	sp, r7
 8002250:	bd80      	pop	{r7, pc}
 8002252:	46c0      	nop			; (mov r8, r8)
 8002254:	e000ed00 	.word	0xe000ed00

08002258 <__libc_init_array>:
 8002258:	b570      	push	{r4, r5, r6, lr}
 800225a:	2600      	movs	r6, #0
 800225c:	4d0c      	ldr	r5, [pc, #48]	; (8002290 <__libc_init_array+0x38>)
 800225e:	4c0d      	ldr	r4, [pc, #52]	; (8002294 <__libc_init_array+0x3c>)
 8002260:	1b64      	subs	r4, r4, r5
 8002262:	10a4      	asrs	r4, r4, #2
 8002264:	42a6      	cmp	r6, r4
 8002266:	d109      	bne.n	800227c <__libc_init_array+0x24>
 8002268:	2600      	movs	r6, #0
 800226a:	f000 f819 	bl	80022a0 <_init>
 800226e:	4d0a      	ldr	r5, [pc, #40]	; (8002298 <__libc_init_array+0x40>)
 8002270:	4c0a      	ldr	r4, [pc, #40]	; (800229c <__libc_init_array+0x44>)
 8002272:	1b64      	subs	r4, r4, r5
 8002274:	10a4      	asrs	r4, r4, #2
 8002276:	42a6      	cmp	r6, r4
 8002278:	d105      	bne.n	8002286 <__libc_init_array+0x2e>
 800227a:	bd70      	pop	{r4, r5, r6, pc}
 800227c:	00b3      	lsls	r3, r6, #2
 800227e:	58eb      	ldr	r3, [r5, r3]
 8002280:	4798      	blx	r3
 8002282:	3601      	adds	r6, #1
 8002284:	e7ee      	b.n	8002264 <__libc_init_array+0xc>
 8002286:	00b3      	lsls	r3, r6, #2
 8002288:	58eb      	ldr	r3, [r5, r3]
 800228a:	4798      	blx	r3
 800228c:	3601      	adds	r6, #1
 800228e:	e7f2      	b.n	8002276 <__libc_init_array+0x1e>
 8002290:	080022e0 	.word	0x080022e0
 8002294:	080022e0 	.word	0x080022e0
 8002298:	080022e0 	.word	0x080022e0
 800229c:	080022e4 	.word	0x080022e4

080022a0 <_init>:
 80022a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80022a2:	46c0      	nop			; (mov r8, r8)
 80022a4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80022a6:	bc08      	pop	{r3}
 80022a8:	469e      	mov	lr, r3
 80022aa:	4770      	bx	lr

080022ac <_fini>:
 80022ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80022ae:	46c0      	nop			; (mov r8, r8)
 80022b0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80022b2:	bc08      	pop	{r3}
 80022b4:	469e      	mov	lr, r3
 80022b6:	4770      	bx	lr
